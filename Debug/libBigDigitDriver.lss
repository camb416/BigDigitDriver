
libBigDigitDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000196  00800100  0000574a  000057de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000574a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000149  00800296  00800296  00005974  2**0
                  ALLOC
  3 .stab         000039e4  00000000  00000000  00005974  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001bcf  00000000  00000000  00009358  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000208  00000000  00000000  0000af27  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000002b1  00000000  00000000  0000b12f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000029bb  00000000  00000000  0000b3e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000016c6  00000000  00000000  0000dd9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000173c  00000000  00000000  0000f461  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000230  00000000  00000000  00010ba0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000483  00000000  00000000  00010dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000e9a  00000000  00000000  00011253  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000088  00000000  00000000  000120ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a4 00 	jmp	0x148	; 0x148 <__ctors_end>
       4:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
       8:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
       c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      10:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      14:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      18:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      1c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      20:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      24:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      28:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      2c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      30:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      34:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      38:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      3c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      40:	0c 94 a8 0e 	jmp	0x1d50	; 0x1d50 <__vector_16>
      44:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      48:	0c 94 7a 18 	jmp	0x30f4	; 0x30f4 <__vector_18>
      4c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      50:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      54:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      58:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      5c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      60:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      64:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <_ZN14BigDigitDriver9setLengthEi+0x18c>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <port_to_mode_PGM>:
      ea:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000f4 <port_to_output_PGM>:
      f4:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000fe <port_to_input_PGM>:
      fe:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000108 <digital_pin_to_port_PGM>:
     108:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     118:	03 03 03 03                                         ....

0000011c <digital_pin_to_bit_mask_PGM>:
     11c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     12c:	04 08 10 20                                         ... 

00000130 <digital_pin_to_timer_PGM>:
     130:	00 00 00 07 00 02 01 00 00 03 04 06 00 00 00 00     ................
     140:	00 00 00 00                                         ....

00000144 <__ctors_start>:
     144:	fa 0c       	add	r15, r10
     146:	fc 19       	sub	r31, r12

00000148 <__ctors_end>:
     148:	11 24       	eor	r1, r1
     14a:	1f be       	out	0x3f, r1	; 63
     14c:	cf ef       	ldi	r28, 0xFF	; 255
     14e:	d8 e0       	ldi	r29, 0x08	; 8
     150:	de bf       	out	0x3e, r29	; 62
     152:	cd bf       	out	0x3d, r28	; 61

00000154 <__do_copy_data>:
     154:	12 e0       	ldi	r17, 0x02	; 2
     156:	a0 e0       	ldi	r26, 0x00	; 0
     158:	b1 e0       	ldi	r27, 0x01	; 1
     15a:	ea e4       	ldi	r30, 0x4A	; 74
     15c:	f7 e5       	ldi	r31, 0x57	; 87
     15e:	02 c0       	rjmp	.+4      	; 0x164 <.do_copy_data_start>

00000160 <.do_copy_data_loop>:
     160:	05 90       	lpm	r0, Z+
     162:	0d 92       	st	X+, r0

00000164 <.do_copy_data_start>:
     164:	a6 39       	cpi	r26, 0x96	; 150
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <.do_copy_data_loop>

0000016a <__do_clear_bss>:
     16a:	13 e0       	ldi	r17, 0x03	; 3
     16c:	a6 e9       	ldi	r26, 0x96	; 150
     16e:	b2 e0       	ldi	r27, 0x02	; 2
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	af 3d       	cpi	r26, 0xDF	; 223
     176:	b1 07       	cpc	r27, r17
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>

0000017a <__do_global_ctors>:
     17a:	11 e0       	ldi	r17, 0x01	; 1
     17c:	c8 e4       	ldi	r28, 0x48	; 72
     17e:	d1 e0       	ldi	r29, 0x01	; 1
     180:	04 c0       	rjmp	.+8      	; 0x18a <.do_global_ctors_start>

00000182 <.do_global_ctors_loop>:
     182:	22 97       	sbiw	r28, 0x02	; 2
     184:	fe 01       	movw	r30, r28
     186:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <__tablejump__>

0000018a <.do_global_ctors_start>:
     18a:	c4 34       	cpi	r28, 0x44	; 68
     18c:	d1 07       	cpc	r29, r17
     18e:	c9 f7       	brne	.-14     	; 0x182 <.do_global_ctors_loop>
     190:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <main>
     194:	0c 94 a3 2b 	jmp	0x5746	; 0x5746 <_exit>

00000198 <__bad_interrupt>:
     198:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000019c <__cxa_pure_virtual>:
#include "BigDigitDriver.h"


#include <stdlib.h>

extern "C" void __cxa_pure_virtual()
     19c:	df 93       	push	r29
     19e:	cf 93       	push	r28
     1a0:	cd b7       	in	r28, 0x3d	; 61
     1a2:	de b7       	in	r29, 0x3e	; 62
{
  cli();
     1a4:	f8 94       	cli
     1a6:	ff cf       	rjmp	.-2      	; 0x1a6 <__cxa_pure_virtual+0xa>

000001a8 <_Z19__cxa_guard_acquirePx>:
{
	if (ptr)
		free(ptr);
}

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);}
     1a8:	df 93       	push	r29
     1aa:	cf 93       	push	r28
     1ac:	00 d0       	rcall	.+0      	; 0x1ae <_Z19__cxa_guard_acquirePx+0x6>
     1ae:	00 d0       	rcall	.+0      	; 0x1b0 <_Z19__cxa_guard_acquirePx+0x8>
     1b0:	cd b7       	in	r28, 0x3d	; 61
     1b2:	de b7       	in	r29, 0x3e	; 62
     1b4:	9a 83       	std	Y+2, r25	; 0x02
     1b6:	89 83       	std	Y+1, r24	; 0x01
     1b8:	e9 81       	ldd	r30, Y+1	; 0x01
     1ba:	fa 81       	ldd	r31, Y+2	; 0x02
     1bc:	80 81       	ld	r24, Z
     1be:	1c 82       	std	Y+4, r1	; 0x04
     1c0:	1b 82       	std	Y+3, r1	; 0x03
     1c2:	88 23       	and	r24, r24
     1c4:	21 f4       	brne	.+8      	; 0x1ce <_Z19__cxa_guard_acquirePx+0x26>
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	9c 83       	std	Y+4, r25	; 0x04
     1cc:	8b 83       	std	Y+3, r24	; 0x03
     1ce:	8b 81       	ldd	r24, Y+3	; 0x03
     1d0:	9c 81       	ldd	r25, Y+4	; 0x04
     1d2:	0f 90       	pop	r0
     1d4:	0f 90       	pop	r0
     1d6:	0f 90       	pop	r0
     1d8:	0f 90       	pop	r0
     1da:	cf 91       	pop	r28
     1dc:	df 91       	pop	r29
     1de:	08 95       	ret

000001e0 <_Z19__cxa_guard_releasePx>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;}
     1e0:	df 93       	push	r29
     1e2:	cf 93       	push	r28
     1e4:	00 d0       	rcall	.+0      	; 0x1e6 <_Z19__cxa_guard_releasePx+0x6>
     1e6:	cd b7       	in	r28, 0x3d	; 61
     1e8:	de b7       	in	r29, 0x3e	; 62
     1ea:	9a 83       	std	Y+2, r25	; 0x02
     1ec:	89 83       	std	Y+1, r24	; 0x01
     1ee:	e9 81       	ldd	r30, Y+1	; 0x01
     1f0:	fa 81       	ldd	r31, Y+2	; 0x02
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	80 83       	st	Z, r24
     1f6:	0f 90       	pop	r0
     1f8:	0f 90       	pop	r0
     1fa:	cf 91       	pop	r28
     1fc:	df 91       	pop	r29
     1fe:	08 95       	ret

00000200 <_Z17__cxa_guard_abortPx>:
void __cxa_guard_abort (__guard *) {}
     200:	df 93       	push	r29
     202:	cf 93       	push	r28
     204:	00 d0       	rcall	.+0      	; 0x206 <_Z17__cxa_guard_abortPx+0x6>
     206:	cd b7       	in	r28, 0x3d	; 61
     208:	de b7       	in	r29, 0x3e	; 62
     20a:	9a 83       	std	Y+2, r25	; 0x02
     20c:	89 83       	std	Y+1, r24	; 0x01
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	cf 91       	pop	r28
     214:	df 91       	pop	r29
     216:	08 95       	ret

00000218 <_ZN14BigDigitDriver13pushSliderValEi>:
	}
	// outputVal *= 10;
	return outputVal;
}

void BigDigitDriver::pushSliderVal(int sliderVal_in) {
     218:	df 93       	push	r29
     21a:	cf 93       	push	r28
     21c:	00 d0       	rcall	.+0      	; 0x21e <_ZN14BigDigitDriver13pushSliderValEi+0x6>
     21e:	00 d0       	rcall	.+0      	; 0x220 <_ZN14BigDigitDriver13pushSliderValEi+0x8>
     220:	00 d0       	rcall	.+0      	; 0x222 <_ZN14BigDigitDriver13pushSliderValEi+0xa>
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	9c 83       	std	Y+4, r25	; 0x04
     228:	8b 83       	std	Y+3, r24	; 0x03
     22a:	7e 83       	std	Y+6, r23	; 0x06
     22c:	6d 83       	std	Y+5, r22	; 0x05
	for (int i = (HISTORYLENGTH - 1); i > 0; i--) {
     22e:	89 e0       	ldi	r24, 0x09	; 9
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	9a 83       	std	Y+2, r25	; 0x02
     234:	89 83       	std	Y+1, r24	; 0x01
     236:	21 c0       	rjmp	.+66     	; 0x27a <_ZN14BigDigitDriver13pushSliderValEi+0x62>
		sliderHistory[i] = sliderHistory[i - 1];
     238:	69 81       	ldd	r22, Y+1	; 0x01
     23a:	7a 81       	ldd	r23, Y+2	; 0x02
     23c:	89 81       	ldd	r24, Y+1	; 0x01
     23e:	9a 81       	ldd	r25, Y+2	; 0x02
     240:	01 97       	sbiw	r24, 0x01	; 1
     242:	2b 81       	ldd	r18, Y+3	; 0x03
     244:	3c 81       	ldd	r19, Y+4	; 0x04
     246:	88 0f       	add	r24, r24
     248:	99 1f       	adc	r25, r25
     24a:	82 0f       	add	r24, r18
     24c:	93 1f       	adc	r25, r19
     24e:	fc 01       	movw	r30, r24
     250:	ef 58       	subi	r30, 0x8F	; 143
     252:	ff 4f       	sbci	r31, 0xFF	; 255
     254:	40 81       	ld	r20, Z
     256:	51 81       	ldd	r21, Z+1	; 0x01
     258:	2b 81       	ldd	r18, Y+3	; 0x03
     25a:	3c 81       	ldd	r19, Y+4	; 0x04
     25c:	cb 01       	movw	r24, r22
     25e:	88 0f       	add	r24, r24
     260:	99 1f       	adc	r25, r25
     262:	82 0f       	add	r24, r18
     264:	93 1f       	adc	r25, r19
     266:	fc 01       	movw	r30, r24
     268:	ef 58       	subi	r30, 0x8F	; 143
     26a:	ff 4f       	sbci	r31, 0xFF	; 255
     26c:	51 83       	std	Z+1, r21	; 0x01
     26e:	40 83       	st	Z, r20
	// outputVal *= 10;
	return outputVal;
}

void BigDigitDriver::pushSliderVal(int sliderVal_in) {
	for (int i = (HISTORYLENGTH - 1); i > 0; i--) {
     270:	89 81       	ldd	r24, Y+1	; 0x01
     272:	9a 81       	ldd	r25, Y+2	; 0x02
     274:	01 97       	sbiw	r24, 0x01	; 1
     276:	9a 83       	std	Y+2, r25	; 0x02
     278:	89 83       	std	Y+1, r24	; 0x01
     27a:	89 81       	ldd	r24, Y+1	; 0x01
     27c:	9a 81       	ldd	r25, Y+2	; 0x02
     27e:	18 16       	cp	r1, r24
     280:	19 06       	cpc	r1, r25
     282:	d4 f2       	brlt	.-76     	; 0x238 <_ZN14BigDigitDriver13pushSliderValEi+0x20>
		sliderHistory[i] = sliderHistory[i - 1];
	}
	sliderHistory[0] = sliderVal_in;
     284:	8b 81       	ldd	r24, Y+3	; 0x03
     286:	9c 81       	ldd	r25, Y+4	; 0x04
     288:	fc 01       	movw	r30, r24
     28a:	ef 58       	subi	r30, 0x8F	; 143
     28c:	ff 4f       	sbci	r31, 0xFF	; 255
     28e:	8d 81       	ldd	r24, Y+5	; 0x05
     290:	9e 81       	ldd	r25, Y+6	; 0x06
     292:	91 83       	std	Z+1, r25	; 0x01
     294:	80 83       	st	Z, r24
}
     296:	26 96       	adiw	r28, 0x06	; 6
     298:	0f b6       	in	r0, 0x3f	; 63
     29a:	f8 94       	cli
     29c:	de bf       	out	0x3e, r29	; 62
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	cd bf       	out	0x3d, r28	; 61
     2a2:	cf 91       	pop	r28
     2a4:	df 91       	pop	r29
     2a6:	08 95       	ret

000002a8 <_ZN14BigDigitDriver9clearMassEv>:
	for (int i = 0; i < HISTORYLENGTH; i++) {
		sliderHistory[i] = sliderVal;
	}
}

void BigDigitDriver::clearMass() {
     2a8:	df 93       	push	r29
     2aa:	cf 93       	push	r28
     2ac:	00 d0       	rcall	.+0      	; 0x2ae <_ZN14BigDigitDriver9clearMassEv+0x6>
     2ae:	00 d0       	rcall	.+0      	; 0x2b0 <_ZN14BigDigitDriver9clearMassEv+0x8>
     2b0:	cd b7       	in	r28, 0x3d	; 61
     2b2:	de b7       	in	r29, 0x3e	; 62
     2b4:	9c 83       	std	Y+4, r25	; 0x04
     2b6:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 3; i < 9; i++) {
     2b8:	83 e0       	ldi	r24, 0x03	; 3
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	9a 83       	std	Y+2, r25	; 0x02
     2be:	89 83       	std	Y+1, r24	; 0x01
     2c0:	13 c0       	rjmp	.+38     	; 0x2e8 <_ZN14BigDigitDriver9clearMassEv+0x40>
		digitArray[i] = 10;
     2c2:	89 81       	ldd	r24, Y+1	; 0x01
     2c4:	9a 81       	ldd	r25, Y+2	; 0x02
     2c6:	2b 81       	ldd	r18, Y+3	; 0x03
     2c8:	3c 81       	ldd	r19, Y+4	; 0x04
     2ca:	88 0f       	add	r24, r24
     2cc:	99 1f       	adc	r25, r25
     2ce:	82 0f       	add	r24, r18
     2d0:	93 1f       	adc	r25, r19
     2d2:	fc 01       	movw	r30, r24
     2d4:	f5 96       	adiw	r30, 0x35	; 53
     2d6:	8a e0       	ldi	r24, 0x0A	; 10
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	91 83       	std	Z+1, r25	; 0x01
     2dc:	80 83       	st	Z, r24
		sliderHistory[i] = sliderVal;
	}
}

void BigDigitDriver::clearMass() {
	for (int i = 3; i < 9; i++) {
     2de:	89 81       	ldd	r24, Y+1	; 0x01
     2e0:	9a 81       	ldd	r25, Y+2	; 0x02
     2e2:	01 96       	adiw	r24, 0x01	; 1
     2e4:	9a 83       	std	Y+2, r25	; 0x02
     2e6:	89 83       	std	Y+1, r24	; 0x01
     2e8:	89 81       	ldd	r24, Y+1	; 0x01
     2ea:	9a 81       	ldd	r25, Y+2	; 0x02
     2ec:	89 30       	cpi	r24, 0x09	; 9
     2ee:	91 05       	cpc	r25, r1
     2f0:	44 f3       	brlt	.-48     	; 0x2c2 <_ZN14BigDigitDriver9clearMassEv+0x1a>
		digitArray[i] = 10;
	}
}
     2f2:	0f 90       	pop	r0
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	0f 90       	pop	r0
     2fa:	cf 91       	pop	r28
     2fc:	df 91       	pop	r29
     2fe:	08 95       	ret

00000300 <_ZN14BigDigitDriver11clearLengthEv>:

void BigDigitDriver::clearLength() {
     300:	df 93       	push	r29
     302:	cf 93       	push	r28
     304:	00 d0       	rcall	.+0      	; 0x306 <_ZN14BigDigitDriver11clearLengthEv+0x6>
     306:	00 d0       	rcall	.+0      	; 0x308 <_ZN14BigDigitDriver11clearLengthEv+0x8>
     308:	cd b7       	in	r28, 0x3d	; 61
     30a:	de b7       	in	r29, 0x3e	; 62
     30c:	9c 83       	std	Y+4, r25	; 0x04
     30e:	8b 83       	std	Y+3, r24	; 0x03

	for (int i = 0; i < 3; i++) {
     310:	1a 82       	std	Y+2, r1	; 0x02
     312:	19 82       	std	Y+1, r1	; 0x01
     314:	13 c0       	rjmp	.+38     	; 0x33c <_ZN14BigDigitDriver11clearLengthEv+0x3c>
		digitArray[i] = 10;
     316:	89 81       	ldd	r24, Y+1	; 0x01
     318:	9a 81       	ldd	r25, Y+2	; 0x02
     31a:	2b 81       	ldd	r18, Y+3	; 0x03
     31c:	3c 81       	ldd	r19, Y+4	; 0x04
     31e:	88 0f       	add	r24, r24
     320:	99 1f       	adc	r25, r25
     322:	82 0f       	add	r24, r18
     324:	93 1f       	adc	r25, r19
     326:	fc 01       	movw	r30, r24
     328:	f5 96       	adiw	r30, 0x35	; 53
     32a:	8a e0       	ldi	r24, 0x0A	; 10
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	91 83       	std	Z+1, r25	; 0x01
     330:	80 83       	st	Z, r24
	}
}

void BigDigitDriver::clearLength() {

	for (int i = 0; i < 3; i++) {
     332:	89 81       	ldd	r24, Y+1	; 0x01
     334:	9a 81       	ldd	r25, Y+2	; 0x02
     336:	01 96       	adiw	r24, 0x01	; 1
     338:	9a 83       	std	Y+2, r25	; 0x02
     33a:	89 83       	std	Y+1, r24	; 0x01
     33c:	89 81       	ldd	r24, Y+1	; 0x01
     33e:	9a 81       	ldd	r25, Y+2	; 0x02
     340:	83 30       	cpi	r24, 0x03	; 3
     342:	91 05       	cpc	r25, r1
     344:	44 f3       	brlt	.-48     	; 0x316 <_ZN14BigDigitDriver11clearLengthEv+0x16>
		digitArray[i] = 10;
	}

}
     346:	0f 90       	pop	r0
     348:	0f 90       	pop	r0
     34a:	0f 90       	pop	r0
     34c:	0f 90       	pop	r0
     34e:	cf 91       	pop	r28
     350:	df 91       	pop	r29
     352:	08 95       	ret

00000354 <_ZN14BigDigitDriver19removeLeadingZeroesEv>:

void BigDigitDriver::removeLeadingZeroes() {
     354:	df 93       	push	r29
     356:	cf 93       	push	r28
     358:	cd b7       	in	r28, 0x3d	; 61
     35a:	de b7       	in	r29, 0x3e	; 62
     35c:	28 97       	sbiw	r28, 0x08	; 8
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	f8 94       	cli
     362:	de bf       	out	0x3e, r29	; 62
     364:	0f be       	out	0x3f, r0	; 63
     366:	cd bf       	out	0x3d, r28	; 61
     368:	98 87       	std	Y+8, r25	; 0x08
     36a:	8f 83       	std	Y+7, r24	; 0x07

	int totalDigs = 9;
     36c:	89 e0       	ldi	r24, 0x09	; 9
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	9e 83       	std	Y+6, r25	; 0x06
     372:	8d 83       	std	Y+5, r24	; 0x05
	if (isDino) {
     374:	ef 81       	ldd	r30, Y+7	; 0x07
     376:	f8 85       	ldd	r31, Y+8	; 0x08
     378:	86 81       	ldd	r24, Z+6	; 0x06
     37a:	88 23       	and	r24, r24
     37c:	29 f0       	breq	.+10     	; 0x388 <_ZN14BigDigitDriver19removeLeadingZeroesEv+0x34>
		totalDigs = 8;
     37e:	88 e0       	ldi	r24, 0x08	; 8
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	9e 83       	std	Y+6, r25	; 0x06
     384:	8d 83       	std	Y+5, r24	; 0x05
     386:	04 c0       	rjmp	.+8      	; 0x390 <_ZN14BigDigitDriver19removeLeadingZeroesEv+0x3c>
	} else {
		totalDigs = 7;
     388:	87 e0       	ldi	r24, 0x07	; 7
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	9e 83       	std	Y+6, r25	; 0x06
     38e:	8d 83       	std	Y+5, r24	; 0x05
	}

	for (int i = 0; i < (totalDigs - 6); i++) {
     390:	1c 82       	std	Y+4, r1	; 0x04
     392:	1b 82       	std	Y+3, r1	; 0x03
     394:	2f c0       	rjmp	.+94     	; 0x3f4 <_ZN14BigDigitDriver19removeLeadingZeroesEv+0xa0>
		// loop through length
		if (digitArray[i] == 0) {
     396:	8b 81       	ldd	r24, Y+3	; 0x03
     398:	9c 81       	ldd	r25, Y+4	; 0x04
     39a:	2f 81       	ldd	r18, Y+7	; 0x07
     39c:	38 85       	ldd	r19, Y+8	; 0x08
     39e:	88 0f       	add	r24, r24
     3a0:	99 1f       	adc	r25, r25
     3a2:	82 0f       	add	r24, r18
     3a4:	93 1f       	adc	r25, r19
     3a6:	fc 01       	movw	r30, r24
     3a8:	f5 96       	adiw	r30, 0x35	; 53
     3aa:	80 81       	ld	r24, Z
     3ac:	91 81       	ldd	r25, Z+1	; 0x01
     3ae:	00 97       	sbiw	r24, 0x00	; 0
     3b0:	59 f5       	brne	.+86     	; 0x408 <_ZN14BigDigitDriver19removeLeadingZeroesEv+0xb4>
			digitArray[i] += 10;
     3b2:	6b 81       	ldd	r22, Y+3	; 0x03
     3b4:	7c 81       	ldd	r23, Y+4	; 0x04
     3b6:	8b 81       	ldd	r24, Y+3	; 0x03
     3b8:	9c 81       	ldd	r25, Y+4	; 0x04
     3ba:	2f 81       	ldd	r18, Y+7	; 0x07
     3bc:	38 85       	ldd	r19, Y+8	; 0x08
     3be:	88 0f       	add	r24, r24
     3c0:	99 1f       	adc	r25, r25
     3c2:	82 0f       	add	r24, r18
     3c4:	93 1f       	adc	r25, r19
     3c6:	fc 01       	movw	r30, r24
     3c8:	f5 96       	adiw	r30, 0x35	; 53
     3ca:	80 81       	ld	r24, Z
     3cc:	91 81       	ldd	r25, Z+1	; 0x01
     3ce:	ac 01       	movw	r20, r24
     3d0:	46 5f       	subi	r20, 0xF6	; 246
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	2f 81       	ldd	r18, Y+7	; 0x07
     3d6:	38 85       	ldd	r19, Y+8	; 0x08
     3d8:	cb 01       	movw	r24, r22
     3da:	88 0f       	add	r24, r24
     3dc:	99 1f       	adc	r25, r25
     3de:	82 0f       	add	r24, r18
     3e0:	93 1f       	adc	r25, r19
     3e2:	fc 01       	movw	r30, r24
     3e4:	f5 96       	adiw	r30, 0x35	; 53
     3e6:	51 83       	std	Z+1, r21	; 0x01
     3e8:	40 83       	st	Z, r20
		totalDigs = 8;
	} else {
		totalDigs = 7;
	}

	for (int i = 0; i < (totalDigs - 6); i++) {
     3ea:	8b 81       	ldd	r24, Y+3	; 0x03
     3ec:	9c 81       	ldd	r25, Y+4	; 0x04
     3ee:	01 96       	adiw	r24, 0x01	; 1
     3f0:	9c 83       	std	Y+4, r25	; 0x04
     3f2:	8b 83       	std	Y+3, r24	; 0x03
     3f4:	8d 81       	ldd	r24, Y+5	; 0x05
     3f6:	9e 81       	ldd	r25, Y+6	; 0x06
     3f8:	9c 01       	movw	r18, r24
     3fa:	26 50       	subi	r18, 0x06	; 6
     3fc:	30 40       	sbci	r19, 0x00	; 0
     3fe:	8b 81       	ldd	r24, Y+3	; 0x03
     400:	9c 81       	ldd	r25, Y+4	; 0x04
     402:	82 17       	cp	r24, r18
     404:	93 07       	cpc	r25, r19
     406:	3c f2       	brlt	.-114    	; 0x396 <_ZN14BigDigitDriver19removeLeadingZeroesEv+0x42>
			break;
		}

	}

	for (int i = 3; i < 7; i++) {
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	9a 83       	std	Y+2, r25	; 0x02
     40e:	89 83       	std	Y+1, r24	; 0x01
     410:	2f c0       	rjmp	.+94     	; 0x470 <_ZN14BigDigitDriver19removeLeadingZeroesEv+0x11c>
		// loop through mass
		if (digitArray[i] == 0) {
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	9a 81       	ldd	r25, Y+2	; 0x02
     416:	2f 81       	ldd	r18, Y+7	; 0x07
     418:	38 85       	ldd	r19, Y+8	; 0x08
     41a:	88 0f       	add	r24, r24
     41c:	99 1f       	adc	r25, r25
     41e:	82 0f       	add	r24, r18
     420:	93 1f       	adc	r25, r19
     422:	fc 01       	movw	r30, r24
     424:	f5 96       	adiw	r30, 0x35	; 53
     426:	80 81       	ld	r24, Z
     428:	91 81       	ldd	r25, Z+1	; 0x01
     42a:	00 97       	sbiw	r24, 0x00	; 0
     42c:	31 f5       	brne	.+76     	; 0x47a <_ZN14BigDigitDriver19removeLeadingZeroesEv+0x126>
			digitArray[i] += 10;
     42e:	69 81       	ldd	r22, Y+1	; 0x01
     430:	7a 81       	ldd	r23, Y+2	; 0x02
     432:	89 81       	ldd	r24, Y+1	; 0x01
     434:	9a 81       	ldd	r25, Y+2	; 0x02
     436:	2f 81       	ldd	r18, Y+7	; 0x07
     438:	38 85       	ldd	r19, Y+8	; 0x08
     43a:	88 0f       	add	r24, r24
     43c:	99 1f       	adc	r25, r25
     43e:	82 0f       	add	r24, r18
     440:	93 1f       	adc	r25, r19
     442:	fc 01       	movw	r30, r24
     444:	f5 96       	adiw	r30, 0x35	; 53
     446:	80 81       	ld	r24, Z
     448:	91 81       	ldd	r25, Z+1	; 0x01
     44a:	ac 01       	movw	r20, r24
     44c:	46 5f       	subi	r20, 0xF6	; 246
     44e:	5f 4f       	sbci	r21, 0xFF	; 255
     450:	2f 81       	ldd	r18, Y+7	; 0x07
     452:	38 85       	ldd	r19, Y+8	; 0x08
     454:	cb 01       	movw	r24, r22
     456:	88 0f       	add	r24, r24
     458:	99 1f       	adc	r25, r25
     45a:	82 0f       	add	r24, r18
     45c:	93 1f       	adc	r25, r19
     45e:	fc 01       	movw	r30, r24
     460:	f5 96       	adiw	r30, 0x35	; 53
     462:	51 83       	std	Z+1, r21	; 0x01
     464:	40 83       	st	Z, r20
			break;
		}

	}

	for (int i = 3; i < 7; i++) {
     466:	89 81       	ldd	r24, Y+1	; 0x01
     468:	9a 81       	ldd	r25, Y+2	; 0x02
     46a:	01 96       	adiw	r24, 0x01	; 1
     46c:	9a 83       	std	Y+2, r25	; 0x02
     46e:	89 83       	std	Y+1, r24	; 0x01
     470:	89 81       	ldd	r24, Y+1	; 0x01
     472:	9a 81       	ldd	r25, Y+2	; 0x02
     474:	87 30       	cpi	r24, 0x07	; 7
     476:	91 05       	cpc	r25, r1
     478:	64 f2       	brlt	.-104    	; 0x412 <_ZN14BigDigitDriver19removeLeadingZeroesEv+0xbe>
			digitArray[i] += 10;
		} else {
			break;
		}
	}
}
     47a:	28 96       	adiw	r28, 0x08	; 8
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	f8 94       	cli
     480:	de bf       	out	0x3e, r29	; 62
     482:	0f be       	out	0x3f, r0	; 63
     484:	cd bf       	out	0x3d, r28	; 61
     486:	cf 91       	pop	r28
     488:	df 91       	pop	r29
     48a:	08 95       	ret

0000048c <_ZN14BigDigitDriver11initHistoryEv>:
		delay(1);
	}

}

void BigDigitDriver::initHistory() {
     48c:	df 93       	push	r29
     48e:	cf 93       	push	r28
     490:	00 d0       	rcall	.+0      	; 0x492 <_ZN14BigDigitDriver11initHistoryEv+0x6>
     492:	00 d0       	rcall	.+0      	; 0x494 <_ZN14BigDigitDriver11initHistoryEv+0x8>
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
     498:	9c 83       	std	Y+4, r25	; 0x04
     49a:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 0; i < HISTORYLENGTH; i++) {
     49c:	1a 82       	std	Y+2, r1	; 0x02
     49e:	19 82       	std	Y+1, r1	; 0x01
     4a0:	12 c0       	rjmp	.+36     	; 0x4c6 <_ZN14BigDigitDriver11initHistoryEv+0x3a>
		sliderHistory[i] = 0;
     4a2:	89 81       	ldd	r24, Y+1	; 0x01
     4a4:	9a 81       	ldd	r25, Y+2	; 0x02
     4a6:	2b 81       	ldd	r18, Y+3	; 0x03
     4a8:	3c 81       	ldd	r19, Y+4	; 0x04
     4aa:	88 0f       	add	r24, r24
     4ac:	99 1f       	adc	r25, r25
     4ae:	82 0f       	add	r24, r18
     4b0:	93 1f       	adc	r25, r19
     4b2:	fc 01       	movw	r30, r24
     4b4:	ef 58       	subi	r30, 0x8F	; 143
     4b6:	ff 4f       	sbci	r31, 0xFF	; 255
     4b8:	11 82       	std	Z+1, r1	; 0x01
     4ba:	10 82       	st	Z, r1
	}

}

void BigDigitDriver::initHistory() {
	for (int i = 0; i < HISTORYLENGTH; i++) {
     4bc:	89 81       	ldd	r24, Y+1	; 0x01
     4be:	9a 81       	ldd	r25, Y+2	; 0x02
     4c0:	01 96       	adiw	r24, 0x01	; 1
     4c2:	9a 83       	std	Y+2, r25	; 0x02
     4c4:	89 83       	std	Y+1, r24	; 0x01
     4c6:	89 81       	ldd	r24, Y+1	; 0x01
     4c8:	9a 81       	ldd	r25, Y+2	; 0x02
     4ca:	8a 30       	cpi	r24, 0x0A	; 10
     4cc:	91 05       	cpc	r25, r1
     4ce:	4c f3       	brlt	.-46     	; 0x4a2 <_ZN14BigDigitDriver11initHistoryEv+0x16>
		sliderHistory[i] = 0;
	}
}
     4d0:	0f 90       	pop	r0
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	0f 90       	pop	r0
     4d8:	cf 91       	pop	r28
     4da:	df 91       	pop	r29
     4dc:	08 95       	ret

000004de <_ZN14BigDigitDriver12shiftOutSlowEhhhh>:

	}
}

void BigDigitDriver::shiftOutSlow(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder,
		uint8_t val) {
     4de:	0f 93       	push	r16
     4e0:	df 93       	push	r29
     4e2:	cf 93       	push	r28
     4e4:	cd b7       	in	r28, 0x3d	; 61
     4e6:	de b7       	in	r29, 0x3e	; 62
     4e8:	28 97       	sbiw	r28, 0x08	; 8
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	de bf       	out	0x3e, r29	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	cd bf       	out	0x3d, r28	; 61
     4f4:	9c 83       	std	Y+4, r25	; 0x04
     4f6:	8b 83       	std	Y+3, r24	; 0x03
     4f8:	6d 83       	std	Y+5, r22	; 0x05
     4fa:	4e 83       	std	Y+6, r20	; 0x06
     4fc:	2f 83       	std	Y+7, r18	; 0x07
     4fe:	08 87       	std	Y+8, r16	; 0x08
	for (int i = 0; i < 8; i++) {
     500:	1a 82       	std	Y+2, r1	; 0x02
     502:	19 82       	std	Y+1, r1	; 0x01
     504:	4c c0       	rjmp	.+152    	; 0x59e <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0xc0>
		if (bitOrder == LSBFIRST) {
     506:	8f 81       	ldd	r24, Y+7	; 0x07
     508:	88 23       	and	r24, r24
     50a:	89 f4       	brne	.+34     	; 0x52e <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0x50>
			digitalWrite(dataPin, !!(val & (1 << i)));
     50c:	88 85       	ldd	r24, Y+8	; 0x08
     50e:	88 2f       	mov	r24, r24
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	09 80       	ldd	r0, Y+1	; 0x01
     514:	02 c0       	rjmp	.+4      	; 0x51a <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0x3c>
     516:	95 95       	asr	r25
     518:	87 95       	ror	r24
     51a:	0a 94       	dec	r0
     51c:	e2 f7       	brpl	.-8      	; 0x516 <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0x38>
     51e:	81 70       	andi	r24, 0x01	; 1
     520:	90 70       	andi	r25, 0x00	; 0
     522:	98 2f       	mov	r25, r24
     524:	8d 81       	ldd	r24, Y+5	; 0x05
     526:	69 2f       	mov	r22, r25
     528:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
     52c:	19 c0       	rjmp	.+50     	; 0x560 <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0x82>
		} else {
			digitalWrite(dataPin, !!(val & (1 << (7 - i))));
     52e:	88 85       	ldd	r24, Y+8	; 0x08
     530:	48 2f       	mov	r20, r24
     532:	50 e0       	ldi	r21, 0x00	; 0
     534:	27 e0       	ldi	r18, 0x07	; 7
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	89 81       	ldd	r24, Y+1	; 0x01
     53a:	9a 81       	ldd	r25, Y+2	; 0x02
     53c:	b9 01       	movw	r22, r18
     53e:	68 1b       	sub	r22, r24
     540:	79 0b       	sbc	r23, r25
     542:	cb 01       	movw	r24, r22
     544:	9a 01       	movw	r18, r20
     546:	02 c0       	rjmp	.+4      	; 0x54c <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0x6e>
     548:	35 95       	asr	r19
     54a:	27 95       	ror	r18
     54c:	8a 95       	dec	r24
     54e:	e2 f7       	brpl	.-8      	; 0x548 <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0x6a>
     550:	c9 01       	movw	r24, r18
     552:	81 70       	andi	r24, 0x01	; 1
     554:	90 70       	andi	r25, 0x00	; 0
     556:	98 2f       	mov	r25, r24
     558:	8d 81       	ldd	r24, Y+5	; 0x05
     55a:	69 2f       	mov	r22, r25
     55c:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
		}
		delay(1);
     560:	61 e0       	ldi	r22, 0x01	; 1
     562:	70 e0       	ldi	r23, 0x00	; 0
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
		digitalWrite(clockPin, HIGH);
     56c:	8e 81       	ldd	r24, Y+6	; 0x06
     56e:	61 e0       	ldi	r22, 0x01	; 1
     570:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
		delay(1);
     574:	61 e0       	ldi	r22, 0x01	; 1
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
		digitalWrite(clockPin, LOW);
     580:	8e 81       	ldd	r24, Y+6	; 0x06
     582:	60 e0       	ldi	r22, 0x00	; 0
     584:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
		delay(1);
     588:	61 e0       	ldi	r22, 0x01	; 1
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
	}
}

void BigDigitDriver::shiftOutSlow(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder,
		uint8_t val) {
	for (int i = 0; i < 8; i++) {
     594:	89 81       	ldd	r24, Y+1	; 0x01
     596:	9a 81       	ldd	r25, Y+2	; 0x02
     598:	01 96       	adiw	r24, 0x01	; 1
     59a:	9a 83       	std	Y+2, r25	; 0x02
     59c:	89 83       	std	Y+1, r24	; 0x01
     59e:	89 81       	ldd	r24, Y+1	; 0x01
     5a0:	9a 81       	ldd	r25, Y+2	; 0x02
     5a2:	88 30       	cpi	r24, 0x08	; 8
     5a4:	91 05       	cpc	r25, r1
     5a6:	0c f4       	brge	.+2      	; 0x5aa <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0xcc>
     5a8:	ae cf       	rjmp	.-164    	; 0x506 <_ZN14BigDigitDriver12shiftOutSlowEhhhh+0x28>
		delay(1);
		digitalWrite(clockPin, LOW);
		delay(1);
	}

}
     5aa:	28 96       	adiw	r28, 0x08	; 8
     5ac:	0f b6       	in	r0, 0x3f	; 63
     5ae:	f8 94       	cli
     5b0:	de bf       	out	0x3e, r29	; 62
     5b2:	0f be       	out	0x3f, r0	; 63
     5b4:	cd bf       	out	0x3d, r28	; 61
     5b6:	cf 91       	pop	r28
     5b8:	df 91       	pop	r29
     5ba:	0f 91       	pop	r16
     5bc:	08 95       	ret

000005be <_ZN14BigDigitDriver14updateDisplaysEv>:
			break;
		}
	}
}

void BigDigitDriver::updateDisplays() {
     5be:	df 93       	push	r29
     5c0:	cf 93       	push	r28
     5c2:	cd b7       	in	r28, 0x3d	; 61
     5c4:	de b7       	in	r29, 0x3e	; 62
     5c6:	27 97       	sbiw	r28, 0x07	; 7
     5c8:	0f b6       	in	r0, 0x3f	; 63
     5ca:	f8 94       	cli
     5cc:	de bf       	out	0x3e, r29	; 62
     5ce:	0f be       	out	0x3f, r0	; 63
     5d0:	cd bf       	out	0x3d, r28	; 61
     5d2:	9f 83       	std	Y+7, r25	; 0x07
     5d4:	8e 83       	std	Y+6, r24	; 0x06

	// check for new info
	boolean isUpdated = false;
     5d6:	1d 82       	std	Y+5, r1	; 0x05
	for (int i = 0; i < 9; i++) {
     5d8:	1c 82       	std	Y+4, r1	; 0x04
     5da:	1b 82       	std	Y+3, r1	; 0x03
     5dc:	24 c0       	rjmp	.+72     	; 0x626 <_ZN14BigDigitDriver14updateDisplaysEv+0x68>
		if (prevDigits[i] != digitArray[i]) {
     5de:	8b 81       	ldd	r24, Y+3	; 0x03
     5e0:	9c 81       	ldd	r25, Y+4	; 0x04
     5e2:	2e 81       	ldd	r18, Y+6	; 0x06
     5e4:	3f 81       	ldd	r19, Y+7	; 0x07
     5e6:	88 0f       	add	r24, r24
     5e8:	99 1f       	adc	r25, r25
     5ea:	82 0f       	add	r24, r18
     5ec:	93 1f       	adc	r25, r19
     5ee:	fc 01       	movw	r30, r24
     5f0:	e9 5b       	subi	r30, 0xB9	; 185
     5f2:	ff 4f       	sbci	r31, 0xFF	; 255
     5f4:	40 81       	ld	r20, Z
     5f6:	51 81       	ldd	r21, Z+1	; 0x01
     5f8:	8b 81       	ldd	r24, Y+3	; 0x03
     5fa:	9c 81       	ldd	r25, Y+4	; 0x04
     5fc:	2e 81       	ldd	r18, Y+6	; 0x06
     5fe:	3f 81       	ldd	r19, Y+7	; 0x07
     600:	88 0f       	add	r24, r24
     602:	99 1f       	adc	r25, r25
     604:	82 0f       	add	r24, r18
     606:	93 1f       	adc	r25, r19
     608:	fc 01       	movw	r30, r24
     60a:	f5 96       	adiw	r30, 0x35	; 53
     60c:	80 81       	ld	r24, Z
     60e:	91 81       	ldd	r25, Z+1	; 0x01
     610:	48 17       	cp	r20, r24
     612:	59 07       	cpc	r21, r25
     614:	19 f0       	breq	.+6      	; 0x61c <_ZN14BigDigitDriver14updateDisplaysEv+0x5e>
			isUpdated = true;
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	8d 83       	std	Y+5, r24	; 0x05
     61a:	0a c0       	rjmp	.+20     	; 0x630 <_ZN14BigDigitDriver14updateDisplaysEv+0x72>

void BigDigitDriver::updateDisplays() {

	// check for new info
	boolean isUpdated = false;
	for (int i = 0; i < 9; i++) {
     61c:	8b 81       	ldd	r24, Y+3	; 0x03
     61e:	9c 81       	ldd	r25, Y+4	; 0x04
     620:	01 96       	adiw	r24, 0x01	; 1
     622:	9c 83       	std	Y+4, r25	; 0x04
     624:	8b 83       	std	Y+3, r24	; 0x03
     626:	8b 81       	ldd	r24, Y+3	; 0x03
     628:	9c 81       	ldd	r25, Y+4	; 0x04
     62a:	89 30       	cpi	r24, 0x09	; 9
     62c:	91 05       	cpc	r25, r1
     62e:	bc f2       	brlt	.-82     	; 0x5de <_ZN14BigDigitDriver14updateDisplaysEv+0x20>
		if (prevDigits[i] != digitArray[i]) {
			isUpdated = true;
			break;
		}
	}
	removeLeadingZeroes();
     630:	8e 81       	ldd	r24, Y+6	; 0x06
     632:	9f 81       	ldd	r25, Y+7	; 0x07
     634:	0e 94 aa 01 	call	0x354	; 0x354 <_ZN14BigDigitDriver19removeLeadingZeroesEv>

	if (isUpdated) {
     638:	8d 81       	ldd	r24, Y+5	; 0x05
     63a:	88 23       	and	r24, r24
     63c:	09 f4       	brne	.+2      	; 0x640 <_ZN14BigDigitDriver14updateDisplaysEv+0x82>
     63e:	83 c0       	rjmp	.+262    	; 0x746 <_ZN14BigDigitDriver14updateDisplaysEv+0x188>
		// Serial.println("UPDATING DISPLAY");

		//////////////////////////////////////////////////////
		// WRITE TO THE BDD BOARDS ///////////////////////////
		//////////////////////////////////////////////////////
		digitalWrite(latchPin, LOW);
     640:	ee 81       	ldd	r30, Y+6	; 0x06
     642:	ff 81       	ldd	r31, Y+7	; 0x07
     644:	80 81       	ld	r24, Z
     646:	91 81       	ldd	r25, Z+1	; 0x01
     648:	60 e0       	ldi	r22, 0x00	; 0
     64a:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
		delay(1);
     64e:	61 e0       	ldi	r22, 0x01	; 1
     650:	70 e0       	ldi	r23, 0x00	; 0
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>

		// first size bytes (mass value)
		for (int i = 0; i < 9; i++) {
     65a:	1a 82       	std	Y+2, r1	; 0x02
     65c:	19 82       	std	Y+1, r1	; 0x01
     65e:	5c c0       	rjmp	.+184    	; 0x718 <_ZN14BigDigitDriver14updateDisplaysEv+0x15a>
			shiftOut(dataPin, clockPin, MSBFIRST, dataArray[digitArray[i]]);
     660:	ee 81       	ldd	r30, Y+6	; 0x06
     662:	ff 81       	ldd	r31, Y+7	; 0x07
     664:	84 81       	ldd	r24, Z+4	; 0x04
     666:	95 81       	ldd	r25, Z+5	; 0x05
     668:	48 2f       	mov	r20, r24
     66a:	ee 81       	ldd	r30, Y+6	; 0x06
     66c:	ff 81       	ldd	r31, Y+7	; 0x07
     66e:	82 81       	ldd	r24, Z+2	; 0x02
     670:	93 81       	ldd	r25, Z+3	; 0x03
     672:	58 2f       	mov	r21, r24
     674:	89 81       	ldd	r24, Y+1	; 0x01
     676:	9a 81       	ldd	r25, Y+2	; 0x02
     678:	2e 81       	ldd	r18, Y+6	; 0x06
     67a:	3f 81       	ldd	r19, Y+7	; 0x07
     67c:	88 0f       	add	r24, r24
     67e:	99 1f       	adc	r25, r25
     680:	82 0f       	add	r24, r18
     682:	93 1f       	adc	r25, r19
     684:	fc 01       	movw	r30, r24
     686:	f5 96       	adiw	r30, 0x35	; 53
     688:	20 81       	ld	r18, Z
     68a:	31 81       	ldd	r19, Z+1	; 0x01
     68c:	8e 81       	ldd	r24, Y+6	; 0x06
     68e:	9f 81       	ldd	r25, Y+7	; 0x07
     690:	82 0f       	add	r24, r18
     692:	93 1f       	adc	r25, r19
     694:	fc 01       	movw	r30, r24
     696:	ba 96       	adiw	r30, 0x2a	; 42
     698:	90 81       	ld	r25, Z
     69a:	84 2f       	mov	r24, r20
     69c:	65 2f       	mov	r22, r21
     69e:	41 e0       	ldi	r20, 0x01	; 1
     6a0:	29 2f       	mov	r18, r25
     6a2:	0e 94 cc 10 	call	0x2198	; 0x2198 <shiftOut>
			Serial.print(digitArray[i]);
     6a6:	89 81       	ldd	r24, Y+1	; 0x01
     6a8:	9a 81       	ldd	r25, Y+2	; 0x02
     6aa:	2e 81       	ldd	r18, Y+6	; 0x06
     6ac:	3f 81       	ldd	r19, Y+7	; 0x07
     6ae:	88 0f       	add	r24, r24
     6b0:	99 1f       	adc	r25, r25
     6b2:	82 0f       	add	r24, r18
     6b4:	93 1f       	adc	r25, r19
     6b6:	fc 01       	movw	r30, r24
     6b8:	f5 96       	adiw	r30, 0x35	; 53
     6ba:	20 81       	ld	r18, Z
     6bc:	31 81       	ldd	r19, Z+1	; 0x01
     6be:	87 ec       	ldi	r24, 0xC7	; 199
     6c0:	93 e0       	ldi	r25, 0x03	; 3
     6c2:	b9 01       	movw	r22, r18
     6c4:	4a e0       	ldi	r20, 0x0A	; 10
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	0e 94 9f 1b 	call	0x373e	; 0x373e <_ZN5Print5printEii>
			Serial.print(" ");
     6cc:	87 ec       	ldi	r24, 0xC7	; 199
     6ce:	93 e0       	ldi	r25, 0x03	; 3
     6d0:	20 e0       	ldi	r18, 0x00	; 0
     6d2:	31 e0       	ldi	r19, 0x01	; 1
     6d4:	b9 01       	movw	r22, r18
     6d6:	0e 94 6d 1a 	call	0x34da	; 0x34da <_ZN5Print5printEPKc>
			prevDigits[i] = digitArray[i];
     6da:	69 81       	ldd	r22, Y+1	; 0x01
     6dc:	7a 81       	ldd	r23, Y+2	; 0x02
     6de:	89 81       	ldd	r24, Y+1	; 0x01
     6e0:	9a 81       	ldd	r25, Y+2	; 0x02
     6e2:	2e 81       	ldd	r18, Y+6	; 0x06
     6e4:	3f 81       	ldd	r19, Y+7	; 0x07
     6e6:	88 0f       	add	r24, r24
     6e8:	99 1f       	adc	r25, r25
     6ea:	82 0f       	add	r24, r18
     6ec:	93 1f       	adc	r25, r19
     6ee:	fc 01       	movw	r30, r24
     6f0:	f5 96       	adiw	r30, 0x35	; 53
     6f2:	40 81       	ld	r20, Z
     6f4:	51 81       	ldd	r21, Z+1	; 0x01
     6f6:	2e 81       	ldd	r18, Y+6	; 0x06
     6f8:	3f 81       	ldd	r19, Y+7	; 0x07
     6fa:	cb 01       	movw	r24, r22
     6fc:	88 0f       	add	r24, r24
     6fe:	99 1f       	adc	r25, r25
     700:	82 0f       	add	r24, r18
     702:	93 1f       	adc	r25, r19
     704:	fc 01       	movw	r30, r24
     706:	e9 5b       	subi	r30, 0xB9	; 185
     708:	ff 4f       	sbci	r31, 0xFF	; 255
     70a:	51 83       	std	Z+1, r21	; 0x01
     70c:	40 83       	st	Z, r20
		//////////////////////////////////////////////////////
		digitalWrite(latchPin, LOW);
		delay(1);

		// first size bytes (mass value)
		for (int i = 0; i < 9; i++) {
     70e:	89 81       	ldd	r24, Y+1	; 0x01
     710:	9a 81       	ldd	r25, Y+2	; 0x02
     712:	01 96       	adiw	r24, 0x01	; 1
     714:	9a 83       	std	Y+2, r25	; 0x02
     716:	89 83       	std	Y+1, r24	; 0x01
     718:	89 81       	ldd	r24, Y+1	; 0x01
     71a:	9a 81       	ldd	r25, Y+2	; 0x02
     71c:	89 30       	cpi	r24, 0x09	; 9
     71e:	91 05       	cpc	r25, r1
     720:	0c f4       	brge	.+2      	; 0x724 <_ZN14BigDigitDriver14updateDisplaysEv+0x166>
     722:	9e cf       	rjmp	.-196    	; 0x660 <_ZN14BigDigitDriver14updateDisplaysEv+0xa2>
			shiftOut(dataPin, clockPin, MSBFIRST, dataArray[digitArray[i]]);
			Serial.print(digitArray[i]);
			Serial.print(" ");
			prevDigits[i] = digitArray[i];
		}
		Serial.println();
     724:	87 ec       	ldi	r24, 0xC7	; 199
     726:	93 e0       	ldi	r25, 0x03	; 3
     728:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
		digitalWrite(latchPin, HIGH);
     72c:	ee 81       	ldd	r30, Y+6	; 0x06
     72e:	ff 81       	ldd	r31, Y+7	; 0x07
     730:	80 81       	ld	r24, Z
     732:	91 81       	ldd	r25, Z+1	; 0x01
     734:	61 e0       	ldi	r22, 0x01	; 1
     736:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
		delay(1);
     73a:	61 e0       	ldi	r22, 0x01	; 1
     73c:	70 e0       	ldi	r23, 0x00	; 0
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
		//////////////////////////////////////////////////////

	}
}
     746:	27 96       	adiw	r28, 0x07	; 7
     748:	0f b6       	in	r0, 0x3f	; 63
     74a:	f8 94       	cli
     74c:	de bf       	out	0x3e, r29	; 62
     74e:	0f be       	out	0x3f, r0	; 63
     750:	cd bf       	out	0x3d, r28	; 61
     752:	cf 91       	pop	r28
     754:	df 91       	pop	r29
     756:	08 95       	ret

00000758 <_ZN14BigDigitDriver9setLengthEi>:
		digitArray[3 + 5 - i] = (int) tempLong;
	}

}

void BigDigitDriver::setLength(int length_in) {
     758:	cf 92       	push	r12
     75a:	df 92       	push	r13
     75c:	ef 92       	push	r14
     75e:	ff 92       	push	r15
     760:	0f 93       	push	r16
     762:	1f 93       	push	r17
     764:	df 93       	push	r29
     766:	cf 93       	push	r28
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
     76c:	2e 97       	sbiw	r28, 0x0e	; 14
     76e:	0f b6       	in	r0, 0x3f	; 63
     770:	f8 94       	cli
     772:	de bf       	out	0x3e, r29	; 62
     774:	0f be       	out	0x3f, r0	; 63
     776:	cd bf       	out	0x3d, r28	; 61
     778:	9a 87       	std	Y+10, r25	; 0x0a
     77a:	89 87       	std	Y+9, r24	; 0x09
     77c:	7c 87       	std	Y+12, r23	; 0x0c
     77e:	6b 87       	std	Y+11, r22	; 0x0b
	if (!isDino) {
     780:	e9 85       	ldd	r30, Y+9	; 0x09
     782:	fa 85       	ldd	r31, Y+10	; 0x0a
     784:	86 81       	ldd	r24, Z+6	; 0x06
     786:	88 23       	and	r24, r24
     788:	71 f4       	brne	.+28     	; 0x7a6 <_ZN14BigDigitDriver9setLengthEi+0x4e>
		length_in *= 10;
     78a:	8b 85       	ldd	r24, Y+11	; 0x0b
     78c:	9c 85       	ldd	r25, Y+12	; 0x0c
     78e:	9c 01       	movw	r18, r24
     790:	22 0f       	add	r18, r18
     792:	33 1f       	adc	r19, r19
     794:	c9 01       	movw	r24, r18
     796:	88 0f       	add	r24, r24
     798:	99 1f       	adc	r25, r25
     79a:	88 0f       	add	r24, r24
     79c:	99 1f       	adc	r25, r25
     79e:	82 0f       	add	r24, r18
     7a0:	93 1f       	adc	r25, r19
     7a2:	9c 87       	std	Y+12, r25	; 0x0c
     7a4:	8b 87       	std	Y+11, r24	; 0x0b
	}
	length_in = max(length_in, 0);
     7a6:	4b 85       	ldd	r20, Y+11	; 0x0b
     7a8:	5c 85       	ldd	r21, Y+12	; 0x0c
     7aa:	5e 87       	std	Y+14, r21	; 0x0e
     7ac:	4d 87       	std	Y+13, r20	; 0x0d
     7ae:	8d 85       	ldd	r24, Y+13	; 0x0d
     7b0:	9e 85       	ldd	r25, Y+14	; 0x0e
     7b2:	99 23       	and	r25, r25
     7b4:	14 f4       	brge	.+4      	; 0x7ba <_ZN14BigDigitDriver9setLengthEi+0x62>
     7b6:	1e 86       	std	Y+14, r1	; 0x0e
     7b8:	1d 86       	std	Y+13, r1	; 0x0d
     7ba:	4d 85       	ldd	r20, Y+13	; 0x0d
     7bc:	5e 85       	ldd	r21, Y+14	; 0x0e
     7be:	5c 87       	std	Y+12, r21	; 0x0c
     7c0:	4b 87       	std	Y+11, r20	; 0x0b
	int factor = 10;
     7c2:	8a e0       	ldi	r24, 0x0A	; 10
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	98 87       	std	Y+8, r25	; 0x08
     7c8:	8f 83       	std	Y+7, r24	; 0x07
	int runningTotal = 0;
     7ca:	1e 82       	std	Y+6, r1	; 0x06
     7cc:	1d 82       	std	Y+5, r1	; 0x05
	for (int i = 0; i < 3; i++) {
     7ce:	1c 82       	std	Y+4, r1	; 0x04
     7d0:	1b 82       	std	Y+3, r1	; 0x03
     7d2:	6e c0       	rjmp	.+220    	; 0x8b0 <_ZN14BigDigitDriver9setLengthEi+0x158>
		digitArray[2 - i] = length_in % factor;
     7d4:	22 e0       	ldi	r18, 0x02	; 2
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	8b 81       	ldd	r24, Y+3	; 0x03
     7da:	9c 81       	ldd	r25, Y+4	; 0x04
     7dc:	f9 01       	movw	r30, r18
     7de:	e8 1b       	sub	r30, r24
     7e0:	f9 0b       	sbc	r31, r25
     7e2:	8b 85       	ldd	r24, Y+11	; 0x0b
     7e4:	9c 85       	ldd	r25, Y+12	; 0x0c
     7e6:	2f 81       	ldd	r18, Y+7	; 0x07
     7e8:	38 85       	ldd	r19, Y+8	; 0x08
     7ea:	b9 01       	movw	r22, r18
     7ec:	0e 94 35 25 	call	0x4a6a	; 0x4a6a <__divmodhi4>
     7f0:	ac 01       	movw	r20, r24
     7f2:	29 85       	ldd	r18, Y+9	; 0x09
     7f4:	3a 85       	ldd	r19, Y+10	; 0x0a
     7f6:	cf 01       	movw	r24, r30
     7f8:	88 0f       	add	r24, r24
     7fa:	99 1f       	adc	r25, r25
     7fc:	82 0f       	add	r24, r18
     7fe:	93 1f       	adc	r25, r19
     800:	fc 01       	movw	r30, r24
     802:	f5 96       	adiw	r30, 0x35	; 53
     804:	51 83       	std	Z+1, r21	; 0x01
     806:	40 83       	st	Z, r20
		digitArray[2 - i] -= runningTotal;
     808:	22 e0       	ldi	r18, 0x02	; 2
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	8b 81       	ldd	r24, Y+3	; 0x03
     80e:	9c 81       	ldd	r25, Y+4	; 0x04
     810:	b9 01       	movw	r22, r18
     812:	68 1b       	sub	r22, r24
     814:	79 0b       	sbc	r23, r25
     816:	22 e0       	ldi	r18, 0x02	; 2
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	8b 81       	ldd	r24, Y+3	; 0x03
     81c:	9c 81       	ldd	r25, Y+4	; 0x04
     81e:	a9 01       	movw	r20, r18
     820:	48 1b       	sub	r20, r24
     822:	59 0b       	sbc	r21, r25
     824:	ca 01       	movw	r24, r20
     826:	29 85       	ldd	r18, Y+9	; 0x09
     828:	3a 85       	ldd	r19, Y+10	; 0x0a
     82a:	88 0f       	add	r24, r24
     82c:	99 1f       	adc	r25, r25
     82e:	82 0f       	add	r24, r18
     830:	93 1f       	adc	r25, r19
     832:	fc 01       	movw	r30, r24
     834:	f5 96       	adiw	r30, 0x35	; 53
     836:	20 81       	ld	r18, Z
     838:	31 81       	ldd	r19, Z+1	; 0x01
     83a:	8d 81       	ldd	r24, Y+5	; 0x05
     83c:	9e 81       	ldd	r25, Y+6	; 0x06
     83e:	a9 01       	movw	r20, r18
     840:	48 1b       	sub	r20, r24
     842:	59 0b       	sbc	r21, r25
     844:	29 85       	ldd	r18, Y+9	; 0x09
     846:	3a 85       	ldd	r19, Y+10	; 0x0a
     848:	cb 01       	movw	r24, r22
     84a:	88 0f       	add	r24, r24
     84c:	99 1f       	adc	r25, r25
     84e:	82 0f       	add	r24, r18
     850:	93 1f       	adc	r25, r19
     852:	fc 01       	movw	r30, r24
     854:	f5 96       	adiw	r30, 0x35	; 53
     856:	51 83       	std	Z+1, r21	; 0x01
     858:	40 83       	st	Z, r20
		runningTotal += digitArray[2 - i];
     85a:	22 e0       	ldi	r18, 0x02	; 2
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	8b 81       	ldd	r24, Y+3	; 0x03
     860:	9c 81       	ldd	r25, Y+4	; 0x04
     862:	a9 01       	movw	r20, r18
     864:	48 1b       	sub	r20, r24
     866:	59 0b       	sbc	r21, r25
     868:	ca 01       	movw	r24, r20
     86a:	29 85       	ldd	r18, Y+9	; 0x09
     86c:	3a 85       	ldd	r19, Y+10	; 0x0a
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	82 0f       	add	r24, r18
     874:	93 1f       	adc	r25, r19
     876:	fc 01       	movw	r30, r24
     878:	f5 96       	adiw	r30, 0x35	; 53
     87a:	20 81       	ld	r18, Z
     87c:	31 81       	ldd	r19, Z+1	; 0x01
     87e:	8d 81       	ldd	r24, Y+5	; 0x05
     880:	9e 81       	ldd	r25, Y+6	; 0x06
     882:	82 0f       	add	r24, r18
     884:	93 1f       	adc	r25, r19
     886:	9e 83       	std	Y+6, r25	; 0x06
     888:	8d 83       	std	Y+5, r24	; 0x05
		factor *= 10;
     88a:	8f 81       	ldd	r24, Y+7	; 0x07
     88c:	98 85       	ldd	r25, Y+8	; 0x08
     88e:	9c 01       	movw	r18, r24
     890:	22 0f       	add	r18, r18
     892:	33 1f       	adc	r19, r19
     894:	c9 01       	movw	r24, r18
     896:	88 0f       	add	r24, r24
     898:	99 1f       	adc	r25, r25
     89a:	88 0f       	add	r24, r24
     89c:	99 1f       	adc	r25, r25
     89e:	82 0f       	add	r24, r18
     8a0:	93 1f       	adc	r25, r19
     8a2:	98 87       	std	Y+8, r25	; 0x08
     8a4:	8f 83       	std	Y+7, r24	; 0x07
		length_in *= 10;
	}
	length_in = max(length_in, 0);
	int factor = 10;
	int runningTotal = 0;
	for (int i = 0; i < 3; i++) {
     8a6:	8b 81       	ldd	r24, Y+3	; 0x03
     8a8:	9c 81       	ldd	r25, Y+4	; 0x04
     8aa:	01 96       	adiw	r24, 0x01	; 1
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	8b 83       	std	Y+3, r24	; 0x03
     8b0:	8b 81       	ldd	r24, Y+3	; 0x03
     8b2:	9c 81       	ldd	r25, Y+4	; 0x04
     8b4:	83 30       	cpi	r24, 0x03	; 3
     8b6:	91 05       	cpc	r25, r1
     8b8:	0c f4       	brge	.+2      	; 0x8bc <_ZN14BigDigitDriver9setLengthEi+0x164>
     8ba:	8c cf       	rjmp	.-232    	; 0x7d4 <_ZN14BigDigitDriver9setLengthEi+0x7c>
		digitArray[2 - i] = length_in % factor;
		digitArray[2 - i] -= runningTotal;
		runningTotal += digitArray[2 - i];
		factor *= 10;
	}
	for (int i = 0; i < 3; i++) {
     8bc:	1a 82       	std	Y+2, r1	; 0x02
     8be:	19 82       	std	Y+1, r1	; 0x01
     8c0:	56 c0       	rjmp	.+172    	; 0x96e <__stack+0x6f>
		digitArray[2 - i] /= pow(10, i);
     8c2:	22 e0       	ldi	r18, 0x02	; 2
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	89 81       	ldd	r24, Y+1	; 0x01
     8c8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ca:	69 01       	movw	r12, r18
     8cc:	c8 1a       	sub	r12, r24
     8ce:	d9 0a       	sbc	r13, r25
     8d0:	22 e0       	ldi	r18, 0x02	; 2
     8d2:	30 e0       	ldi	r19, 0x00	; 0
     8d4:	89 81       	ldd	r24, Y+1	; 0x01
     8d6:	9a 81       	ldd	r25, Y+2	; 0x02
     8d8:	a9 01       	movw	r20, r18
     8da:	48 1b       	sub	r20, r24
     8dc:	59 0b       	sbc	r21, r25
     8de:	ca 01       	movw	r24, r20
     8e0:	29 85       	ldd	r18, Y+9	; 0x09
     8e2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8e4:	88 0f       	add	r24, r24
     8e6:	99 1f       	adc	r25, r25
     8e8:	82 0f       	add	r24, r18
     8ea:	93 1f       	adc	r25, r19
     8ec:	fc 01       	movw	r30, r24
     8ee:	f5 96       	adiw	r30, 0x35	; 53
     8f0:	80 81       	ld	r24, Z
     8f2:	91 81       	ldd	r25, Z+1	; 0x01
     8f4:	aa 27       	eor	r26, r26
     8f6:	97 fd       	sbrc	r25, 7
     8f8:	a0 95       	com	r26
     8fa:	ba 2f       	mov	r27, r26
     8fc:	bc 01       	movw	r22, r24
     8fe:	cd 01       	movw	r24, r26
     900:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
     904:	7b 01       	movw	r14, r22
     906:	8c 01       	movw	r16, r24
     908:	89 81       	ldd	r24, Y+1	; 0x01
     90a:	9a 81       	ldd	r25, Y+2	; 0x02
     90c:	aa 27       	eor	r26, r26
     90e:	97 fd       	sbrc	r25, 7
     910:	a0 95       	com	r26
     912:	ba 2f       	mov	r27, r26
     914:	bc 01       	movw	r22, r24
     916:	cd 01       	movw	r24, r26
     918:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
     91c:	9b 01       	movw	r18, r22
     91e:	ac 01       	movw	r20, r24
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	80 e2       	ldi	r24, 0x20	; 32
     926:	91 e4       	ldi	r25, 0x41	; 65
     928:	0e 94 d6 25 	call	0x4bac	; 0x4bac <pow>
     92c:	dc 01       	movw	r26, r24
     92e:	cb 01       	movw	r24, r22
     930:	9c 01       	movw	r18, r24
     932:	ad 01       	movw	r20, r26
     934:	c8 01       	movw	r24, r16
     936:	b7 01       	movw	r22, r14
     938:	0e 94 1e 14 	call	0x283c	; 0x283c <__divsf3>
     93c:	dc 01       	movw	r26, r24
     93e:	cb 01       	movw	r24, r22
     940:	bc 01       	movw	r22, r24
     942:	cd 01       	movw	r24, r26
     944:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
     948:	dc 01       	movw	r26, r24
     94a:	cb 01       	movw	r24, r22
     94c:	ac 01       	movw	r20, r24
     94e:	29 85       	ldd	r18, Y+9	; 0x09
     950:	3a 85       	ldd	r19, Y+10	; 0x0a
     952:	c6 01       	movw	r24, r12
     954:	88 0f       	add	r24, r24
     956:	99 1f       	adc	r25, r25
     958:	82 0f       	add	r24, r18
     95a:	93 1f       	adc	r25, r19
     95c:	fc 01       	movw	r30, r24
     95e:	f5 96       	adiw	r30, 0x35	; 53
     960:	51 83       	std	Z+1, r21	; 0x01
     962:	40 83       	st	Z, r20
		digitArray[2 - i] = length_in % factor;
		digitArray[2 - i] -= runningTotal;
		runningTotal += digitArray[2 - i];
		factor *= 10;
	}
	for (int i = 0; i < 3; i++) {
     964:	89 81       	ldd	r24, Y+1	; 0x01
     966:	9a 81       	ldd	r25, Y+2	; 0x02
     968:	01 96       	adiw	r24, 0x01	; 1
     96a:	9a 83       	std	Y+2, r25	; 0x02
     96c:	89 83       	std	Y+1, r24	; 0x01
     96e:	89 81       	ldd	r24, Y+1	; 0x01
     970:	9a 81       	ldd	r25, Y+2	; 0x02
     972:	83 30       	cpi	r24, 0x03	; 3
     974:	91 05       	cpc	r25, r1
     976:	0c f4       	brge	.+2      	; 0x97a <__stack+0x7b>
     978:	a4 cf       	rjmp	.-184    	; 0x8c2 <_ZN14BigDigitDriver9setLengthEi+0x16a>
		digitArray[2 - i] /= pow(10, i);
	}
}
     97a:	2e 96       	adiw	r28, 0x0e	; 14
     97c:	0f b6       	in	r0, 0x3f	; 63
     97e:	f8 94       	cli
     980:	de bf       	out	0x3e, r29	; 62
     982:	0f be       	out	0x3f, r0	; 63
     984:	cd bf       	out	0x3d, r28	; 61
     986:	cf 91       	pop	r28
     988:	df 91       	pop	r29
     98a:	1f 91       	pop	r17
     98c:	0f 91       	pop	r16
     98e:	ff 90       	pop	r15
     990:	ef 90       	pop	r14
     992:	df 90       	pop	r13
     994:	cf 90       	pop	r12
     996:	08 95       	ret

00000998 <_ZN14BigDigitDriver7setMassEl>:
	setAll(10);
	updateDisplays();
	delay(200);
}

void BigDigitDriver::setMass(long mass_in) {
     998:	ef 92       	push	r14
     99a:	ff 92       	push	r15
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	df 93       	push	r29
     9a2:	cf 93       	push	r28
     9a4:	cd b7       	in	r28, 0x3d	; 61
     9a6:	de b7       	in	r29, 0x3e	; 62
     9a8:	68 97       	sbiw	r28, 0x18	; 24
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	de bf       	out	0x3e, r29	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	cd bf       	out	0x3d, r28	; 61
     9b4:	98 8b       	std	Y+16, r25	; 0x10
     9b6:	8f 87       	std	Y+15, r24	; 0x0f
     9b8:	49 8b       	std	Y+17, r20	; 0x11
     9ba:	5a 8b       	std	Y+18, r21	; 0x12
     9bc:	6b 8b       	std	Y+19, r22	; 0x13
     9be:	7c 8b       	std	Y+20, r23	; 0x14
	mass_in *= 10; // fix because in the gallery we drop the last digit from the boards
     9c0:	89 89       	ldd	r24, Y+17	; 0x11
     9c2:	9a 89       	ldd	r25, Y+18	; 0x12
     9c4:	ab 89       	ldd	r26, Y+19	; 0x13
     9c6:	bc 89       	ldd	r27, Y+20	; 0x14
     9c8:	2a e0       	ldi	r18, 0x0A	; 10
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	40 e0       	ldi	r20, 0x00	; 0
     9ce:	50 e0       	ldi	r21, 0x00	; 0
     9d0:	bc 01       	movw	r22, r24
     9d2:	cd 01       	movw	r24, r26
     9d4:	0e 94 16 25 	call	0x4a2c	; 0x4a2c <__mulsi3>
     9d8:	dc 01       	movw	r26, r24
     9da:	cb 01       	movw	r24, r22
     9dc:	89 8b       	std	Y+17, r24	; 0x11
     9de:	9a 8b       	std	Y+18, r25	; 0x12
     9e0:	ab 8b       	std	Y+19, r26	; 0x13
     9e2:	bc 8b       	std	Y+20, r27	; 0x14
	mass_in = max(mass_in, 0);
     9e4:	e9 88       	ldd	r14, Y+17	; 0x11
     9e6:	fa 88       	ldd	r15, Y+18	; 0x12
     9e8:	0b 89       	ldd	r16, Y+19	; 0x13
     9ea:	1c 89       	ldd	r17, Y+20	; 0x14
     9ec:	ed 8a       	std	Y+21, r14	; 0x15
     9ee:	fe 8a       	std	Y+22, r15	; 0x16
     9f0:	0f 8b       	std	Y+23, r16	; 0x17
     9f2:	18 8f       	std	Y+24, r17	; 0x18
     9f4:	8d 89       	ldd	r24, Y+21	; 0x15
     9f6:	9e 89       	ldd	r25, Y+22	; 0x16
     9f8:	af 89       	ldd	r26, Y+23	; 0x17
     9fa:	b8 8d       	ldd	r27, Y+24	; 0x18
     9fc:	bb 23       	and	r27, r27
     9fe:	24 f4       	brge	.+8      	; 0xa08 <_ZN14BigDigitDriver7setMassEl+0x70>
     a00:	1d 8a       	std	Y+21, r1	; 0x15
     a02:	1e 8a       	std	Y+22, r1	; 0x16
     a04:	1f 8a       	std	Y+23, r1	; 0x17
     a06:	18 8e       	std	Y+24, r1	; 0x18
     a08:	ed 88       	ldd	r14, Y+21	; 0x15
     a0a:	fe 88       	ldd	r15, Y+22	; 0x16
     a0c:	0f 89       	ldd	r16, Y+23	; 0x17
     a0e:	18 8d       	ldd	r17, Y+24	; 0x18
     a10:	e9 8a       	std	Y+17, r14	; 0x11
     a12:	fa 8a       	std	Y+18, r15	; 0x12
     a14:	0b 8b       	std	Y+19, r16	; 0x13
     a16:	1c 8b       	std	Y+20, r17	; 0x14
	long factor = 10;
     a18:	8a e0       	ldi	r24, 0x0A	; 10
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	a0 e0       	ldi	r26, 0x00	; 0
     a1e:	b0 e0       	ldi	r27, 0x00	; 0
     a20:	8b 87       	std	Y+11, r24	; 0x0b
     a22:	9c 87       	std	Y+12, r25	; 0x0c
     a24:	ad 87       	std	Y+13, r26	; 0x0d
     a26:	be 87       	std	Y+14, r27	; 0x0e
	long runningTotal = 0;
     a28:	1f 82       	std	Y+7, r1	; 0x07
     a2a:	18 86       	std	Y+8, r1	; 0x08
     a2c:	19 86       	std	Y+9, r1	; 0x09
     a2e:	1a 86       	std	Y+10, r1	; 0x0a
	long tempLong = 0;
     a30:	1b 82       	std	Y+3, r1	; 0x03
     a32:	1c 82       	std	Y+4, r1	; 0x04
     a34:	1d 82       	std	Y+5, r1	; 0x05
     a36:	1e 82       	std	Y+6, r1	; 0x06
	for (int i = 0; i < 6; i++) {
     a38:	1a 82       	std	Y+2, r1	; 0x02
     a3a:	19 82       	std	Y+1, r1	; 0x01
     a3c:	8d c0       	rjmp	.+282    	; 0xb58 <_ZN14BigDigitDriver7setMassEl+0x1c0>
		tempLong = mass_in % factor;
     a3e:	89 89       	ldd	r24, Y+17	; 0x11
     a40:	9a 89       	ldd	r25, Y+18	; 0x12
     a42:	ab 89       	ldd	r26, Y+19	; 0x13
     a44:	bc 89       	ldd	r27, Y+20	; 0x14
     a46:	2b 85       	ldd	r18, Y+11	; 0x0b
     a48:	3c 85       	ldd	r19, Y+12	; 0x0c
     a4a:	4d 85       	ldd	r20, Y+13	; 0x0d
     a4c:	5e 85       	ldd	r21, Y+14	; 0x0e
     a4e:	bc 01       	movw	r22, r24
     a50:	cd 01       	movw	r24, r26
     a52:	0e 94 6a 25 	call	0x4ad4	; 0x4ad4 <__divmodsi4>
     a56:	dc 01       	movw	r26, r24
     a58:	cb 01       	movw	r24, r22
     a5a:	8b 83       	std	Y+3, r24	; 0x03
     a5c:	9c 83       	std	Y+4, r25	; 0x04
     a5e:	ad 83       	std	Y+5, r26	; 0x05
     a60:	be 83       	std	Y+6, r27	; 0x06
		tempLong -= runningTotal;
     a62:	2b 81       	ldd	r18, Y+3	; 0x03
     a64:	3c 81       	ldd	r19, Y+4	; 0x04
     a66:	4d 81       	ldd	r20, Y+5	; 0x05
     a68:	5e 81       	ldd	r21, Y+6	; 0x06
     a6a:	8f 81       	ldd	r24, Y+7	; 0x07
     a6c:	98 85       	ldd	r25, Y+8	; 0x08
     a6e:	a9 85       	ldd	r26, Y+9	; 0x09
     a70:	ba 85       	ldd	r27, Y+10	; 0x0a
     a72:	79 01       	movw	r14, r18
     a74:	8a 01       	movw	r16, r20
     a76:	e8 1a       	sub	r14, r24
     a78:	f9 0a       	sbc	r15, r25
     a7a:	0a 0b       	sbc	r16, r26
     a7c:	1b 0b       	sbc	r17, r27
     a7e:	d8 01       	movw	r26, r16
     a80:	c7 01       	movw	r24, r14
     a82:	8b 83       	std	Y+3, r24	; 0x03
     a84:	9c 83       	std	Y+4, r25	; 0x04
     a86:	ad 83       	std	Y+5, r26	; 0x05
     a88:	be 83       	std	Y+6, r27	; 0x06
		runningTotal += tempLong;
     a8a:	2f 81       	ldd	r18, Y+7	; 0x07
     a8c:	38 85       	ldd	r19, Y+8	; 0x08
     a8e:	49 85       	ldd	r20, Y+9	; 0x09
     a90:	5a 85       	ldd	r21, Y+10	; 0x0a
     a92:	8b 81       	ldd	r24, Y+3	; 0x03
     a94:	9c 81       	ldd	r25, Y+4	; 0x04
     a96:	ad 81       	ldd	r26, Y+5	; 0x05
     a98:	be 81       	ldd	r27, Y+6	; 0x06
     a9a:	82 0f       	add	r24, r18
     a9c:	93 1f       	adc	r25, r19
     a9e:	a4 1f       	adc	r26, r20
     aa0:	b5 1f       	adc	r27, r21
     aa2:	8f 83       	std	Y+7, r24	; 0x07
     aa4:	98 87       	std	Y+8, r25	; 0x08
     aa6:	a9 87       	std	Y+9, r26	; 0x09
     aa8:	ba 87       	std	Y+10, r27	; 0x0a
		factor *= 10;
     aaa:	8b 85       	ldd	r24, Y+11	; 0x0b
     aac:	9c 85       	ldd	r25, Y+12	; 0x0c
     aae:	ad 85       	ldd	r26, Y+13	; 0x0d
     ab0:	be 85       	ldd	r27, Y+14	; 0x0e
     ab2:	2a e0       	ldi	r18, 0x0A	; 10
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	40 e0       	ldi	r20, 0x00	; 0
     ab8:	50 e0       	ldi	r21, 0x00	; 0
     aba:	bc 01       	movw	r22, r24
     abc:	cd 01       	movw	r24, r26
     abe:	0e 94 16 25 	call	0x4a2c	; 0x4a2c <__mulsi3>
     ac2:	dc 01       	movw	r26, r24
     ac4:	cb 01       	movw	r24, r22
     ac6:	8b 87       	std	Y+11, r24	; 0x0b
     ac8:	9c 87       	std	Y+12, r25	; 0x0c
     aca:	ad 87       	std	Y+13, r26	; 0x0d
     acc:	be 87       	std	Y+14, r27	; 0x0e
		tempLong /= pow(10, i);
     ace:	6b 81       	ldd	r22, Y+3	; 0x03
     ad0:	7c 81       	ldd	r23, Y+4	; 0x04
     ad2:	8d 81       	ldd	r24, Y+5	; 0x05
     ad4:	9e 81       	ldd	r25, Y+6	; 0x06
     ad6:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
     ada:	7b 01       	movw	r14, r22
     adc:	8c 01       	movw	r16, r24
     ade:	89 81       	ldd	r24, Y+1	; 0x01
     ae0:	9a 81       	ldd	r25, Y+2	; 0x02
     ae2:	aa 27       	eor	r26, r26
     ae4:	97 fd       	sbrc	r25, 7
     ae6:	a0 95       	com	r26
     ae8:	ba 2f       	mov	r27, r26
     aea:	bc 01       	movw	r22, r24
     aec:	cd 01       	movw	r24, r26
     aee:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
     af2:	9b 01       	movw	r18, r22
     af4:	ac 01       	movw	r20, r24
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	70 e0       	ldi	r23, 0x00	; 0
     afa:	80 e2       	ldi	r24, 0x20	; 32
     afc:	91 e4       	ldi	r25, 0x41	; 65
     afe:	0e 94 d6 25 	call	0x4bac	; 0x4bac <pow>
     b02:	9b 01       	movw	r18, r22
     b04:	ac 01       	movw	r20, r24
     b06:	c8 01       	movw	r24, r16
     b08:	b7 01       	movw	r22, r14
     b0a:	0e 94 1e 14 	call	0x283c	; 0x283c <__divsf3>
     b0e:	dc 01       	movw	r26, r24
     b10:	cb 01       	movw	r24, r22
     b12:	bc 01       	movw	r22, r24
     b14:	cd 01       	movw	r24, r26
     b16:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
     b1a:	dc 01       	movw	r26, r24
     b1c:	cb 01       	movw	r24, r22
     b1e:	8b 83       	std	Y+3, r24	; 0x03
     b20:	9c 83       	std	Y+4, r25	; 0x04
     b22:	ad 83       	std	Y+5, r26	; 0x05
     b24:	be 83       	std	Y+6, r27	; 0x06
		digitArray[3 + 5 - i] = (int) tempLong;
     b26:	28 e0       	ldi	r18, 0x08	; 8
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	89 81       	ldd	r24, Y+1	; 0x01
     b2c:	9a 81       	ldd	r25, Y+2	; 0x02
     b2e:	89 01       	movw	r16, r18
     b30:	08 1b       	sub	r16, r24
     b32:	19 0b       	sbc	r17, r25
     b34:	c8 01       	movw	r24, r16
     b36:	4b 81       	ldd	r20, Y+3	; 0x03
     b38:	5c 81       	ldd	r21, Y+4	; 0x04
     b3a:	2f 85       	ldd	r18, Y+15	; 0x0f
     b3c:	38 89       	ldd	r19, Y+16	; 0x10
     b3e:	88 0f       	add	r24, r24
     b40:	99 1f       	adc	r25, r25
     b42:	82 0f       	add	r24, r18
     b44:	93 1f       	adc	r25, r19
     b46:	fc 01       	movw	r30, r24
     b48:	f5 96       	adiw	r30, 0x35	; 53
     b4a:	51 83       	std	Z+1, r21	; 0x01
     b4c:	40 83       	st	Z, r20
	mass_in *= 10; // fix because in the gallery we drop the last digit from the boards
	mass_in = max(mass_in, 0);
	long factor = 10;
	long runningTotal = 0;
	long tempLong = 0;
	for (int i = 0; i < 6; i++) {
     b4e:	89 81       	ldd	r24, Y+1	; 0x01
     b50:	9a 81       	ldd	r25, Y+2	; 0x02
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	9a 83       	std	Y+2, r25	; 0x02
     b56:	89 83       	std	Y+1, r24	; 0x01
     b58:	89 81       	ldd	r24, Y+1	; 0x01
     b5a:	9a 81       	ldd	r25, Y+2	; 0x02
     b5c:	86 30       	cpi	r24, 0x06	; 6
     b5e:	91 05       	cpc	r25, r1
     b60:	0c f4       	brge	.+2      	; 0xb64 <_ZN14BigDigitDriver7setMassEl+0x1cc>
     b62:	6d cf       	rjmp	.-294    	; 0xa3e <_ZN14BigDigitDriver7setMassEl+0xa6>
		factor *= 10;
		tempLong /= pow(10, i);
		digitArray[3 + 5 - i] = (int) tempLong;
	}

}
     b64:	68 96       	adiw	r28, 0x18	; 24
     b66:	0f b6       	in	r0, 0x3f	; 63
     b68:	f8 94       	cli
     b6a:	de bf       	out	0x3e, r29	; 62
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	cd bf       	out	0x3d, r28	; 61
     b70:	cf 91       	pop	r28
     b72:	df 91       	pop	r29
     b74:	1f 91       	pop	r17
     b76:	0f 91       	pop	r16
     b78:	ff 90       	pop	r15
     b7a:	ef 90       	pop	r14
     b7c:	08 95       	ret

00000b7e <_ZN14BigDigitDriver13calculateMassEh>:
	setLength((int) lengthVal);
	prevLengthVal = lengthVal;

}

long BigDigitDriver::calculateMass(boolean useImperial) {
     b7e:	df 93       	push	r29
     b80:	cf 93       	push	r28
     b82:	00 d0       	rcall	.+0      	; 0xb84 <_ZN14BigDigitDriver13calculateMassEh+0x6>
     b84:	0f 92       	push	r0
     b86:	cd b7       	in	r28, 0x3d	; 61
     b88:	de b7       	in	r29, 0x3e	; 62
     b8a:	9a 83       	std	Y+2, r25	; 0x02
     b8c:	89 83       	std	Y+1, r24	; 0x01
     b8e:	6b 83       	std	Y+3, r22	; 0x03
	//calculates mass in kg
	outputVal = ((pow((long) lengthVal, 3.195)) * 0.0016);
     b90:	89 81       	ldd	r24, Y+1	; 0x01
     b92:	9a 81       	ldd	r25, Y+2	; 0x02
     b94:	fc 01       	movw	r30, r24
     b96:	e9 56       	subi	r30, 0x69	; 105
     b98:	ff 4f       	sbci	r31, 0xFF	; 255
     b9a:	80 81       	ld	r24, Z
     b9c:	91 81       	ldd	r25, Z+1	; 0x01
     b9e:	a2 81       	ldd	r26, Z+2	; 0x02
     ba0:	b3 81       	ldd	r27, Z+3	; 0x03
     ba2:	bc 01       	movw	r22, r24
     ba4:	cd 01       	movw	r24, r26
     ba6:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
     baa:	dc 01       	movw	r26, r24
     bac:	cb 01       	movw	r24, r22
     bae:	bc 01       	movw	r22, r24
     bb0:	cd 01       	movw	r24, r26
     bb2:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
     bb6:	dc 01       	movw	r26, r24
     bb8:	cb 01       	movw	r24, r22
     bba:	bc 01       	movw	r22, r24
     bbc:	cd 01       	movw	r24, r26
     bbe:	21 ee       	ldi	r18, 0xE1	; 225
     bc0:	3a e7       	ldi	r19, 0x7A	; 122
     bc2:	4c e4       	ldi	r20, 0x4C	; 76
     bc4:	50 e4       	ldi	r21, 0x40	; 64
     bc6:	0e 94 d6 25 	call	0x4bac	; 0x4bac <pow>
     bca:	dc 01       	movw	r26, r24
     bcc:	cb 01       	movw	r24, r22
     bce:	bc 01       	movw	r22, r24
     bd0:	cd 01       	movw	r24, r26
     bd2:	27 e1       	ldi	r18, 0x17	; 23
     bd4:	37 eb       	ldi	r19, 0xB7	; 183
     bd6:	41 ed       	ldi	r20, 0xD1	; 209
     bd8:	5a e3       	ldi	r21, 0x3A	; 58
     bda:	0e 94 24 13 	call	0x2648	; 0x2648 <__mulsf3>
     bde:	dc 01       	movw	r26, r24
     be0:	cb 01       	movw	r24, r22
     be2:	bc 01       	movw	r22, r24
     be4:	cd 01       	movw	r24, r26
     be6:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
     bea:	9b 01       	movw	r18, r22
     bec:	ac 01       	movw	r20, r24
     bee:	89 81       	ldd	r24, Y+1	; 0x01
     bf0:	9a 81       	ldd	r25, Y+2	; 0x02
     bf2:	fc 01       	movw	r30, r24
     bf4:	e1 56       	subi	r30, 0x61	; 97
     bf6:	ff 4f       	sbci	r31, 0xFF	; 255
     bf8:	20 83       	st	Z, r18
     bfa:	31 83       	std	Z+1, r19	; 0x01
     bfc:	42 83       	std	Z+2, r20	; 0x02
     bfe:	53 83       	std	Z+3, r21	; 0x03

	//calculates mass in lb
	if (useImperial == true) {
     c00:	8b 81       	ldd	r24, Y+3	; 0x03
     c02:	81 30       	cpi	r24, 0x01	; 1
     c04:	c1 f5       	brne	.+112    	; 0xc76 <_ZN14BigDigitDriver13calculateMassEh+0xf8>

		outputVal = ((pow((long) lengthVal, 3.195)) * 0.00352739619);
     c06:	89 81       	ldd	r24, Y+1	; 0x01
     c08:	9a 81       	ldd	r25, Y+2	; 0x02
     c0a:	fc 01       	movw	r30, r24
     c0c:	e9 56       	subi	r30, 0x69	; 105
     c0e:	ff 4f       	sbci	r31, 0xFF	; 255
     c10:	80 81       	ld	r24, Z
     c12:	91 81       	ldd	r25, Z+1	; 0x01
     c14:	a2 81       	ldd	r26, Z+2	; 0x02
     c16:	b3 81       	ldd	r27, Z+3	; 0x03
     c18:	bc 01       	movw	r22, r24
     c1a:	cd 01       	movw	r24, r26
     c1c:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
     c20:	dc 01       	movw	r26, r24
     c22:	cb 01       	movw	r24, r22
     c24:	bc 01       	movw	r22, r24
     c26:	cd 01       	movw	r24, r26
     c28:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
     c2c:	dc 01       	movw	r26, r24
     c2e:	cb 01       	movw	r24, r22
     c30:	bc 01       	movw	r22, r24
     c32:	cd 01       	movw	r24, r26
     c34:	21 ee       	ldi	r18, 0xE1	; 225
     c36:	3a e7       	ldi	r19, 0x7A	; 122
     c38:	4c e4       	ldi	r20, 0x4C	; 76
     c3a:	50 e4       	ldi	r21, 0x40	; 64
     c3c:	0e 94 d6 25 	call	0x4bac	; 0x4bac <pow>
     c40:	dc 01       	movw	r26, r24
     c42:	cb 01       	movw	r24, r22
     c44:	bc 01       	movw	r22, r24
     c46:	cd 01       	movw	r24, r26
     c48:	23 ee       	ldi	r18, 0xE3	; 227
     c4a:	3b e2       	ldi	r19, 0x2B	; 43
     c4c:	47 e6       	ldi	r20, 0x67	; 103
     c4e:	5b e3       	ldi	r21, 0x3B	; 59
     c50:	0e 94 24 13 	call	0x2648	; 0x2648 <__mulsf3>
     c54:	dc 01       	movw	r26, r24
     c56:	cb 01       	movw	r24, r22
     c58:	bc 01       	movw	r22, r24
     c5a:	cd 01       	movw	r24, r26
     c5c:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
     c60:	9b 01       	movw	r18, r22
     c62:	ac 01       	movw	r20, r24
     c64:	89 81       	ldd	r24, Y+1	; 0x01
     c66:	9a 81       	ldd	r25, Y+2	; 0x02
     c68:	fc 01       	movw	r30, r24
     c6a:	e1 56       	subi	r30, 0x61	; 97
     c6c:	ff 4f       	sbci	r31, 0xFF	; 255
     c6e:	20 83       	st	Z, r18
     c70:	31 83       	std	Z+1, r19	; 0x01
     c72:	42 83       	std	Z+2, r20	; 0x02
     c74:	53 83       	std	Z+3, r21	; 0x03
		//setLength((long)lengthVal);
		//prevLengthVal = lengthVal;
	}
	// outputVal *= 10;
	return outputVal;
     c76:	89 81       	ldd	r24, Y+1	; 0x01
     c78:	9a 81       	ldd	r25, Y+2	; 0x02
     c7a:	fc 01       	movw	r30, r24
     c7c:	e1 56       	subi	r30, 0x61	; 97
     c7e:	ff 4f       	sbci	r31, 0xFF	; 255
     c80:	80 81       	ld	r24, Z
     c82:	91 81       	ldd	r25, Z+1	; 0x01
     c84:	a2 81       	ldd	r26, Z+2	; 0x02
     c86:	b3 81       	ldd	r27, Z+3	; 0x03
}
     c88:	bc 01       	movw	r22, r24
     c8a:	cd 01       	movw	r24, r26
     c8c:	0f 90       	pop	r0
     c8e:	0f 90       	pop	r0
     c90:	0f 90       	pop	r0
     c92:	cf 91       	pop	r28
     c94:	df 91       	pop	r29
     c96:	08 95       	ret

00000c98 <_ZN14BigDigitDriver11checkSliderEv>:
		sliderHistory[i] = sliderHistory[i - 1];
	}
	sliderHistory[0] = sliderVal_in;
}

boolean BigDigitDriver::checkSlider() {
     c98:	df 93       	push	r29
     c9a:	cf 93       	push	r28
     c9c:	cd b7       	in	r28, 0x3d	; 61
     c9e:	de b7       	in	r29, 0x3e	; 62
     ca0:	29 97       	sbiw	r28, 0x09	; 9
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	f8 94       	cli
     ca6:	de bf       	out	0x3e, r29	; 62
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	cd bf       	out	0x3d, r28	; 61
     cac:	98 87       	std	Y+8, r25	; 0x08
     cae:	8f 83       	std	Y+7, r24	; 0x07
	int loVal = 1024;
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	94 e0       	ldi	r25, 0x04	; 4
     cb4:	9e 83       	std	Y+6, r25	; 0x06
     cb6:	8d 83       	std	Y+5, r24	; 0x05
	int hiVal = 0;
     cb8:	1c 82       	std	Y+4, r1	; 0x04
     cba:	1b 82       	std	Y+3, r1	; 0x03
	for (int i = 0; i < HISTORYLENGTH; i++) {
     cbc:	1a 82       	std	Y+2, r1	; 0x02
     cbe:	19 82       	std	Y+1, r1	; 0x01
     cc0:	47 c0       	rjmp	.+142    	; 0xd50 <_ZN14BigDigitDriver11checkSliderEv+0xb8>
		if (sliderHistory[i] > hiVal)
     cc2:	89 81       	ldd	r24, Y+1	; 0x01
     cc4:	9a 81       	ldd	r25, Y+2	; 0x02
     cc6:	2f 81       	ldd	r18, Y+7	; 0x07
     cc8:	38 85       	ldd	r19, Y+8	; 0x08
     cca:	88 0f       	add	r24, r24
     ccc:	99 1f       	adc	r25, r25
     cce:	82 0f       	add	r24, r18
     cd0:	93 1f       	adc	r25, r19
     cd2:	fc 01       	movw	r30, r24
     cd4:	ef 58       	subi	r30, 0x8F	; 143
     cd6:	ff 4f       	sbci	r31, 0xFF	; 255
     cd8:	20 81       	ld	r18, Z
     cda:	31 81       	ldd	r19, Z+1	; 0x01
     cdc:	8b 81       	ldd	r24, Y+3	; 0x03
     cde:	9c 81       	ldd	r25, Y+4	; 0x04
     ce0:	82 17       	cp	r24, r18
     ce2:	93 07       	cpc	r25, r19
     ce4:	7c f4       	brge	.+30     	; 0xd04 <_ZN14BigDigitDriver11checkSliderEv+0x6c>
			hiVal = sliderHistory[i];
     ce6:	89 81       	ldd	r24, Y+1	; 0x01
     ce8:	9a 81       	ldd	r25, Y+2	; 0x02
     cea:	2f 81       	ldd	r18, Y+7	; 0x07
     cec:	38 85       	ldd	r19, Y+8	; 0x08
     cee:	88 0f       	add	r24, r24
     cf0:	99 1f       	adc	r25, r25
     cf2:	82 0f       	add	r24, r18
     cf4:	93 1f       	adc	r25, r19
     cf6:	fc 01       	movw	r30, r24
     cf8:	ef 58       	subi	r30, 0x8F	; 143
     cfa:	ff 4f       	sbci	r31, 0xFF	; 255
     cfc:	80 81       	ld	r24, Z
     cfe:	91 81       	ldd	r25, Z+1	; 0x01
     d00:	9c 83       	std	Y+4, r25	; 0x04
     d02:	8b 83       	std	Y+3, r24	; 0x03
		if (sliderHistory[i] < loVal)
     d04:	89 81       	ldd	r24, Y+1	; 0x01
     d06:	9a 81       	ldd	r25, Y+2	; 0x02
     d08:	2f 81       	ldd	r18, Y+7	; 0x07
     d0a:	38 85       	ldd	r19, Y+8	; 0x08
     d0c:	88 0f       	add	r24, r24
     d0e:	99 1f       	adc	r25, r25
     d10:	82 0f       	add	r24, r18
     d12:	93 1f       	adc	r25, r19
     d14:	fc 01       	movw	r30, r24
     d16:	ef 58       	subi	r30, 0x8F	; 143
     d18:	ff 4f       	sbci	r31, 0xFF	; 255
     d1a:	20 81       	ld	r18, Z
     d1c:	31 81       	ldd	r19, Z+1	; 0x01
     d1e:	8d 81       	ldd	r24, Y+5	; 0x05
     d20:	9e 81       	ldd	r25, Y+6	; 0x06
     d22:	28 17       	cp	r18, r24
     d24:	39 07       	cpc	r19, r25
     d26:	7c f4       	brge	.+30     	; 0xd46 <_ZN14BigDigitDriver11checkSliderEv+0xae>
			loVal = sliderHistory[i];
     d28:	89 81       	ldd	r24, Y+1	; 0x01
     d2a:	9a 81       	ldd	r25, Y+2	; 0x02
     d2c:	2f 81       	ldd	r18, Y+7	; 0x07
     d2e:	38 85       	ldd	r19, Y+8	; 0x08
     d30:	88 0f       	add	r24, r24
     d32:	99 1f       	adc	r25, r25
     d34:	82 0f       	add	r24, r18
     d36:	93 1f       	adc	r25, r19
     d38:	fc 01       	movw	r30, r24
     d3a:	ef 58       	subi	r30, 0x8F	; 143
     d3c:	ff 4f       	sbci	r31, 0xFF	; 255
     d3e:	80 81       	ld	r24, Z
     d40:	91 81       	ldd	r25, Z+1	; 0x01
     d42:	9e 83       	std	Y+6, r25	; 0x06
     d44:	8d 83       	std	Y+5, r24	; 0x05
}

boolean BigDigitDriver::checkSlider() {
	int loVal = 1024;
	int hiVal = 0;
	for (int i = 0; i < HISTORYLENGTH; i++) {
     d46:	89 81       	ldd	r24, Y+1	; 0x01
     d48:	9a 81       	ldd	r25, Y+2	; 0x02
     d4a:	01 96       	adiw	r24, 0x01	; 1
     d4c:	9a 83       	std	Y+2, r25	; 0x02
     d4e:	89 83       	std	Y+1, r24	; 0x01
     d50:	89 81       	ldd	r24, Y+1	; 0x01
     d52:	9a 81       	ldd	r25, Y+2	; 0x02
     d54:	8a 30       	cpi	r24, 0x0A	; 10
     d56:	91 05       	cpc	r25, r1
     d58:	0c f4       	brge	.+2      	; 0xd5c <_ZN14BigDigitDriver11checkSliderEv+0xc4>
     d5a:	b3 cf       	rjmp	.-154    	; 0xcc2 <_ZN14BigDigitDriver11checkSliderEv+0x2a>
			hiVal = sliderHistory[i];
		if (sliderHistory[i] < loVal)
			loVal = sliderHistory[i];
	}

	if ((hiVal - loVal) > FORGIVENESS) {
     d5c:	8b 81       	ldd	r24, Y+3	; 0x03
     d5e:	9c 81       	ldd	r25, Y+4	; 0x04
     d60:	2d 81       	ldd	r18, Y+5	; 0x05
     d62:	3e 81       	ldd	r19, Y+6	; 0x06
     d64:	82 1b       	sub	r24, r18
     d66:	93 0b       	sbc	r25, r19
     d68:	8b 30       	cpi	r24, 0x0B	; 11
     d6a:	91 05       	cpc	r25, r1
     d6c:	6c f0       	brlt	.+26     	; 0xd88 <_ZN14BigDigitDriver11checkSliderEv+0xf0>

		 }

		 Serial.println("******************************************************************************************");
		 */
		startWait = millis();
     d6e:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <millis>
     d72:	dc 01       	movw	r26, r24
     d74:	cb 01       	movw	r24, r22
     d76:	ef 81       	ldd	r30, Y+7	; 0x07
     d78:	f8 85       	ldd	r31, Y+8	; 0x08
     d7a:	82 8f       	std	Z+26, r24	; 0x1a
     d7c:	93 8f       	std	Z+27, r25	; 0x1b
     d7e:	a4 8f       	std	Z+28, r26	; 0x1c
     d80:	b5 8f       	std	Z+29, r27	; 0x1d
		return true;
     d82:	81 e0       	ldi	r24, 0x01	; 1
     d84:	89 87       	std	Y+9, r24	; 0x09
     d86:	01 c0       	rjmp	.+2      	; 0xd8a <_ZN14BigDigitDriver11checkSliderEv+0xf2>
		 }

		 Serial.println("******************************************************************************************");
		 Serial.println();
		 */
		return false;
     d88:	19 86       	std	Y+9, r1	; 0x09
     d8a:	89 85       	ldd	r24, Y+9	; 0x09
	}
}
     d8c:	29 96       	adiw	r28, 0x09	; 9
     d8e:	0f b6       	in	r0, 0x3f	; 63
     d90:	f8 94       	cli
     d92:	de bf       	out	0x3e, r29	; 62
     d94:	0f be       	out	0x3f, r0	; 63
     d96:	cd bf       	out	0x3d, r28	; 61
     d98:	cf 91       	pop	r28
     d9a:	df 91       	pop	r29
     d9c:	08 95       	ret

00000d9e <_ZN14BigDigitDriver7measureEv>:
	//if(sliderVal!=sliderHistory[0]){
	pushSliderVal(sliderVal);
	// }
}

void BigDigitDriver::measure() {
     d9e:	ef 92       	push	r14
     da0:	ff 92       	push	r15
     da2:	0f 93       	push	r16
     da4:	1f 93       	push	r17
     da6:	df 93       	push	r29
     da8:	cf 93       	push	r28
     daa:	cd b7       	in	r28, 0x3d	; 61
     dac:	de b7       	in	r29, 0x3e	; 62
     dae:	2a 97       	sbiw	r28, 0x0a	; 10
     db0:	0f b6       	in	r0, 0x3f	; 63
     db2:	f8 94       	cli
     db4:	de bf       	out	0x3e, r29	; 62
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	cd bf       	out	0x3d, r28	; 61
     dba:	9a 83       	std	Y+2, r25	; 0x02
     dbc:	89 83       	std	Y+1, r24	; 0x01

	// lengthVal = sliderVal;


	lengthVal = ((float) sliderVal - sLow) / (sHigh - sLow) * dHigh;
     dbe:	e9 81       	ldd	r30, Y+1	; 0x01
     dc0:	fa 81       	ldd	r31, Y+2	; 0x02
     dc2:	83 85       	ldd	r24, Z+11	; 0x0b
     dc4:	94 85       	ldd	r25, Z+12	; 0x0c
     dc6:	aa 27       	eor	r26, r26
     dc8:	97 fd       	sbrc	r25, 7
     dca:	a0 95       	com	r26
     dcc:	ba 2f       	mov	r27, r26
     dce:	bc 01       	movw	r22, r24
     dd0:	cd 01       	movw	r24, r26
     dd2:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
     dd6:	dc 01       	movw	r26, r24
     dd8:	cb 01       	movw	r24, r22
     dda:	e9 81       	ldd	r30, Y+1	; 0x01
     ddc:	fa 81       	ldd	r31, Y+2	; 0x02
     dde:	26 8d       	ldd	r18, Z+30	; 0x1e
     de0:	37 8d       	ldd	r19, Z+31	; 0x1f
     de2:	40 a1       	ldd	r20, Z+32	; 0x20
     de4:	51 a1       	ldd	r21, Z+33	; 0x21
     de6:	bc 01       	movw	r22, r24
     de8:	cd 01       	movw	r24, r26
     dea:	0e 94 c6 12 	call	0x258c	; 0x258c <__subsf3>
     dee:	dc 01       	movw	r26, r24
     df0:	cb 01       	movw	r24, r22
     df2:	7c 01       	movw	r14, r24
     df4:	8d 01       	movw	r16, r26
     df6:	e9 81       	ldd	r30, Y+1	; 0x01
     df8:	fa 81       	ldd	r31, Y+2	; 0x02
     dfa:	82 a1       	ldd	r24, Z+34	; 0x22
     dfc:	93 a1       	ldd	r25, Z+35	; 0x23
     dfe:	a4 a1       	ldd	r26, Z+36	; 0x24
     e00:	b5 a1       	ldd	r27, Z+37	; 0x25
     e02:	e9 81       	ldd	r30, Y+1	; 0x01
     e04:	fa 81       	ldd	r31, Y+2	; 0x02
     e06:	26 8d       	ldd	r18, Z+30	; 0x1e
     e08:	37 8d       	ldd	r19, Z+31	; 0x1f
     e0a:	40 a1       	ldd	r20, Z+32	; 0x20
     e0c:	51 a1       	ldd	r21, Z+33	; 0x21
     e0e:	bc 01       	movw	r22, r24
     e10:	cd 01       	movw	r24, r26
     e12:	0e 94 c6 12 	call	0x258c	; 0x258c <__subsf3>
     e16:	dc 01       	movw	r26, r24
     e18:	cb 01       	movw	r24, r22
     e1a:	9c 01       	movw	r18, r24
     e1c:	ad 01       	movw	r20, r26
     e1e:	c8 01       	movw	r24, r16
     e20:	b7 01       	movw	r22, r14
     e22:	0e 94 1e 14 	call	0x283c	; 0x283c <__divsf3>
     e26:	dc 01       	movw	r26, r24
     e28:	cb 01       	movw	r24, r22
     e2a:	e9 81       	ldd	r30, Y+1	; 0x01
     e2c:	fa 81       	ldd	r31, Y+2	; 0x02
     e2e:	26 a1       	ldd	r18, Z+38	; 0x26
     e30:	37 a1       	ldd	r19, Z+39	; 0x27
     e32:	40 a5       	ldd	r20, Z+40	; 0x28
     e34:	51 a5       	ldd	r21, Z+41	; 0x29
     e36:	bc 01       	movw	r22, r24
     e38:	cd 01       	movw	r24, r26
     e3a:	0e 94 24 13 	call	0x2648	; 0x2648 <__mulsf3>
     e3e:	dc 01       	movw	r26, r24
     e40:	cb 01       	movw	r24, r22
     e42:	9c 01       	movw	r18, r24
     e44:	ad 01       	movw	r20, r26
     e46:	89 81       	ldd	r24, Y+1	; 0x01
     e48:	9a 81       	ldd	r25, Y+2	; 0x02
     e4a:	fc 01       	movw	r30, r24
     e4c:	e9 56       	subi	r30, 0x69	; 105
     e4e:	ff 4f       	sbci	r31, 0xFF	; 255
     e50:	20 83       	st	Z, r18
     e52:	31 83       	std	Z+1, r19	; 0x01
     e54:	42 83       	std	Z+2, r20	; 0x02
     e56:	53 83       	std	Z+3, r21	; 0x03
	lengthVal = max(lengthVal,0);
     e58:	89 81       	ldd	r24, Y+1	; 0x01
     e5a:	9a 81       	ldd	r25, Y+2	; 0x02
     e5c:	fc 01       	movw	r30, r24
     e5e:	e9 56       	subi	r30, 0x69	; 105
     e60:	ff 4f       	sbci	r31, 0xFF	; 255
     e62:	80 81       	ld	r24, Z
     e64:	91 81       	ldd	r25, Z+1	; 0x01
     e66:	a2 81       	ldd	r26, Z+2	; 0x02
     e68:	b3 81       	ldd	r27, Z+3	; 0x03
     e6a:	bc 01       	movw	r22, r24
     e6c:	cd 01       	movw	r24, r26
     e6e:	20 e0       	ldi	r18, 0x00	; 0
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	40 e0       	ldi	r20, 0x00	; 0
     e74:	50 e0       	ldi	r21, 0x00	; 0
     e76:	0e 94 ca 14 	call	0x2994	; 0x2994 <__gtsf2>
     e7a:	18 16       	cp	r1, r24
     e7c:	74 f4       	brge	.+28     	; 0xe9a <_ZN14BigDigitDriver7measureEv+0xfc>
     e7e:	89 81       	ldd	r24, Y+1	; 0x01
     e80:	9a 81       	ldd	r25, Y+2	; 0x02
     e82:	fc 01       	movw	r30, r24
     e84:	e9 56       	subi	r30, 0x69	; 105
     e86:	ff 4f       	sbci	r31, 0xFF	; 255
     e88:	80 81       	ld	r24, Z
     e8a:	91 81       	ldd	r25, Z+1	; 0x01
     e8c:	a2 81       	ldd	r26, Z+2	; 0x02
     e8e:	b3 81       	ldd	r27, Z+3	; 0x03
     e90:	8f 83       	std	Y+7, r24	; 0x07
     e92:	98 87       	std	Y+8, r25	; 0x08
     e94:	a9 87       	std	Y+9, r26	; 0x09
     e96:	ba 87       	std	Y+10, r27	; 0x0a
     e98:	08 c0       	rjmp	.+16     	; 0xeaa <_ZN14BigDigitDriver7measureEv+0x10c>
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	a0 e0       	ldi	r26, 0x00	; 0
     ea0:	b0 e0       	ldi	r27, 0x00	; 0
     ea2:	8f 83       	std	Y+7, r24	; 0x07
     ea4:	98 87       	std	Y+8, r25	; 0x08
     ea6:	a9 87       	std	Y+9, r26	; 0x09
     ea8:	ba 87       	std	Y+10, r27	; 0x0a
     eaa:	89 81       	ldd	r24, Y+1	; 0x01
     eac:	9a 81       	ldd	r25, Y+2	; 0x02
     eae:	fc 01       	movw	r30, r24
     eb0:	e9 56       	subi	r30, 0x69	; 105
     eb2:	ff 4f       	sbci	r31, 0xFF	; 255
     eb4:	8f 81       	ldd	r24, Y+7	; 0x07
     eb6:	98 85       	ldd	r25, Y+8	; 0x08
     eb8:	a9 85       	ldd	r26, Y+9	; 0x09
     eba:	ba 85       	ldd	r27, Y+10	; 0x0a
     ebc:	80 83       	st	Z, r24
     ebe:	91 83       	std	Z+1, r25	; 0x01
     ec0:	a2 83       	std	Z+2, r26	; 0x02
     ec2:	b3 83       	std	Z+3, r27	; 0x03
	lengthVal = min(lengthVal,sHigh);
     ec4:	89 81       	ldd	r24, Y+1	; 0x01
     ec6:	9a 81       	ldd	r25, Y+2	; 0x02
     ec8:	fc 01       	movw	r30, r24
     eca:	e9 56       	subi	r30, 0x69	; 105
     ecc:	ff 4f       	sbci	r31, 0xFF	; 255
     ece:	80 81       	ld	r24, Z
     ed0:	91 81       	ldd	r25, Z+1	; 0x01
     ed2:	a2 81       	ldd	r26, Z+2	; 0x02
     ed4:	b3 81       	ldd	r27, Z+3	; 0x03
     ed6:	e9 81       	ldd	r30, Y+1	; 0x01
     ed8:	fa 81       	ldd	r31, Y+2	; 0x02
     eda:	22 a1       	ldd	r18, Z+34	; 0x22
     edc:	33 a1       	ldd	r19, Z+35	; 0x23
     ede:	44 a1       	ldd	r20, Z+36	; 0x24
     ee0:	55 a1       	ldd	r21, Z+37	; 0x25
     ee2:	bc 01       	movw	r22, r24
     ee4:	cd 01       	movw	r24, r26
     ee6:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__ltsf2>
     eea:	88 23       	and	r24, r24
     eec:	74 f4       	brge	.+28     	; 0xf0a <_ZN14BigDigitDriver7measureEv+0x16c>
     eee:	89 81       	ldd	r24, Y+1	; 0x01
     ef0:	9a 81       	ldd	r25, Y+2	; 0x02
     ef2:	fc 01       	movw	r30, r24
     ef4:	e9 56       	subi	r30, 0x69	; 105
     ef6:	ff 4f       	sbci	r31, 0xFF	; 255
     ef8:	80 81       	ld	r24, Z
     efa:	91 81       	ldd	r25, Z+1	; 0x01
     efc:	a2 81       	ldd	r26, Z+2	; 0x02
     efe:	b3 81       	ldd	r27, Z+3	; 0x03
     f00:	8b 83       	std	Y+3, r24	; 0x03
     f02:	9c 83       	std	Y+4, r25	; 0x04
     f04:	ad 83       	std	Y+5, r26	; 0x05
     f06:	be 83       	std	Y+6, r27	; 0x06
     f08:	0a c0       	rjmp	.+20     	; 0xf1e <_ZN14BigDigitDriver7measureEv+0x180>
     f0a:	e9 81       	ldd	r30, Y+1	; 0x01
     f0c:	fa 81       	ldd	r31, Y+2	; 0x02
     f0e:	82 a1       	ldd	r24, Z+34	; 0x22
     f10:	93 a1       	ldd	r25, Z+35	; 0x23
     f12:	a4 a1       	ldd	r26, Z+36	; 0x24
     f14:	b5 a1       	ldd	r27, Z+37	; 0x25
     f16:	8b 83       	std	Y+3, r24	; 0x03
     f18:	9c 83       	std	Y+4, r25	; 0x04
     f1a:	ad 83       	std	Y+5, r26	; 0x05
     f1c:	be 83       	std	Y+6, r27	; 0x06
     f1e:	89 81       	ldd	r24, Y+1	; 0x01
     f20:	9a 81       	ldd	r25, Y+2	; 0x02
     f22:	fc 01       	movw	r30, r24
     f24:	e9 56       	subi	r30, 0x69	; 105
     f26:	ff 4f       	sbci	r31, 0xFF	; 255
     f28:	8b 81       	ldd	r24, Y+3	; 0x03
     f2a:	9c 81       	ldd	r25, Y+4	; 0x04
     f2c:	ad 81       	ldd	r26, Y+5	; 0x05
     f2e:	be 81       	ldd	r27, Y+6	; 0x06
     f30:	80 83       	st	Z, r24
     f32:	91 83       	std	Z+1, r25	; 0x01
     f34:	a2 83       	std	Z+2, r26	; 0x02
     f36:	b3 83       	std	Z+3, r27	; 0x03

	lengthVal = 0.75 * lengthVal + 0.25 * prevLengthVal;
     f38:	89 81       	ldd	r24, Y+1	; 0x01
     f3a:	9a 81       	ldd	r25, Y+2	; 0x02
     f3c:	fc 01       	movw	r30, r24
     f3e:	e9 56       	subi	r30, 0x69	; 105
     f40:	ff 4f       	sbci	r31, 0xFF	; 255
     f42:	80 81       	ld	r24, Z
     f44:	91 81       	ldd	r25, Z+1	; 0x01
     f46:	a2 81       	ldd	r26, Z+2	; 0x02
     f48:	b3 81       	ldd	r27, Z+3	; 0x03
     f4a:	bc 01       	movw	r22, r24
     f4c:	cd 01       	movw	r24, r26
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	40 e4       	ldi	r20, 0x40	; 64
     f54:	5f e3       	ldi	r21, 0x3F	; 63
     f56:	0e 94 24 13 	call	0x2648	; 0x2648 <__mulsf3>
     f5a:	dc 01       	movw	r26, r24
     f5c:	cb 01       	movw	r24, r22
     f5e:	7c 01       	movw	r14, r24
     f60:	8d 01       	movw	r16, r26
     f62:	89 81       	ldd	r24, Y+1	; 0x01
     f64:	9a 81       	ldd	r25, Y+2	; 0x02
     f66:	fc 01       	movw	r30, r24
     f68:	e5 56       	subi	r30, 0x65	; 101
     f6a:	ff 4f       	sbci	r31, 0xFF	; 255
     f6c:	80 81       	ld	r24, Z
     f6e:	91 81       	ldd	r25, Z+1	; 0x01
     f70:	a2 81       	ldd	r26, Z+2	; 0x02
     f72:	b3 81       	ldd	r27, Z+3	; 0x03
     f74:	bc 01       	movw	r22, r24
     f76:	cd 01       	movw	r24, r26
     f78:	20 e0       	ldi	r18, 0x00	; 0
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	40 e8       	ldi	r20, 0x80	; 128
     f7e:	5e e3       	ldi	r21, 0x3E	; 62
     f80:	0e 94 24 13 	call	0x2648	; 0x2648 <__mulsf3>
     f84:	dc 01       	movw	r26, r24
     f86:	cb 01       	movw	r24, r22
     f88:	9c 01       	movw	r18, r24
     f8a:	ad 01       	movw	r20, r26
     f8c:	c8 01       	movw	r24, r16
     f8e:	b7 01       	movw	r22, r14
     f90:	0e 94 f7 12 	call	0x25ee	; 0x25ee <__addsf3>
     f94:	dc 01       	movw	r26, r24
     f96:	cb 01       	movw	r24, r22
     f98:	9c 01       	movw	r18, r24
     f9a:	ad 01       	movw	r20, r26
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	9a 81       	ldd	r25, Y+2	; 0x02
     fa0:	fc 01       	movw	r30, r24
     fa2:	e9 56       	subi	r30, 0x69	; 105
     fa4:	ff 4f       	sbci	r31, 0xFF	; 255
     fa6:	20 83       	st	Z, r18
     fa8:	31 83       	std	Z+1, r19	; 0x01
     faa:	42 83       	std	Z+2, r20	; 0x02
     fac:	53 83       	std	Z+3, r21	; 0x03
	Serial.print("SETTING MASS TO::: ");
     fae:	87 ec       	ldi	r24, 0xC7	; 199
     fb0:	93 e0       	ldi	r25, 0x03	; 3
     fb2:	22 e0       	ldi	r18, 0x02	; 2
     fb4:	31 e0       	ldi	r19, 0x01	; 1
     fb6:	b9 01       	movw	r22, r18
     fb8:	0e 94 6d 1a 	call	0x34da	; 0x34da <_ZN5Print5printEPKc>
	Serial.println((int) lengthVal, DEC);
     fbc:	89 81       	ldd	r24, Y+1	; 0x01
     fbe:	9a 81       	ldd	r25, Y+2	; 0x02
     fc0:	fc 01       	movw	r30, r24
     fc2:	e9 56       	subi	r30, 0x69	; 105
     fc4:	ff 4f       	sbci	r31, 0xFF	; 255
     fc6:	80 81       	ld	r24, Z
     fc8:	91 81       	ldd	r25, Z+1	; 0x01
     fca:	a2 81       	ldd	r26, Z+2	; 0x02
     fcc:	b3 81       	ldd	r27, Z+3	; 0x03
     fce:	bc 01       	movw	r22, r24
     fd0:	cd 01       	movw	r24, r26
     fd2:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
     fd6:	dc 01       	movw	r26, r24
     fd8:	cb 01       	movw	r24, r22
     fda:	9c 01       	movw	r18, r24
     fdc:	87 ec       	ldi	r24, 0xC7	; 199
     fde:	93 e0       	ldi	r25, 0x03	; 3
     fe0:	b9 01       	movw	r22, r18
     fe2:	4a e0       	ldi	r20, 0x0A	; 10
     fe4:	50 e0       	ldi	r21, 0x00	; 0
     fe6:	0e 94 3a 1c 	call	0x3874	; 0x3874 <_ZN5Print7printlnEii>
	setLength((int) lengthVal);
     fea:	89 81       	ldd	r24, Y+1	; 0x01
     fec:	9a 81       	ldd	r25, Y+2	; 0x02
     fee:	fc 01       	movw	r30, r24
     ff0:	e9 56       	subi	r30, 0x69	; 105
     ff2:	ff 4f       	sbci	r31, 0xFF	; 255
     ff4:	80 81       	ld	r24, Z
     ff6:	91 81       	ldd	r25, Z+1	; 0x01
     ff8:	a2 81       	ldd	r26, Z+2	; 0x02
     ffa:	b3 81       	ldd	r27, Z+3	; 0x03
     ffc:	bc 01       	movw	r22, r24
     ffe:	cd 01       	movw	r24, r26
    1000:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
    1004:	dc 01       	movw	r26, r24
    1006:	cb 01       	movw	r24, r22
    1008:	9c 01       	movw	r18, r24
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	9a 81       	ldd	r25, Y+2	; 0x02
    100e:	b9 01       	movw	r22, r18
    1010:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN14BigDigitDriver9setLengthEi>
	prevLengthVal = lengthVal;
    1014:	89 81       	ldd	r24, Y+1	; 0x01
    1016:	9a 81       	ldd	r25, Y+2	; 0x02
    1018:	fc 01       	movw	r30, r24
    101a:	e9 56       	subi	r30, 0x69	; 105
    101c:	ff 4f       	sbci	r31, 0xFF	; 255
    101e:	20 81       	ld	r18, Z
    1020:	31 81       	ldd	r19, Z+1	; 0x01
    1022:	42 81       	ldd	r20, Z+2	; 0x02
    1024:	53 81       	ldd	r21, Z+3	; 0x03
    1026:	89 81       	ldd	r24, Y+1	; 0x01
    1028:	9a 81       	ldd	r25, Y+2	; 0x02
    102a:	fc 01       	movw	r30, r24
    102c:	e5 56       	subi	r30, 0x65	; 101
    102e:	ff 4f       	sbci	r31, 0xFF	; 255
    1030:	20 83       	st	Z, r18
    1032:	31 83       	std	Z+1, r19	; 0x01
    1034:	42 83       	std	Z+2, r20	; 0x02
    1036:	53 83       	std	Z+3, r21	; 0x03

}
    1038:	2a 96       	adiw	r28, 0x0a	; 10
    103a:	0f b6       	in	r0, 0x3f	; 63
    103c:	f8 94       	cli
    103e:	de bf       	out	0x3e, r29	; 62
    1040:	0f be       	out	0x3f, r0	; 63
    1042:	cd bf       	out	0x3d, r28	; 61
    1044:	cf 91       	pop	r28
    1046:	df 91       	pop	r29
    1048:	1f 91       	pop	r17
    104a:	0f 91       	pop	r16
    104c:	ff 90       	pop	r15
    104e:	ef 90       	pop	r14
    1050:	08 95       	ret

00001052 <_ZN14BigDigitDriver12updateSliderEv>:
void BigDigitDriver::updateButtons() {
	kgVal = digitalRead(kgPin);
	lbVal = digitalRead(lbPin);
}

void BigDigitDriver::updateSlider() {
    1052:	df 93       	push	r29
    1054:	cf 93       	push	r28
    1056:	00 d0       	rcall	.+0      	; 0x1058 <_ZN14BigDigitDriver12updateSliderEv+0x6>
    1058:	cd b7       	in	r28, 0x3d	; 61
    105a:	de b7       	in	r29, 0x3e	; 62
    105c:	9a 83       	std	Y+2, r25	; 0x02
    105e:	89 83       	std	Y+1, r24	; 0x01
	sliderVal = analogRead(A0);
    1060:	8e e0       	ldi	r24, 0x0E	; 14
    1062:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <analogRead>
    1066:	e9 81       	ldd	r30, Y+1	; 0x01
    1068:	fa 81       	ldd	r31, Y+2	; 0x02
    106a:	94 87       	std	Z+12, r25	; 0x0c
    106c:	83 87       	std	Z+11, r24	; 0x0b
	//if(sliderVal!=sliderHistory[0]){
	pushSliderVal(sliderVal);
    106e:	e9 81       	ldd	r30, Y+1	; 0x01
    1070:	fa 81       	ldd	r31, Y+2	; 0x02
    1072:	23 85       	ldd	r18, Z+11	; 0x0b
    1074:	34 85       	ldd	r19, Z+12	; 0x0c
    1076:	89 81       	ldd	r24, Y+1	; 0x01
    1078:	9a 81       	ldd	r25, Y+2	; 0x02
    107a:	b9 01       	movw	r22, r18
    107c:	0e 94 0c 01 	call	0x218	; 0x218 <_ZN14BigDigitDriver13pushSliderValEi>
	// }
}
    1080:	0f 90       	pop	r0
    1082:	0f 90       	pop	r0
    1084:	cf 91       	pop	r28
    1086:	df 91       	pop	r29
    1088:	08 95       	ret

0000108a <_ZN14BigDigitDriver6setAllEi>:
	for (int i = 0; i < 3; i++) {
		digitArray[2 - i] /= pow(10, i);
	}
}

void BigDigitDriver::setAll(int val_in) {
    108a:	df 93       	push	r29
    108c:	cf 93       	push	r28
    108e:	cd b7       	in	r28, 0x3d	; 61
    1090:	de b7       	in	r29, 0x3e	; 62
    1092:	28 97       	sbiw	r28, 0x08	; 8
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	f8 94       	cli
    1098:	de bf       	out	0x3e, r29	; 62
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	cd bf       	out	0x3d, r28	; 61
    109e:	9e 83       	std	Y+6, r25	; 0x06
    10a0:	8d 83       	std	Y+5, r24	; 0x05
    10a2:	78 87       	std	Y+8, r23	; 0x08
    10a4:	6f 83       	std	Y+7, r22	; 0x07
	updateSlider();
    10a6:	8d 81       	ldd	r24, Y+5	; 0x05
    10a8:	9e 81       	ldd	r25, Y+6	; 0x06
    10aa:	0e 94 29 08 	call	0x1052	; 0x1052 <_ZN14BigDigitDriver12updateSliderEv>
	for (int i = 0; i < 9; i++) {
    10ae:	1c 82       	std	Y+4, r1	; 0x04
    10b0:	1b 82       	std	Y+3, r1	; 0x03
    10b2:	13 c0       	rjmp	.+38     	; 0x10da <_ZN14BigDigitDriver6setAllEi+0x50>
		digitArray[i] = val_in;
    10b4:	8b 81       	ldd	r24, Y+3	; 0x03
    10b6:	9c 81       	ldd	r25, Y+4	; 0x04
    10b8:	2d 81       	ldd	r18, Y+5	; 0x05
    10ba:	3e 81       	ldd	r19, Y+6	; 0x06
    10bc:	88 0f       	add	r24, r24
    10be:	99 1f       	adc	r25, r25
    10c0:	82 0f       	add	r24, r18
    10c2:	93 1f       	adc	r25, r19
    10c4:	fc 01       	movw	r30, r24
    10c6:	f5 96       	adiw	r30, 0x35	; 53
    10c8:	8f 81       	ldd	r24, Y+7	; 0x07
    10ca:	98 85       	ldd	r25, Y+8	; 0x08
    10cc:	91 83       	std	Z+1, r25	; 0x01
    10ce:	80 83       	st	Z, r24
	}
}

void BigDigitDriver::setAll(int val_in) {
	updateSlider();
	for (int i = 0; i < 9; i++) {
    10d0:	8b 81       	ldd	r24, Y+3	; 0x03
    10d2:	9c 81       	ldd	r25, Y+4	; 0x04
    10d4:	01 96       	adiw	r24, 0x01	; 1
    10d6:	9c 83       	std	Y+4, r25	; 0x04
    10d8:	8b 83       	std	Y+3, r24	; 0x03
    10da:	8b 81       	ldd	r24, Y+3	; 0x03
    10dc:	9c 81       	ldd	r25, Y+4	; 0x04
    10de:	89 30       	cpi	r24, 0x09	; 9
    10e0:	91 05       	cpc	r25, r1
    10e2:	44 f3       	brlt	.-48     	; 0x10b4 <_ZN14BigDigitDriver6setAllEi+0x2a>
		digitArray[i] = val_in;
	}
	for (int i = 0; i < HISTORYLENGTH; i++) {
    10e4:	1a 82       	std	Y+2, r1	; 0x02
    10e6:	19 82       	std	Y+1, r1	; 0x01
    10e8:	16 c0       	rjmp	.+44     	; 0x1116 <_ZN14BigDigitDriver6setAllEi+0x8c>
		sliderHistory[i] = sliderVal;
    10ea:	89 81       	ldd	r24, Y+1	; 0x01
    10ec:	9a 81       	ldd	r25, Y+2	; 0x02
    10ee:	ed 81       	ldd	r30, Y+5	; 0x05
    10f0:	fe 81       	ldd	r31, Y+6	; 0x06
    10f2:	43 85       	ldd	r20, Z+11	; 0x0b
    10f4:	54 85       	ldd	r21, Z+12	; 0x0c
    10f6:	2d 81       	ldd	r18, Y+5	; 0x05
    10f8:	3e 81       	ldd	r19, Y+6	; 0x06
    10fa:	88 0f       	add	r24, r24
    10fc:	99 1f       	adc	r25, r25
    10fe:	82 0f       	add	r24, r18
    1100:	93 1f       	adc	r25, r19
    1102:	fc 01       	movw	r30, r24
    1104:	ef 58       	subi	r30, 0x8F	; 143
    1106:	ff 4f       	sbci	r31, 0xFF	; 255
    1108:	51 83       	std	Z+1, r21	; 0x01
    110a:	40 83       	st	Z, r20
void BigDigitDriver::setAll(int val_in) {
	updateSlider();
	for (int i = 0; i < 9; i++) {
		digitArray[i] = val_in;
	}
	for (int i = 0; i < HISTORYLENGTH; i++) {
    110c:	89 81       	ldd	r24, Y+1	; 0x01
    110e:	9a 81       	ldd	r25, Y+2	; 0x02
    1110:	01 96       	adiw	r24, 0x01	; 1
    1112:	9a 83       	std	Y+2, r25	; 0x02
    1114:	89 83       	std	Y+1, r24	; 0x01
    1116:	89 81       	ldd	r24, Y+1	; 0x01
    1118:	9a 81       	ldd	r25, Y+2	; 0x02
    111a:	8a 30       	cpi	r24, 0x0A	; 10
    111c:	91 05       	cpc	r25, r1
    111e:	2c f3       	brlt	.-54     	; 0x10ea <_ZN14BigDigitDriver6setAllEi+0x60>
		sliderHistory[i] = sliderVal;
	}
}
    1120:	28 96       	adiw	r28, 0x08	; 8
    1122:	0f b6       	in	r0, 0x3f	; 63
    1124:	f8 94       	cli
    1126:	de bf       	out	0x3e, r29	; 62
    1128:	0f be       	out	0x3f, r0	; 63
    112a:	cd bf       	out	0x3d, r28	; 61
    112c:	cf 91       	pop	r28
    112e:	df 91       	pop	r29
    1130:	08 95       	ret

00001132 <_ZN14BigDigitDriver7startupEv>:
		 */
		return false;
	}
}

void BigDigitDriver::startup() {
    1132:	df 93       	push	r29
    1134:	cf 93       	push	r28
    1136:	00 d0       	rcall	.+0      	; 0x1138 <_ZN14BigDigitDriver7startupEv+0x6>
    1138:	00 d0       	rcall	.+0      	; 0x113a <_ZN14BigDigitDriver7startupEv+0x8>
    113a:	00 d0       	rcall	.+0      	; 0x113c <_ZN14BigDigitDriver7startupEv+0xa>
    113c:	cd b7       	in	r28, 0x3d	; 61
    113e:	de b7       	in	r29, 0x3e	; 62
    1140:	9e 83       	std	Y+6, r25	; 0x06
    1142:	8d 83       	std	Y+5, r24	; 0x05
	for (int i = 0; i < 9; i++) {
    1144:	1c 82       	std	Y+4, r1	; 0x04
    1146:	1b 82       	std	Y+3, r1	; 0x03
    1148:	40 c0       	rjmp	.+128    	; 0x11ca <_ZN14BigDigitDriver7startupEv+0x98>
		for (int j = 0; j < 9; j++) {
    114a:	1a 82       	std	Y+2, r1	; 0x02
    114c:	19 82       	std	Y+1, r1	; 0x01
    114e:	29 c0       	rjmp	.+82     	; 0x11a2 <_ZN14BigDigitDriver7startupEv+0x70>
			if (j <= i) {
    1150:	29 81       	ldd	r18, Y+1	; 0x01
    1152:	3a 81       	ldd	r19, Y+2	; 0x02
    1154:	8b 81       	ldd	r24, Y+3	; 0x03
    1156:	9c 81       	ldd	r25, Y+4	; 0x04
    1158:	82 17       	cp	r24, r18
    115a:	93 07       	cpc	r25, r19
    115c:	7c f0       	brlt	.+30     	; 0x117c <_ZN14BigDigitDriver7startupEv+0x4a>
				digitArray[j] = 1;
    115e:	89 81       	ldd	r24, Y+1	; 0x01
    1160:	9a 81       	ldd	r25, Y+2	; 0x02
    1162:	2d 81       	ldd	r18, Y+5	; 0x05
    1164:	3e 81       	ldd	r19, Y+6	; 0x06
    1166:	88 0f       	add	r24, r24
    1168:	99 1f       	adc	r25, r25
    116a:	82 0f       	add	r24, r18
    116c:	93 1f       	adc	r25, r19
    116e:	fc 01       	movw	r30, r24
    1170:	f5 96       	adiw	r30, 0x35	; 53
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	91 83       	std	Z+1, r25	; 0x01
    1178:	80 83       	st	Z, r24
    117a:	0e c0       	rjmp	.+28     	; 0x1198 <_ZN14BigDigitDriver7startupEv+0x66>
			} else {
				digitArray[j] = 10;
    117c:	89 81       	ldd	r24, Y+1	; 0x01
    117e:	9a 81       	ldd	r25, Y+2	; 0x02
    1180:	2d 81       	ldd	r18, Y+5	; 0x05
    1182:	3e 81       	ldd	r19, Y+6	; 0x06
    1184:	88 0f       	add	r24, r24
    1186:	99 1f       	adc	r25, r25
    1188:	82 0f       	add	r24, r18
    118a:	93 1f       	adc	r25, r19
    118c:	fc 01       	movw	r30, r24
    118e:	f5 96       	adiw	r30, 0x35	; 53
    1190:	8a e0       	ldi	r24, 0x0A	; 10
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	91 83       	std	Z+1, r25	; 0x01
    1196:	80 83       	st	Z, r24
	}
}

void BigDigitDriver::startup() {
	for (int i = 0; i < 9; i++) {
		for (int j = 0; j < 9; j++) {
    1198:	89 81       	ldd	r24, Y+1	; 0x01
    119a:	9a 81       	ldd	r25, Y+2	; 0x02
    119c:	01 96       	adiw	r24, 0x01	; 1
    119e:	9a 83       	std	Y+2, r25	; 0x02
    11a0:	89 83       	std	Y+1, r24	; 0x01
    11a2:	89 81       	ldd	r24, Y+1	; 0x01
    11a4:	9a 81       	ldd	r25, Y+2	; 0x02
    11a6:	89 30       	cpi	r24, 0x09	; 9
    11a8:	91 05       	cpc	r25, r1
    11aa:	94 f2       	brlt	.-92     	; 0x1150 <_ZN14BigDigitDriver7startupEv+0x1e>
				digitArray[j] = 1;
			} else {
				digitArray[j] = 10;
			}
		}
		updateDisplays();
    11ac:	8d 81       	ldd	r24, Y+5	; 0x05
    11ae:	9e 81       	ldd	r25, Y+6	; 0x06
    11b0:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
		delay(100);
    11b4:	64 e6       	ldi	r22, 0x64	; 100
    11b6:	70 e0       	ldi	r23, 0x00	; 0
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
		return false;
	}
}

void BigDigitDriver::startup() {
	for (int i = 0; i < 9; i++) {
    11c0:	8b 81       	ldd	r24, Y+3	; 0x03
    11c2:	9c 81       	ldd	r25, Y+4	; 0x04
    11c4:	01 96       	adiw	r24, 0x01	; 1
    11c6:	9c 83       	std	Y+4, r25	; 0x04
    11c8:	8b 83       	std	Y+3, r24	; 0x03
    11ca:	8b 81       	ldd	r24, Y+3	; 0x03
    11cc:	9c 81       	ldd	r25, Y+4	; 0x04
    11ce:	89 30       	cpi	r24, 0x09	; 9
    11d0:	91 05       	cpc	r25, r1
    11d2:	0c f4       	brge	.+2      	; 0x11d6 <_ZN14BigDigitDriver7startupEv+0xa4>
    11d4:	ba cf       	rjmp	.-140    	; 0x114a <_ZN14BigDigitDriver7startupEv+0x18>
		}
		updateDisplays();
		delay(100);

	}
	setAll(8);
    11d6:	8d 81       	ldd	r24, Y+5	; 0x05
    11d8:	9e 81       	ldd	r25, Y+6	; 0x06
    11da:	68 e0       	ldi	r22, 0x08	; 8
    11dc:	70 e0       	ldi	r23, 0x00	; 0
    11de:	0e 94 45 08 	call	0x108a	; 0x108a <_ZN14BigDigitDriver6setAllEi>
	updateDisplays();
    11e2:	8d 81       	ldd	r24, Y+5	; 0x05
    11e4:	9e 81       	ldd	r25, Y+6	; 0x06
    11e6:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
	delay(200);
    11ea:	68 ec       	ldi	r22, 0xC8	; 200
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	80 e0       	ldi	r24, 0x00	; 0
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
	setAll(10);
    11f6:	8d 81       	ldd	r24, Y+5	; 0x05
    11f8:	9e 81       	ldd	r25, Y+6	; 0x06
    11fa:	6a e0       	ldi	r22, 0x0A	; 10
    11fc:	70 e0       	ldi	r23, 0x00	; 0
    11fe:	0e 94 45 08 	call	0x108a	; 0x108a <_ZN14BigDigitDriver6setAllEi>
	updateDisplays();
    1202:	8d 81       	ldd	r24, Y+5	; 0x05
    1204:	9e 81       	ldd	r25, Y+6	; 0x06
    1206:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
	delay(200);
    120a:	68 ec       	ldi	r22, 0xC8	; 200
    120c:	70 e0       	ldi	r23, 0x00	; 0
    120e:	80 e0       	ldi	r24, 0x00	; 0
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
	setAll(8);
    1216:	8d 81       	ldd	r24, Y+5	; 0x05
    1218:	9e 81       	ldd	r25, Y+6	; 0x06
    121a:	68 e0       	ldi	r22, 0x08	; 8
    121c:	70 e0       	ldi	r23, 0x00	; 0
    121e:	0e 94 45 08 	call	0x108a	; 0x108a <_ZN14BigDigitDriver6setAllEi>
	updateDisplays();
    1222:	8d 81       	ldd	r24, Y+5	; 0x05
    1224:	9e 81       	ldd	r25, Y+6	; 0x06
    1226:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
	delay(200);
    122a:	68 ec       	ldi	r22, 0xC8	; 200
    122c:	70 e0       	ldi	r23, 0x00	; 0
    122e:	80 e0       	ldi	r24, 0x00	; 0
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
	setAll(10);
    1236:	8d 81       	ldd	r24, Y+5	; 0x05
    1238:	9e 81       	ldd	r25, Y+6	; 0x06
    123a:	6a e0       	ldi	r22, 0x0A	; 10
    123c:	70 e0       	ldi	r23, 0x00	; 0
    123e:	0e 94 45 08 	call	0x108a	; 0x108a <_ZN14BigDigitDriver6setAllEi>
	updateDisplays();
    1242:	8d 81       	ldd	r24, Y+5	; 0x05
    1244:	9e 81       	ldd	r25, Y+6	; 0x06
    1246:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
	delay(200);
    124a:	68 ec       	ldi	r22, 0xC8	; 200
    124c:	70 e0       	ldi	r23, 0x00	; 0
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
}
    1256:	26 96       	adiw	r28, 0x06	; 6
    1258:	0f b6       	in	r0, 0x3f	; 63
    125a:	f8 94       	cli
    125c:	de bf       	out	0x3e, r29	; 62
    125e:	0f be       	out	0x3f, r0	; 63
    1260:	cd bf       	out	0x3d, r28	; 61
    1262:	cf 91       	pop	r28
    1264:	df 91       	pop	r29
    1266:	08 95       	ret

00001268 <_ZN14BigDigitDriver13updateButtonsEv>:
	useImperial = false;

	startup();
}

void BigDigitDriver::updateButtons() {
    1268:	df 93       	push	r29
    126a:	cf 93       	push	r28
    126c:	00 d0       	rcall	.+0      	; 0x126e <_ZN14BigDigitDriver13updateButtonsEv+0x6>
    126e:	cd b7       	in	r28, 0x3d	; 61
    1270:	de b7       	in	r29, 0x3e	; 62
    1272:	9a 83       	std	Y+2, r25	; 0x02
    1274:	89 83       	std	Y+1, r24	; 0x01
	kgVal = digitalRead(kgPin);
    1276:	e9 81       	ldd	r30, Y+1	; 0x01
    1278:	fa 81       	ldd	r31, Y+2	; 0x02
    127a:	81 89       	ldd	r24, Z+17	; 0x11
    127c:	92 89       	ldd	r25, Z+18	; 0x12
    127e:	0e 94 9c 10 	call	0x2138	; 0x2138 <digitalRead>
    1282:	e9 81       	ldd	r30, Y+1	; 0x01
    1284:	fa 81       	ldd	r31, Y+2	; 0x02
    1286:	96 8b       	std	Z+22, r25	; 0x16
    1288:	85 8b       	std	Z+21, r24	; 0x15
	lbVal = digitalRead(lbPin);
    128a:	e9 81       	ldd	r30, Y+1	; 0x01
    128c:	fa 81       	ldd	r31, Y+2	; 0x02
    128e:	87 85       	ldd	r24, Z+15	; 0x0f
    1290:	90 89       	ldd	r25, Z+16	; 0x10
    1292:	0e 94 9c 10 	call	0x2138	; 0x2138 <digitalRead>
    1296:	e9 81       	ldd	r30, Y+1	; 0x01
    1298:	fa 81       	ldd	r31, Y+2	; 0x02
    129a:	94 8b       	std	Z+20, r25	; 0x14
    129c:	83 8b       	std	Z+19, r24	; 0x13
}
    129e:	0f 90       	pop	r0
    12a0:	0f 90       	pop	r0
    12a2:	cf 91       	pop	r28
    12a4:	df 91       	pop	r29
    12a6:	08 95       	ret

000012a8 <_ZN14BigDigitDriverC1Eiiiibb>:
		int _clockPin,
		int _dataPin,
		int _sliderPin,
		bool _isDino,
		bool _showDecimal
		) {
    12a8:	cf 92       	push	r12
    12aa:	ef 92       	push	r14
    12ac:	0f 93       	push	r16
    12ae:	1f 93       	push	r17
    12b0:	df 93       	push	r29
    12b2:	cf 93       	push	r28
    12b4:	cd b7       	in	r28, 0x3d	; 61
    12b6:	de b7       	in	r29, 0x3e	; 62
    12b8:	2c 97       	sbiw	r28, 0x0c	; 12
    12ba:	0f b6       	in	r0, 0x3f	; 63
    12bc:	f8 94       	cli
    12be:	de bf       	out	0x3e, r29	; 62
    12c0:	0f be       	out	0x3f, r0	; 63
    12c2:	cd bf       	out	0x3d, r28	; 61
    12c4:	9a 83       	std	Y+2, r25	; 0x02
    12c6:	89 83       	std	Y+1, r24	; 0x01
    12c8:	7c 83       	std	Y+4, r23	; 0x04
    12ca:	6b 83       	std	Y+3, r22	; 0x03
    12cc:	5e 83       	std	Y+6, r21	; 0x06
    12ce:	4d 83       	std	Y+5, r20	; 0x05
    12d0:	38 87       	std	Y+8, r19	; 0x08
    12d2:	2f 83       	std	Y+7, r18	; 0x07
    12d4:	1a 87       	std	Y+10, r17	; 0x0a
    12d6:	09 87       	std	Y+9, r16	; 0x09
    12d8:	eb 86       	std	Y+11, r14	; 0x0b
    12da:	cc 86       	std	Y+12, r12	; 0x0c
	//Pin connected to ST_CP of 74HC595
	latchPin = _latchPin;
    12dc:	e9 81       	ldd	r30, Y+1	; 0x01
    12de:	fa 81       	ldd	r31, Y+2	; 0x02
    12e0:	8b 81       	ldd	r24, Y+3	; 0x03
    12e2:	9c 81       	ldd	r25, Y+4	; 0x04
    12e4:	91 83       	std	Z+1, r25	; 0x01
    12e6:	80 83       	st	Z, r24
	//Pin connected to SH_CP of 74HC595
	clockPin = _clockPin;
    12e8:	e9 81       	ldd	r30, Y+1	; 0x01
    12ea:	fa 81       	ldd	r31, Y+2	; 0x02
    12ec:	8d 81       	ldd	r24, Y+5	; 0x05
    12ee:	9e 81       	ldd	r25, Y+6	; 0x06
    12f0:	93 83       	std	Z+3, r25	; 0x03
    12f2:	82 83       	std	Z+2, r24	; 0x02
	////Pin connected to DS of 74HC595
	dataPin = _dataPin;
    12f4:	e9 81       	ldd	r30, Y+1	; 0x01
    12f6:	fa 81       	ldd	r31, Y+2	; 0x02
    12f8:	8f 81       	ldd	r24, Y+7	; 0x07
    12fa:	98 85       	ldd	r25, Y+8	; 0x08
    12fc:	95 83       	std	Z+5, r25	; 0x05
    12fe:	84 83       	std	Z+4, r24	; 0x04

	// is this the measure the dino femur, or visitor's femur?
	// the difference is that there is an empty digit on the
	// measure the visitor side. When reprogramming, swap
	// this value to program the other side.
	isDino = _isDino;
    1300:	8b 85       	ldd	r24, Y+11	; 0x0b
    1302:	e9 81       	ldd	r30, Y+1	; 0x01
    1304:	fa 81       	ldd	r31, Y+2	; 0x02
    1306:	86 83       	std	Z+6, r24	; 0x06

	counter = 0;
    1308:	e9 81       	ldd	r30, Y+1	; 0x01
    130a:	fa 81       	ldd	r31, Y+2	; 0x02
    130c:	10 86       	std	Z+8, r1	; 0x08
    130e:	17 82       	std	Z+7, r1	; 0x07

	sliderPin = A0;
    1310:	e9 81       	ldd	r30, Y+1	; 0x01
    1312:	fa 81       	ldd	r31, Y+2	; 0x02
    1314:	8e e0       	ldi	r24, 0x0E	; 14
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	92 87       	std	Z+10, r25	; 0x0a
    131a:	81 87       	std	Z+9, r24	; 0x09

	sliderVal = 0;
    131c:	e9 81       	ldd	r30, Y+1	; 0x01
    131e:	fa 81       	ldd	r31, Y+2	; 0x02
    1320:	14 86       	std	Z+12, r1	; 0x0c
    1322:	13 86       	std	Z+11, r1	; 0x0b
	prevSliderVal = 0;
    1324:	e9 81       	ldd	r30, Y+1	; 0x01
    1326:	fa 81       	ldd	r31, Y+2	; 0x02
    1328:	16 86       	std	Z+14, r1	; 0x0e
    132a:	15 86       	std	Z+13, r1	; 0x0d

	lbPin = 2;
    132c:	e9 81       	ldd	r30, Y+1	; 0x01
    132e:	fa 81       	ldd	r31, Y+2	; 0x02
    1330:	82 e0       	ldi	r24, 0x02	; 2
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	90 8b       	std	Z+16, r25	; 0x10
    1336:	87 87       	std	Z+15, r24	; 0x0f
	kgPin = 3;
    1338:	e9 81       	ldd	r30, Y+1	; 0x01
    133a:	fa 81       	ldd	r31, Y+2	; 0x02
    133c:	83 e0       	ldi	r24, 0x03	; 3
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	92 8b       	std	Z+18, r25	; 0x12
    1342:	81 8b       	std	Z+17, r24	; 0x11

	lbVal = 0;
    1344:	e9 81       	ldd	r30, Y+1	; 0x01
    1346:	fa 81       	ldd	r31, Y+2	; 0x02
    1348:	14 8a       	std	Z+20, r1	; 0x14
    134a:	13 8a       	std	Z+19, r1	; 0x13
	kgVal = 0;
    134c:	e9 81       	ldd	r30, Y+1	; 0x01
    134e:	fa 81       	ldd	r31, Y+2	; 0x02
    1350:	16 8a       	std	Z+22, r1	; 0x16
    1352:	15 8a       	std	Z+21, r1	; 0x15

	state = -1;
    1354:	e9 81       	ldd	r30, Y+1	; 0x01
    1356:	fa 81       	ldd	r31, Y+2	; 0x02
    1358:	8f ef       	ldi	r24, 0xFF	; 255
    135a:	9f ef       	ldi	r25, 0xFF	; 255
    135c:	90 8f       	std	Z+24, r25	; 0x18
    135e:	87 8b       	std	Z+23, r24	; 0x17

	prevUse = true;
    1360:	e9 81       	ldd	r30, Y+1	; 0x01
    1362:	fa 81       	ldd	r31, Y+2	; 0x02
    1364:	81 e0       	ldi	r24, 0x01	; 1
    1366:	81 8f       	std	Z+25, r24	; 0x19

	startWait = 0;
    1368:	e9 81       	ldd	r30, Y+1	; 0x01
    136a:	fa 81       	ldd	r31, Y+2	; 0x02
    136c:	12 8e       	std	Z+26, r1	; 0x1a
    136e:	13 8e       	std	Z+27, r1	; 0x1b
    1370:	14 8e       	std	Z+28, r1	; 0x1c
    1372:	15 8e       	std	Z+29, r1	; 0x1d
//	uint32_t TIMEOUT = 5000;

	sLow = 0;
    1374:	e9 81       	ldd	r30, Y+1	; 0x01
    1376:	fa 81       	ldd	r31, Y+2	; 0x02
    1378:	80 e0       	ldi	r24, 0x00	; 0
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	a0 e0       	ldi	r26, 0x00	; 0
    137e:	b0 e0       	ldi	r27, 0x00	; 0
    1380:	86 8f       	std	Z+30, r24	; 0x1e
    1382:	97 8f       	std	Z+31, r25	; 0x1f
    1384:	a0 a3       	std	Z+32, r26	; 0x20
    1386:	b1 a3       	std	Z+33, r27	; 0x21
	sHigh = 0;
    1388:	e9 81       	ldd	r30, Y+1	; 0x01
    138a:	fa 81       	ldd	r31, Y+2	; 0x02
    138c:	80 e0       	ldi	r24, 0x00	; 0
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	a0 e0       	ldi	r26, 0x00	; 0
    1392:	b0 e0       	ldi	r27, 0x00	; 0
    1394:	82 a3       	std	Z+34, r24	; 0x22
    1396:	93 a3       	std	Z+35, r25	; 0x23
    1398:	a4 a3       	std	Z+36, r26	; 0x24
    139a:	b5 a3       	std	Z+37, r27	; 0x25
	dHigh = 0;
    139c:	e9 81       	ldd	r30, Y+1	; 0x01
    139e:	fa 81       	ldd	r31, Y+2	; 0x02
    13a0:	80 e0       	ldi	r24, 0x00	; 0
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	a0 e0       	ldi	r26, 0x00	; 0
    13a6:	b0 e0       	ldi	r27, 0x00	; 0
    13a8:	86 a3       	std	Z+38, r24	; 0x26
    13aa:	97 a3       	std	Z+39, r25	; 0x27
    13ac:	a0 a7       	std	Z+40, r26	; 0x28
    13ae:	b1 a7       	std	Z+41, r27	; 0x29

//	digitArray = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//	prevDigits = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	decimalByte = B10000000;
    13b0:	89 81       	ldd	r24, Y+1	; 0x01
    13b2:	9a 81       	ldd	r25, Y+2	; 0x02
    13b4:	fc 01       	movw	r30, r24
    13b6:	e7 5a       	subi	r30, 0xA7	; 167
    13b8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ba:	80 e8       	ldi	r24, 0x80	; 128
    13bc:	80 83       	st	Z, r24
	showDecimal = _showDecimal;
    13be:	2c 85       	ldd	r18, Y+12	; 0x0c
    13c0:	89 81       	ldd	r24, Y+1	; 0x01
    13c2:	9a 81       	ldd	r25, Y+2	; 0x02
    13c4:	fc 01       	movw	r30, r24
    13c6:	e6 5a       	subi	r30, 0xA6	; 166
    13c8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ca:	20 83       	st	Z, r18

//	cmSmoother = { 0, 0, 0, 0, 0 };

	prevMassVal = 0;
    13cc:	89 81       	ldd	r24, Y+1	; 0x01
    13ce:	9a 81       	ldd	r25, Y+2	; 0x02
    13d0:	fc 01       	movw	r30, r24
    13d2:	eb 57       	subi	r30, 0x7B	; 123
    13d4:	ff 4f       	sbci	r31, 0xFF	; 255
    13d6:	80 e0       	ldi	r24, 0x00	; 0
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	a0 e0       	ldi	r26, 0x00	; 0
    13dc:	b0 e0       	ldi	r27, 0x00	; 0
    13de:	80 83       	st	Z, r24
    13e0:	91 83       	std	Z+1, r25	; 0x01
    13e2:	a2 83       	std	Z+2, r26	; 0x02
    13e4:	b3 83       	std	Z+3, r27	; 0x03
	prevLenVal = 0;
    13e6:	89 81       	ldd	r24, Y+1	; 0x01
    13e8:	9a 81       	ldd	r25, Y+2	; 0x02
    13ea:	fc 01       	movw	r30, r24
    13ec:	e7 57       	subi	r30, 0x77	; 119
    13ee:	ff 4f       	sbci	r31, 0xFF	; 255
    13f0:	80 e0       	ldi	r24, 0x00	; 0
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	a0 e0       	ldi	r26, 0x00	; 0
    13f6:	b0 e0       	ldi	r27, 0x00	; 0
    13f8:	80 83       	st	Z, r24
    13fa:	91 83       	std	Z+1, r25	; 0x01
    13fc:	a2 83       	std	Z+2, r26	; 0x02
    13fe:	b3 83       	std	Z+3, r27	; 0x03

	startDisplayMillis = 0;
    1400:	89 81       	ldd	r24, Y+1	; 0x01
    1402:	9a 81       	ldd	r25, Y+2	; 0x02
    1404:	fc 01       	movw	r30, r24
    1406:	e3 57       	subi	r30, 0x73	; 115
    1408:	ff 4f       	sbci	r31, 0xFF	; 255
    140a:	11 82       	std	Z+1, r1	; 0x01
    140c:	10 82       	st	Z, r1
	prevKgVal = HIGH;
    140e:	89 81       	ldd	r24, Y+1	; 0x01
    1410:	9a 81       	ldd	r25, Y+2	; 0x02
    1412:	fc 01       	movw	r30, r24
    1414:	e1 57       	subi	r30, 0x71	; 113
    1416:	ff 4f       	sbci	r31, 0xFF	; 255
    1418:	81 e0       	ldi	r24, 0x01	; 1
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	91 83       	std	Z+1, r25	; 0x01
    141e:	80 83       	st	Z, r24
	prevLbVal = HIGH;
    1420:	89 81       	ldd	r24, Y+1	; 0x01
    1422:	9a 81       	ldd	r25, Y+2	; 0x02
    1424:	fc 01       	movw	r30, r24
    1426:	ef 56       	subi	r30, 0x6F	; 111
    1428:	ff 4f       	sbci	r31, 0xFF	; 255
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	91 83       	std	Z+1, r25	; 0x01
    1430:	80 83       	st	Z, r24

	tempDigit = 0;
    1432:	89 81       	ldd	r24, Y+1	; 0x01
    1434:	9a 81       	ldd	r25, Y+2	; 0x02
    1436:	fc 01       	movw	r30, r24
    1438:	ed 56       	subi	r30, 0x6D	; 109
    143a:	ff 4f       	sbci	r31, 0xFF	; 255
    143c:	11 82       	std	Z+1, r1	; 0x01
    143e:	10 82       	st	Z, r1

	lenVal = 0;
    1440:	89 81       	ldd	r24, Y+1	; 0x01
    1442:	9a 81       	ldd	r25, Y+2	; 0x02
    1444:	fc 01       	movw	r30, r24
    1446:	eb 56       	subi	r30, 0x6B	; 107
    1448:	ff 4f       	sbci	r31, 0xFF	; 255
    144a:	11 82       	std	Z+1, r1	; 0x01
    144c:	10 82       	st	Z, r1

	if (!isDino) {
    144e:	e9 81       	ldd	r30, Y+1	; 0x01
    1450:	fa 81       	ldd	r31, Y+2	; 0x02
    1452:	86 81       	ldd	r24, Z+6	; 0x06
    1454:	88 23       	and	r24, r24
    1456:	f9 f4       	brne	.+62     	; 0x1496 <_ZN14BigDigitDriverC1Eiiiibb+0x1ee>
		sLow = 63;
    1458:	e9 81       	ldd	r30, Y+1	; 0x01
    145a:	fa 81       	ldd	r31, Y+2	; 0x02
    145c:	80 e0       	ldi	r24, 0x00	; 0
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	ac e7       	ldi	r26, 0x7C	; 124
    1462:	b2 e4       	ldi	r27, 0x42	; 66
    1464:	86 8f       	std	Z+30, r24	; 0x1e
    1466:	97 8f       	std	Z+31, r25	; 0x1f
    1468:	a0 a3       	std	Z+32, r26	; 0x20
    146a:	b1 a3       	std	Z+33, r27	; 0x21
		sHigh = 821;
    146c:	e9 81       	ldd	r30, Y+1	; 0x01
    146e:	fa 81       	ldd	r31, Y+2	; 0x02
    1470:	80 e0       	ldi	r24, 0x00	; 0
    1472:	90 e4       	ldi	r25, 0x40	; 64
    1474:	ad e4       	ldi	r26, 0x4D	; 77
    1476:	b4 e4       	ldi	r27, 0x44	; 68
    1478:	82 a3       	std	Z+34, r24	; 0x22
    147a:	93 a3       	std	Z+35, r25	; 0x23
    147c:	a4 a3       	std	Z+36, r26	; 0x24
    147e:	b5 a3       	std	Z+37, r27	; 0x25
		dHigh = 99;
    1480:	e9 81       	ldd	r30, Y+1	; 0x01
    1482:	fa 81       	ldd	r31, Y+2	; 0x02
    1484:	80 e0       	ldi	r24, 0x00	; 0
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	a6 ec       	ldi	r26, 0xC6	; 198
    148a:	b2 e4       	ldi	r27, 0x42	; 66
    148c:	86 a3       	std	Z+38, r24	; 0x26
    148e:	97 a3       	std	Z+39, r25	; 0x27
    1490:	a0 a7       	std	Z+40, r26	; 0x28
    1492:	b1 a7       	std	Z+41, r27	; 0x29
    1494:	1e c0       	rjmp	.+60     	; 0x14d2 <_ZN14BigDigitDriverC1Eiiiibb+0x22a>
	} else {
		sLow = 77;
    1496:	e9 81       	ldd	r30, Y+1	; 0x01
    1498:	fa 81       	ldd	r31, Y+2	; 0x02
    149a:	80 e0       	ldi	r24, 0x00	; 0
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	aa e9       	ldi	r26, 0x9A	; 154
    14a0:	b2 e4       	ldi	r27, 0x42	; 66
    14a2:	86 8f       	std	Z+30, r24	; 0x1e
    14a4:	97 8f       	std	Z+31, r25	; 0x1f
    14a6:	a0 a3       	std	Z+32, r26	; 0x20
    14a8:	b1 a3       	std	Z+33, r27	; 0x21
		sHigh = 959;
    14aa:	e9 81       	ldd	r30, Y+1	; 0x01
    14ac:	fa 81       	ldd	r31, Y+2	; 0x02
    14ae:	80 e0       	ldi	r24, 0x00	; 0
    14b0:	90 ec       	ldi	r25, 0xC0	; 192
    14b2:	af e6       	ldi	r26, 0x6F	; 111
    14b4:	b4 e4       	ldi	r27, 0x44	; 68
    14b6:	82 a3       	std	Z+34, r24	; 0x22
    14b8:	93 a3       	std	Z+35, r25	; 0x23
    14ba:	a4 a3       	std	Z+36, r26	; 0x24
    14bc:	b5 a3       	std	Z+37, r27	; 0x25
		dHigh = 173;
    14be:	e9 81       	ldd	r30, Y+1	; 0x01
    14c0:	fa 81       	ldd	r31, Y+2	; 0x02
    14c2:	80 e0       	ldi	r24, 0x00	; 0
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	ad e2       	ldi	r26, 0x2D	; 45
    14c8:	b3 e4       	ldi	r27, 0x43	; 67
    14ca:	86 a3       	std	Z+38, r24	; 0x26
    14cc:	97 a3       	std	Z+39, r25	; 0x27
    14ce:	a0 a7       	std	Z+40, r26	; 0x28
    14d0:	b1 a7       	std	Z+41, r27	; 0x29
	}

	Serial.begin(9600);
    14d2:	87 ec       	ldi	r24, 0xC7	; 199
    14d4:	93 e0       	ldi	r25, 0x03	; 3
    14d6:	40 e8       	ldi	r20, 0x80	; 128
    14d8:	55 e2       	ldi	r21, 0x25	; 37
    14da:	60 e0       	ldi	r22, 0x00	; 0
    14dc:	70 e0       	ldi	r23, 0x00	; 0
    14de:	0e 94 0b 19 	call	0x3216	; 0x3216 <_ZN14HardwareSerial5beginEl>
	//set pins to output so you can control the shift register
	pinMode(latchPin, OUTPUT);
    14e2:	e9 81       	ldd	r30, Y+1	; 0x01
    14e4:	fa 81       	ldd	r31, Y+2	; 0x02
    14e6:	80 81       	ld	r24, Z
    14e8:	91 81       	ldd	r25, Z+1	; 0x01
    14ea:	61 e0       	ldi	r22, 0x01	; 1
    14ec:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>
	pinMode(clockPin, OUTPUT);
    14f0:	e9 81       	ldd	r30, Y+1	; 0x01
    14f2:	fa 81       	ldd	r31, Y+2	; 0x02
    14f4:	82 81       	ldd	r24, Z+2	; 0x02
    14f6:	93 81       	ldd	r25, Z+3	; 0x03
    14f8:	61 e0       	ldi	r22, 0x01	; 1
    14fa:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>
	pinMode(dataPin, OUTPUT);
    14fe:	e9 81       	ldd	r30, Y+1	; 0x01
    1500:	fa 81       	ldd	r31, Y+2	; 0x02
    1502:	84 81       	ldd	r24, Z+4	; 0x04
    1504:	95 81       	ldd	r25, Z+5	; 0x05
    1506:	61 e0       	ldi	r22, 0x01	; 1
    1508:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>

	pinMode(lbPin, INPUT); // set pin to input
    150c:	e9 81       	ldd	r30, Y+1	; 0x01
    150e:	fa 81       	ldd	r31, Y+2	; 0x02
    1510:	87 85       	ldd	r24, Z+15	; 0x0f
    1512:	90 89       	ldd	r25, Z+16	; 0x10
    1514:	60 e0       	ldi	r22, 0x00	; 0
    1516:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>
	pinMode(kgPin, INPUT); // set pin to input
    151a:	e9 81       	ldd	r30, Y+1	; 0x01
    151c:	fa 81       	ldd	r31, Y+2	; 0x02
    151e:	81 89       	ldd	r24, Z+17	; 0x11
    1520:	92 89       	ldd	r25, Z+18	; 0x12
    1522:	60 e0       	ldi	r22, 0x00	; 0
    1524:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>

	digitalWrite(lbPin, HIGH); // turn on pullup resistors
    1528:	e9 81       	ldd	r30, Y+1	; 0x01
    152a:	fa 81       	ldd	r31, Y+2	; 0x02
    152c:	87 85       	ldd	r24, Z+15	; 0x0f
    152e:	90 89       	ldd	r25, Z+16	; 0x10
    1530:	61 e0       	ldi	r22, 0x01	; 1
    1532:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
	digitalWrite(kgPin, HIGH); // turn on pullup resistors
    1536:	e9 81       	ldd	r30, Y+1	; 0x01
    1538:	fa 81       	ldd	r31, Y+2	; 0x02
    153a:	81 89       	ldd	r24, Z+17	; 0x11
    153c:	92 89       	ldd	r25, Z+18	; 0x12
    153e:	61 e0       	ldi	r22, 0x01	; 1
    1540:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>

	dataArray[1] = B00000101;
    1544:	e9 81       	ldd	r30, Y+1	; 0x01
    1546:	fa 81       	ldd	r31, Y+2	; 0x02
    1548:	85 e0       	ldi	r24, 0x05	; 5
    154a:	83 a7       	std	Z+43, r24	; 0x2b
	dataArray[2] = B01011011;
    154c:	e9 81       	ldd	r30, Y+1	; 0x01
    154e:	fa 81       	ldd	r31, Y+2	; 0x02
    1550:	8b e5       	ldi	r24, 0x5B	; 91
    1552:	84 a7       	std	Z+44, r24	; 0x2c
	dataArray[3] = B01001111;
    1554:	e9 81       	ldd	r30, Y+1	; 0x01
    1556:	fa 81       	ldd	r31, Y+2	; 0x02
    1558:	8f e4       	ldi	r24, 0x4F	; 79
    155a:	85 a7       	std	Z+45, r24	; 0x2d
	dataArray[4] = B01100101;
    155c:	e9 81       	ldd	r30, Y+1	; 0x01
    155e:	fa 81       	ldd	r31, Y+2	; 0x02
    1560:	85 e6       	ldi	r24, 0x65	; 101
    1562:	86 a7       	std	Z+46, r24	; 0x2e
	dataArray[5] = B01101110;
    1564:	e9 81       	ldd	r30, Y+1	; 0x01
    1566:	fa 81       	ldd	r31, Y+2	; 0x02
    1568:	8e e6       	ldi	r24, 0x6E	; 110
    156a:	87 a7       	std	Z+47, r24	; 0x2f
	dataArray[6] = B01111110;
    156c:	e9 81       	ldd	r30, Y+1	; 0x01
    156e:	fa 81       	ldd	r31, Y+2	; 0x02
    1570:	8e e7       	ldi	r24, 0x7E	; 126
    1572:	80 ab       	std	Z+48, r24	; 0x30
	dataArray[7] = B00000111;
    1574:	e9 81       	ldd	r30, Y+1	; 0x01
    1576:	fa 81       	ldd	r31, Y+2	; 0x02
    1578:	87 e0       	ldi	r24, 0x07	; 7
    157a:	81 ab       	std	Z+49, r24	; 0x31
	dataArray[8] = B01111111;
    157c:	e9 81       	ldd	r30, Y+1	; 0x01
    157e:	fa 81       	ldd	r31, Y+2	; 0x02
    1580:	8f e7       	ldi	r24, 0x7F	; 127
    1582:	82 ab       	std	Z+50, r24	; 0x32
	dataArray[9] = B01101111;
    1584:	e9 81       	ldd	r30, Y+1	; 0x01
    1586:	fa 81       	ldd	r31, Y+2	; 0x02
    1588:	8f e6       	ldi	r24, 0x6F	; 111
    158a:	83 ab       	std	Z+51, r24	; 0x33
	dataArray[0] = B00111111;
    158c:	e9 81       	ldd	r30, Y+1	; 0x01
    158e:	fa 81       	ldd	r31, Y+2	; 0x02
    1590:	8f e3       	ldi	r24, 0x3F	; 63
    1592:	82 a7       	std	Z+42, r24	; 0x2a
	dataArray[10] = B00000000;
    1594:	e9 81       	ldd	r30, Y+1	; 0x01
    1596:	fa 81       	ldd	r31, Y+2	; 0x02
    1598:	14 aa       	std	Z+52, r1	; 0x34

	initHistory();
    159a:	89 81       	ldd	r24, Y+1	; 0x01
    159c:	9a 81       	ldd	r25, Y+2	; 0x02
    159e:	0e 94 46 02 	call	0x48c	; 0x48c <_ZN14BigDigitDriver11initHistoryEv>

	useImperial = false;
    15a2:	89 81       	ldd	r24, Y+1	; 0x01
    15a4:	9a 81       	ldd	r25, Y+2	; 0x02
    15a6:	fc 01       	movw	r30, r24
    15a8:	ed 55       	subi	r30, 0x5D	; 93
    15aa:	ff 4f       	sbci	r31, 0xFF	; 255
    15ac:	10 82       	st	Z, r1

	startup();
    15ae:	89 81       	ldd	r24, Y+1	; 0x01
    15b0:	9a 81       	ldd	r25, Y+2	; 0x02
    15b2:	0e 94 99 08 	call	0x1132	; 0x1132 <_ZN14BigDigitDriver7startupEv>
}
    15b6:	2c 96       	adiw	r28, 0x0c	; 12
    15b8:	0f b6       	in	r0, 0x3f	; 63
    15ba:	f8 94       	cli
    15bc:	de bf       	out	0x3e, r29	; 62
    15be:	0f be       	out	0x3f, r0	; 63
    15c0:	cd bf       	out	0x3d, r28	; 61
    15c2:	cf 91       	pop	r28
    15c4:	df 91       	pop	r29
    15c6:	1f 91       	pop	r17
    15c8:	0f 91       	pop	r16
    15ca:	ef 90       	pop	r14
    15cc:	cf 90       	pop	r12
    15ce:	08 95       	ret

000015d0 <_ZN14BigDigitDriverC2Eiiiibb>:
		int _clockPin,
		int _dataPin,
		int _sliderPin,
		bool _isDino,
		bool _showDecimal
		) {
    15d0:	cf 92       	push	r12
    15d2:	ef 92       	push	r14
    15d4:	0f 93       	push	r16
    15d6:	1f 93       	push	r17
    15d8:	df 93       	push	r29
    15da:	cf 93       	push	r28
    15dc:	cd b7       	in	r28, 0x3d	; 61
    15de:	de b7       	in	r29, 0x3e	; 62
    15e0:	2c 97       	sbiw	r28, 0x0c	; 12
    15e2:	0f b6       	in	r0, 0x3f	; 63
    15e4:	f8 94       	cli
    15e6:	de bf       	out	0x3e, r29	; 62
    15e8:	0f be       	out	0x3f, r0	; 63
    15ea:	cd bf       	out	0x3d, r28	; 61
    15ec:	9a 83       	std	Y+2, r25	; 0x02
    15ee:	89 83       	std	Y+1, r24	; 0x01
    15f0:	7c 83       	std	Y+4, r23	; 0x04
    15f2:	6b 83       	std	Y+3, r22	; 0x03
    15f4:	5e 83       	std	Y+6, r21	; 0x06
    15f6:	4d 83       	std	Y+5, r20	; 0x05
    15f8:	38 87       	std	Y+8, r19	; 0x08
    15fa:	2f 83       	std	Y+7, r18	; 0x07
    15fc:	1a 87       	std	Y+10, r17	; 0x0a
    15fe:	09 87       	std	Y+9, r16	; 0x09
    1600:	eb 86       	std	Y+11, r14	; 0x0b
    1602:	cc 86       	std	Y+12, r12	; 0x0c
	//Pin connected to ST_CP of 74HC595
	latchPin = _latchPin;
    1604:	e9 81       	ldd	r30, Y+1	; 0x01
    1606:	fa 81       	ldd	r31, Y+2	; 0x02
    1608:	8b 81       	ldd	r24, Y+3	; 0x03
    160a:	9c 81       	ldd	r25, Y+4	; 0x04
    160c:	91 83       	std	Z+1, r25	; 0x01
    160e:	80 83       	st	Z, r24
	//Pin connected to SH_CP of 74HC595
	clockPin = _clockPin;
    1610:	e9 81       	ldd	r30, Y+1	; 0x01
    1612:	fa 81       	ldd	r31, Y+2	; 0x02
    1614:	8d 81       	ldd	r24, Y+5	; 0x05
    1616:	9e 81       	ldd	r25, Y+6	; 0x06
    1618:	93 83       	std	Z+3, r25	; 0x03
    161a:	82 83       	std	Z+2, r24	; 0x02
	////Pin connected to DS of 74HC595
	dataPin = _dataPin;
    161c:	e9 81       	ldd	r30, Y+1	; 0x01
    161e:	fa 81       	ldd	r31, Y+2	; 0x02
    1620:	8f 81       	ldd	r24, Y+7	; 0x07
    1622:	98 85       	ldd	r25, Y+8	; 0x08
    1624:	95 83       	std	Z+5, r25	; 0x05
    1626:	84 83       	std	Z+4, r24	; 0x04

	// is this the measure the dino femur, or visitor's femur?
	// the difference is that there is an empty digit on the
	// measure the visitor side. When reprogramming, swap
	// this value to program the other side.
	isDino = _isDino;
    1628:	8b 85       	ldd	r24, Y+11	; 0x0b
    162a:	e9 81       	ldd	r30, Y+1	; 0x01
    162c:	fa 81       	ldd	r31, Y+2	; 0x02
    162e:	86 83       	std	Z+6, r24	; 0x06

	counter = 0;
    1630:	e9 81       	ldd	r30, Y+1	; 0x01
    1632:	fa 81       	ldd	r31, Y+2	; 0x02
    1634:	10 86       	std	Z+8, r1	; 0x08
    1636:	17 82       	std	Z+7, r1	; 0x07

	sliderPin = A0;
    1638:	e9 81       	ldd	r30, Y+1	; 0x01
    163a:	fa 81       	ldd	r31, Y+2	; 0x02
    163c:	8e e0       	ldi	r24, 0x0E	; 14
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	92 87       	std	Z+10, r25	; 0x0a
    1642:	81 87       	std	Z+9, r24	; 0x09

	sliderVal = 0;
    1644:	e9 81       	ldd	r30, Y+1	; 0x01
    1646:	fa 81       	ldd	r31, Y+2	; 0x02
    1648:	14 86       	std	Z+12, r1	; 0x0c
    164a:	13 86       	std	Z+11, r1	; 0x0b
	prevSliderVal = 0;
    164c:	e9 81       	ldd	r30, Y+1	; 0x01
    164e:	fa 81       	ldd	r31, Y+2	; 0x02
    1650:	16 86       	std	Z+14, r1	; 0x0e
    1652:	15 86       	std	Z+13, r1	; 0x0d

	lbPin = 2;
    1654:	e9 81       	ldd	r30, Y+1	; 0x01
    1656:	fa 81       	ldd	r31, Y+2	; 0x02
    1658:	82 e0       	ldi	r24, 0x02	; 2
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	90 8b       	std	Z+16, r25	; 0x10
    165e:	87 87       	std	Z+15, r24	; 0x0f
	kgPin = 3;
    1660:	e9 81       	ldd	r30, Y+1	; 0x01
    1662:	fa 81       	ldd	r31, Y+2	; 0x02
    1664:	83 e0       	ldi	r24, 0x03	; 3
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	92 8b       	std	Z+18, r25	; 0x12
    166a:	81 8b       	std	Z+17, r24	; 0x11

	lbVal = 0;
    166c:	e9 81       	ldd	r30, Y+1	; 0x01
    166e:	fa 81       	ldd	r31, Y+2	; 0x02
    1670:	14 8a       	std	Z+20, r1	; 0x14
    1672:	13 8a       	std	Z+19, r1	; 0x13
	kgVal = 0;
    1674:	e9 81       	ldd	r30, Y+1	; 0x01
    1676:	fa 81       	ldd	r31, Y+2	; 0x02
    1678:	16 8a       	std	Z+22, r1	; 0x16
    167a:	15 8a       	std	Z+21, r1	; 0x15

	state = -1;
    167c:	e9 81       	ldd	r30, Y+1	; 0x01
    167e:	fa 81       	ldd	r31, Y+2	; 0x02
    1680:	8f ef       	ldi	r24, 0xFF	; 255
    1682:	9f ef       	ldi	r25, 0xFF	; 255
    1684:	90 8f       	std	Z+24, r25	; 0x18
    1686:	87 8b       	std	Z+23, r24	; 0x17

	prevUse = true;
    1688:	e9 81       	ldd	r30, Y+1	; 0x01
    168a:	fa 81       	ldd	r31, Y+2	; 0x02
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	81 8f       	std	Z+25, r24	; 0x19

	startWait = 0;
    1690:	e9 81       	ldd	r30, Y+1	; 0x01
    1692:	fa 81       	ldd	r31, Y+2	; 0x02
    1694:	12 8e       	std	Z+26, r1	; 0x1a
    1696:	13 8e       	std	Z+27, r1	; 0x1b
    1698:	14 8e       	std	Z+28, r1	; 0x1c
    169a:	15 8e       	std	Z+29, r1	; 0x1d
//	uint32_t TIMEOUT = 5000;

	sLow = 0;
    169c:	e9 81       	ldd	r30, Y+1	; 0x01
    169e:	fa 81       	ldd	r31, Y+2	; 0x02
    16a0:	80 e0       	ldi	r24, 0x00	; 0
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	a0 e0       	ldi	r26, 0x00	; 0
    16a6:	b0 e0       	ldi	r27, 0x00	; 0
    16a8:	86 8f       	std	Z+30, r24	; 0x1e
    16aa:	97 8f       	std	Z+31, r25	; 0x1f
    16ac:	a0 a3       	std	Z+32, r26	; 0x20
    16ae:	b1 a3       	std	Z+33, r27	; 0x21
	sHigh = 0;
    16b0:	e9 81       	ldd	r30, Y+1	; 0x01
    16b2:	fa 81       	ldd	r31, Y+2	; 0x02
    16b4:	80 e0       	ldi	r24, 0x00	; 0
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	a0 e0       	ldi	r26, 0x00	; 0
    16ba:	b0 e0       	ldi	r27, 0x00	; 0
    16bc:	82 a3       	std	Z+34, r24	; 0x22
    16be:	93 a3       	std	Z+35, r25	; 0x23
    16c0:	a4 a3       	std	Z+36, r26	; 0x24
    16c2:	b5 a3       	std	Z+37, r27	; 0x25
	dHigh = 0;
    16c4:	e9 81       	ldd	r30, Y+1	; 0x01
    16c6:	fa 81       	ldd	r31, Y+2	; 0x02
    16c8:	80 e0       	ldi	r24, 0x00	; 0
    16ca:	90 e0       	ldi	r25, 0x00	; 0
    16cc:	a0 e0       	ldi	r26, 0x00	; 0
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	86 a3       	std	Z+38, r24	; 0x26
    16d2:	97 a3       	std	Z+39, r25	; 0x27
    16d4:	a0 a7       	std	Z+40, r26	; 0x28
    16d6:	b1 a7       	std	Z+41, r27	; 0x29

//	digitArray = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//	prevDigits = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	decimalByte = B10000000;
    16d8:	89 81       	ldd	r24, Y+1	; 0x01
    16da:	9a 81       	ldd	r25, Y+2	; 0x02
    16dc:	fc 01       	movw	r30, r24
    16de:	e7 5a       	subi	r30, 0xA7	; 167
    16e0:	ff 4f       	sbci	r31, 0xFF	; 255
    16e2:	80 e8       	ldi	r24, 0x80	; 128
    16e4:	80 83       	st	Z, r24
	showDecimal = _showDecimal;
    16e6:	2c 85       	ldd	r18, Y+12	; 0x0c
    16e8:	89 81       	ldd	r24, Y+1	; 0x01
    16ea:	9a 81       	ldd	r25, Y+2	; 0x02
    16ec:	fc 01       	movw	r30, r24
    16ee:	e6 5a       	subi	r30, 0xA6	; 166
    16f0:	ff 4f       	sbci	r31, 0xFF	; 255
    16f2:	20 83       	st	Z, r18

//	cmSmoother = { 0, 0, 0, 0, 0 };

	prevMassVal = 0;
    16f4:	89 81       	ldd	r24, Y+1	; 0x01
    16f6:	9a 81       	ldd	r25, Y+2	; 0x02
    16f8:	fc 01       	movw	r30, r24
    16fa:	eb 57       	subi	r30, 0x7B	; 123
    16fc:	ff 4f       	sbci	r31, 0xFF	; 255
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	a0 e0       	ldi	r26, 0x00	; 0
    1704:	b0 e0       	ldi	r27, 0x00	; 0
    1706:	80 83       	st	Z, r24
    1708:	91 83       	std	Z+1, r25	; 0x01
    170a:	a2 83       	std	Z+2, r26	; 0x02
    170c:	b3 83       	std	Z+3, r27	; 0x03
	prevLenVal = 0;
    170e:	89 81       	ldd	r24, Y+1	; 0x01
    1710:	9a 81       	ldd	r25, Y+2	; 0x02
    1712:	fc 01       	movw	r30, r24
    1714:	e7 57       	subi	r30, 0x77	; 119
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	80 e0       	ldi	r24, 0x00	; 0
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	a0 e0       	ldi	r26, 0x00	; 0
    171e:	b0 e0       	ldi	r27, 0x00	; 0
    1720:	80 83       	st	Z, r24
    1722:	91 83       	std	Z+1, r25	; 0x01
    1724:	a2 83       	std	Z+2, r26	; 0x02
    1726:	b3 83       	std	Z+3, r27	; 0x03

	startDisplayMillis = 0;
    1728:	89 81       	ldd	r24, Y+1	; 0x01
    172a:	9a 81       	ldd	r25, Y+2	; 0x02
    172c:	fc 01       	movw	r30, r24
    172e:	e3 57       	subi	r30, 0x73	; 115
    1730:	ff 4f       	sbci	r31, 0xFF	; 255
    1732:	11 82       	std	Z+1, r1	; 0x01
    1734:	10 82       	st	Z, r1
	prevKgVal = HIGH;
    1736:	89 81       	ldd	r24, Y+1	; 0x01
    1738:	9a 81       	ldd	r25, Y+2	; 0x02
    173a:	fc 01       	movw	r30, r24
    173c:	e1 57       	subi	r30, 0x71	; 113
    173e:	ff 4f       	sbci	r31, 0xFF	; 255
    1740:	81 e0       	ldi	r24, 0x01	; 1
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	91 83       	std	Z+1, r25	; 0x01
    1746:	80 83       	st	Z, r24
	prevLbVal = HIGH;
    1748:	89 81       	ldd	r24, Y+1	; 0x01
    174a:	9a 81       	ldd	r25, Y+2	; 0x02
    174c:	fc 01       	movw	r30, r24
    174e:	ef 56       	subi	r30, 0x6F	; 111
    1750:	ff 4f       	sbci	r31, 0xFF	; 255
    1752:	81 e0       	ldi	r24, 0x01	; 1
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	91 83       	std	Z+1, r25	; 0x01
    1758:	80 83       	st	Z, r24

	tempDigit = 0;
    175a:	89 81       	ldd	r24, Y+1	; 0x01
    175c:	9a 81       	ldd	r25, Y+2	; 0x02
    175e:	fc 01       	movw	r30, r24
    1760:	ed 56       	subi	r30, 0x6D	; 109
    1762:	ff 4f       	sbci	r31, 0xFF	; 255
    1764:	11 82       	std	Z+1, r1	; 0x01
    1766:	10 82       	st	Z, r1

	lenVal = 0;
    1768:	89 81       	ldd	r24, Y+1	; 0x01
    176a:	9a 81       	ldd	r25, Y+2	; 0x02
    176c:	fc 01       	movw	r30, r24
    176e:	eb 56       	subi	r30, 0x6B	; 107
    1770:	ff 4f       	sbci	r31, 0xFF	; 255
    1772:	11 82       	std	Z+1, r1	; 0x01
    1774:	10 82       	st	Z, r1

	if (!isDino) {
    1776:	e9 81       	ldd	r30, Y+1	; 0x01
    1778:	fa 81       	ldd	r31, Y+2	; 0x02
    177a:	86 81       	ldd	r24, Z+6	; 0x06
    177c:	88 23       	and	r24, r24
    177e:	f9 f4       	brne	.+62     	; 0x17be <_ZN14BigDigitDriverC2Eiiiibb+0x1ee>
		sLow = 63;
    1780:	e9 81       	ldd	r30, Y+1	; 0x01
    1782:	fa 81       	ldd	r31, Y+2	; 0x02
    1784:	80 e0       	ldi	r24, 0x00	; 0
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	ac e7       	ldi	r26, 0x7C	; 124
    178a:	b2 e4       	ldi	r27, 0x42	; 66
    178c:	86 8f       	std	Z+30, r24	; 0x1e
    178e:	97 8f       	std	Z+31, r25	; 0x1f
    1790:	a0 a3       	std	Z+32, r26	; 0x20
    1792:	b1 a3       	std	Z+33, r27	; 0x21
		sHigh = 821;
    1794:	e9 81       	ldd	r30, Y+1	; 0x01
    1796:	fa 81       	ldd	r31, Y+2	; 0x02
    1798:	80 e0       	ldi	r24, 0x00	; 0
    179a:	90 e4       	ldi	r25, 0x40	; 64
    179c:	ad e4       	ldi	r26, 0x4D	; 77
    179e:	b4 e4       	ldi	r27, 0x44	; 68
    17a0:	82 a3       	std	Z+34, r24	; 0x22
    17a2:	93 a3       	std	Z+35, r25	; 0x23
    17a4:	a4 a3       	std	Z+36, r26	; 0x24
    17a6:	b5 a3       	std	Z+37, r27	; 0x25
		dHigh = 99;
    17a8:	e9 81       	ldd	r30, Y+1	; 0x01
    17aa:	fa 81       	ldd	r31, Y+2	; 0x02
    17ac:	80 e0       	ldi	r24, 0x00	; 0
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	a6 ec       	ldi	r26, 0xC6	; 198
    17b2:	b2 e4       	ldi	r27, 0x42	; 66
    17b4:	86 a3       	std	Z+38, r24	; 0x26
    17b6:	97 a3       	std	Z+39, r25	; 0x27
    17b8:	a0 a7       	std	Z+40, r26	; 0x28
    17ba:	b1 a7       	std	Z+41, r27	; 0x29
    17bc:	1e c0       	rjmp	.+60     	; 0x17fa <_ZN14BigDigitDriverC2Eiiiibb+0x22a>
	} else {
		sLow = 77;
    17be:	e9 81       	ldd	r30, Y+1	; 0x01
    17c0:	fa 81       	ldd	r31, Y+2	; 0x02
    17c2:	80 e0       	ldi	r24, 0x00	; 0
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	aa e9       	ldi	r26, 0x9A	; 154
    17c8:	b2 e4       	ldi	r27, 0x42	; 66
    17ca:	86 8f       	std	Z+30, r24	; 0x1e
    17cc:	97 8f       	std	Z+31, r25	; 0x1f
    17ce:	a0 a3       	std	Z+32, r26	; 0x20
    17d0:	b1 a3       	std	Z+33, r27	; 0x21
		sHigh = 959;
    17d2:	e9 81       	ldd	r30, Y+1	; 0x01
    17d4:	fa 81       	ldd	r31, Y+2	; 0x02
    17d6:	80 e0       	ldi	r24, 0x00	; 0
    17d8:	90 ec       	ldi	r25, 0xC0	; 192
    17da:	af e6       	ldi	r26, 0x6F	; 111
    17dc:	b4 e4       	ldi	r27, 0x44	; 68
    17de:	82 a3       	std	Z+34, r24	; 0x22
    17e0:	93 a3       	std	Z+35, r25	; 0x23
    17e2:	a4 a3       	std	Z+36, r26	; 0x24
    17e4:	b5 a3       	std	Z+37, r27	; 0x25
		dHigh = 173;
    17e6:	e9 81       	ldd	r30, Y+1	; 0x01
    17e8:	fa 81       	ldd	r31, Y+2	; 0x02
    17ea:	80 e0       	ldi	r24, 0x00	; 0
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	ad e2       	ldi	r26, 0x2D	; 45
    17f0:	b3 e4       	ldi	r27, 0x43	; 67
    17f2:	86 a3       	std	Z+38, r24	; 0x26
    17f4:	97 a3       	std	Z+39, r25	; 0x27
    17f6:	a0 a7       	std	Z+40, r26	; 0x28
    17f8:	b1 a7       	std	Z+41, r27	; 0x29
	}

	Serial.begin(9600);
    17fa:	87 ec       	ldi	r24, 0xC7	; 199
    17fc:	93 e0       	ldi	r25, 0x03	; 3
    17fe:	40 e8       	ldi	r20, 0x80	; 128
    1800:	55 e2       	ldi	r21, 0x25	; 37
    1802:	60 e0       	ldi	r22, 0x00	; 0
    1804:	70 e0       	ldi	r23, 0x00	; 0
    1806:	0e 94 0b 19 	call	0x3216	; 0x3216 <_ZN14HardwareSerial5beginEl>
	//set pins to output so you can control the shift register
	pinMode(latchPin, OUTPUT);
    180a:	e9 81       	ldd	r30, Y+1	; 0x01
    180c:	fa 81       	ldd	r31, Y+2	; 0x02
    180e:	80 81       	ld	r24, Z
    1810:	91 81       	ldd	r25, Z+1	; 0x01
    1812:	61 e0       	ldi	r22, 0x01	; 1
    1814:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>
	pinMode(clockPin, OUTPUT);
    1818:	e9 81       	ldd	r30, Y+1	; 0x01
    181a:	fa 81       	ldd	r31, Y+2	; 0x02
    181c:	82 81       	ldd	r24, Z+2	; 0x02
    181e:	93 81       	ldd	r25, Z+3	; 0x03
    1820:	61 e0       	ldi	r22, 0x01	; 1
    1822:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>
	pinMode(dataPin, OUTPUT);
    1826:	e9 81       	ldd	r30, Y+1	; 0x01
    1828:	fa 81       	ldd	r31, Y+2	; 0x02
    182a:	84 81       	ldd	r24, Z+4	; 0x04
    182c:	95 81       	ldd	r25, Z+5	; 0x05
    182e:	61 e0       	ldi	r22, 0x01	; 1
    1830:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>

	pinMode(lbPin, INPUT); // set pin to input
    1834:	e9 81       	ldd	r30, Y+1	; 0x01
    1836:	fa 81       	ldd	r31, Y+2	; 0x02
    1838:	87 85       	ldd	r24, Z+15	; 0x0f
    183a:	90 89       	ldd	r25, Z+16	; 0x10
    183c:	60 e0       	ldi	r22, 0x00	; 0
    183e:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>
	pinMode(kgPin, INPUT); // set pin to input
    1842:	e9 81       	ldd	r30, Y+1	; 0x01
    1844:	fa 81       	ldd	r31, Y+2	; 0x02
    1846:	81 89       	ldd	r24, Z+17	; 0x11
    1848:	92 89       	ldd	r25, Z+18	; 0x12
    184a:	60 e0       	ldi	r22, 0x00	; 0
    184c:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>

	digitalWrite(lbPin, HIGH); // turn on pullup resistors
    1850:	e9 81       	ldd	r30, Y+1	; 0x01
    1852:	fa 81       	ldd	r31, Y+2	; 0x02
    1854:	87 85       	ldd	r24, Z+15	; 0x0f
    1856:	90 89       	ldd	r25, Z+16	; 0x10
    1858:	61 e0       	ldi	r22, 0x01	; 1
    185a:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
	digitalWrite(kgPin, HIGH); // turn on pullup resistors
    185e:	e9 81       	ldd	r30, Y+1	; 0x01
    1860:	fa 81       	ldd	r31, Y+2	; 0x02
    1862:	81 89       	ldd	r24, Z+17	; 0x11
    1864:	92 89       	ldd	r25, Z+18	; 0x12
    1866:	61 e0       	ldi	r22, 0x01	; 1
    1868:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>

	dataArray[1] = B00000101;
    186c:	e9 81       	ldd	r30, Y+1	; 0x01
    186e:	fa 81       	ldd	r31, Y+2	; 0x02
    1870:	85 e0       	ldi	r24, 0x05	; 5
    1872:	83 a7       	std	Z+43, r24	; 0x2b
	dataArray[2] = B01011011;
    1874:	e9 81       	ldd	r30, Y+1	; 0x01
    1876:	fa 81       	ldd	r31, Y+2	; 0x02
    1878:	8b e5       	ldi	r24, 0x5B	; 91
    187a:	84 a7       	std	Z+44, r24	; 0x2c
	dataArray[3] = B01001111;
    187c:	e9 81       	ldd	r30, Y+1	; 0x01
    187e:	fa 81       	ldd	r31, Y+2	; 0x02
    1880:	8f e4       	ldi	r24, 0x4F	; 79
    1882:	85 a7       	std	Z+45, r24	; 0x2d
	dataArray[4] = B01100101;
    1884:	e9 81       	ldd	r30, Y+1	; 0x01
    1886:	fa 81       	ldd	r31, Y+2	; 0x02
    1888:	85 e6       	ldi	r24, 0x65	; 101
    188a:	86 a7       	std	Z+46, r24	; 0x2e
	dataArray[5] = B01101110;
    188c:	e9 81       	ldd	r30, Y+1	; 0x01
    188e:	fa 81       	ldd	r31, Y+2	; 0x02
    1890:	8e e6       	ldi	r24, 0x6E	; 110
    1892:	87 a7       	std	Z+47, r24	; 0x2f
	dataArray[6] = B01111110;
    1894:	e9 81       	ldd	r30, Y+1	; 0x01
    1896:	fa 81       	ldd	r31, Y+2	; 0x02
    1898:	8e e7       	ldi	r24, 0x7E	; 126
    189a:	80 ab       	std	Z+48, r24	; 0x30
	dataArray[7] = B00000111;
    189c:	e9 81       	ldd	r30, Y+1	; 0x01
    189e:	fa 81       	ldd	r31, Y+2	; 0x02
    18a0:	87 e0       	ldi	r24, 0x07	; 7
    18a2:	81 ab       	std	Z+49, r24	; 0x31
	dataArray[8] = B01111111;
    18a4:	e9 81       	ldd	r30, Y+1	; 0x01
    18a6:	fa 81       	ldd	r31, Y+2	; 0x02
    18a8:	8f e7       	ldi	r24, 0x7F	; 127
    18aa:	82 ab       	std	Z+50, r24	; 0x32
	dataArray[9] = B01101111;
    18ac:	e9 81       	ldd	r30, Y+1	; 0x01
    18ae:	fa 81       	ldd	r31, Y+2	; 0x02
    18b0:	8f e6       	ldi	r24, 0x6F	; 111
    18b2:	83 ab       	std	Z+51, r24	; 0x33
	dataArray[0] = B00111111;
    18b4:	e9 81       	ldd	r30, Y+1	; 0x01
    18b6:	fa 81       	ldd	r31, Y+2	; 0x02
    18b8:	8f e3       	ldi	r24, 0x3F	; 63
    18ba:	82 a7       	std	Z+42, r24	; 0x2a
	dataArray[10] = B00000000;
    18bc:	e9 81       	ldd	r30, Y+1	; 0x01
    18be:	fa 81       	ldd	r31, Y+2	; 0x02
    18c0:	14 aa       	std	Z+52, r1	; 0x34

	initHistory();
    18c2:	89 81       	ldd	r24, Y+1	; 0x01
    18c4:	9a 81       	ldd	r25, Y+2	; 0x02
    18c6:	0e 94 46 02 	call	0x48c	; 0x48c <_ZN14BigDigitDriver11initHistoryEv>

	useImperial = false;
    18ca:	89 81       	ldd	r24, Y+1	; 0x01
    18cc:	9a 81       	ldd	r25, Y+2	; 0x02
    18ce:	fc 01       	movw	r30, r24
    18d0:	ed 55       	subi	r30, 0x5D	; 93
    18d2:	ff 4f       	sbci	r31, 0xFF	; 255
    18d4:	10 82       	st	Z, r1

	startup();
    18d6:	89 81       	ldd	r24, Y+1	; 0x01
    18d8:	9a 81       	ldd	r25, Y+2	; 0x02
    18da:	0e 94 99 08 	call	0x1132	; 0x1132 <_ZN14BigDigitDriver7startupEv>
}
    18de:	2c 96       	adiw	r28, 0x0c	; 12
    18e0:	0f b6       	in	r0, 0x3f	; 63
    18e2:	f8 94       	cli
    18e4:	de bf       	out	0x3e, r29	; 62
    18e6:	0f be       	out	0x3f, r0	; 63
    18e8:	cd bf       	out	0x3d, r28	; 61
    18ea:	cf 91       	pop	r28
    18ec:	df 91       	pop	r29
    18ee:	1f 91       	pop	r17
    18f0:	0f 91       	pop	r16
    18f2:	ef 90       	pop	r14
    18f4:	cf 90       	pop	r12
    18f6:	08 95       	ret

000018f8 <_ZdaPv>:
void * operator new[](size_t size)
{
    return malloc(size);
}

void operator delete[](void * ptr)
    18f8:	df 93       	push	r29
    18fa:	cf 93       	push	r28
    18fc:	00 d0       	rcall	.+0      	; 0x18fe <_ZdaPv+0x6>
    18fe:	cd b7       	in	r28, 0x3d	; 61
    1900:	de b7       	in	r29, 0x3e	; 62
    1902:	9a 83       	std	Y+2, r25	; 0x02
    1904:	89 83       	std	Y+1, r24	; 0x01
{
	if (ptr)
    1906:	89 81       	ldd	r24, Y+1	; 0x01
    1908:	9a 81       	ldd	r25, Y+2	; 0x02
    190a:	00 97       	sbiw	r24, 0x00	; 0
    190c:	21 f0       	breq	.+8      	; 0x1916 <_ZdaPv+0x1e>
		free(ptr);
    190e:	89 81       	ldd	r24, Y+1	; 0x01
    1910:	9a 81       	ldd	r25, Y+2	; 0x02
    1912:	0e 94 2b 29 	call	0x5256	; 0x5256 <free>
}
    1916:	0f 90       	pop	r0
    1918:	0f 90       	pop	r0
    191a:	cf 91       	pop	r28
    191c:	df 91       	pop	r29
    191e:	08 95       	ret

00001920 <_ZdlPv>:
void * operator new(size_t size)
{
  return malloc(size);
}

void operator delete(void * ptr)
    1920:	df 93       	push	r29
    1922:	cf 93       	push	r28
    1924:	00 d0       	rcall	.+0      	; 0x1926 <_ZdlPv+0x6>
    1926:	cd b7       	in	r28, 0x3d	; 61
    1928:	de b7       	in	r29, 0x3e	; 62
    192a:	9a 83       	std	Y+2, r25	; 0x02
    192c:	89 83       	std	Y+1, r24	; 0x01
{
  free(ptr);
    192e:	89 81       	ldd	r24, Y+1	; 0x01
    1930:	9a 81       	ldd	r25, Y+2	; 0x02
    1932:	0e 94 2b 29 	call	0x5256	; 0x5256 <free>
}
    1936:	0f 90       	pop	r0
    1938:	0f 90       	pop	r0
    193a:	cf 91       	pop	r28
    193c:	df 91       	pop	r29
    193e:	08 95       	ret

00001940 <_Znaj>:

void * operator new[](size_t size)
    1940:	df 93       	push	r29
    1942:	cf 93       	push	r28
    1944:	00 d0       	rcall	.+0      	; 0x1946 <_Znaj+0x6>
    1946:	cd b7       	in	r28, 0x3d	; 61
    1948:	de b7       	in	r29, 0x3e	; 62
    194a:	9a 83       	std	Y+2, r25	; 0x02
    194c:	89 83       	std	Y+1, r24	; 0x01
{
    return malloc(size);
    194e:	89 81       	ldd	r24, Y+1	; 0x01
    1950:	9a 81       	ldd	r25, Y+2	; 0x02
    1952:	0e 94 7e 28 	call	0x50fc	; 0x50fc <malloc>
}
    1956:	0f 90       	pop	r0
    1958:	0f 90       	pop	r0
    195a:	cf 91       	pop	r28
    195c:	df 91       	pop	r29
    195e:	08 95       	ret

00001960 <_Znwj>:
  for (;;);
}

__extension__ typedef int __guard __attribute__((mode (__DI__)));

void * operator new(size_t size)
    1960:	df 93       	push	r29
    1962:	cf 93       	push	r28
    1964:	00 d0       	rcall	.+0      	; 0x1966 <_Znwj+0x6>
    1966:	cd b7       	in	r28, 0x3d	; 61
    1968:	de b7       	in	r29, 0x3e	; 62
    196a:	9a 83       	std	Y+2, r25	; 0x02
    196c:	89 83       	std	Y+1, r24	; 0x01
{
  return malloc(size);
    196e:	89 81       	ldd	r24, Y+1	; 0x01
    1970:	9a 81       	ldd	r25, Y+2	; 0x02
    1972:	0e 94 7e 28 	call	0x50fc	; 0x50fc <malloc>
}
    1976:	0f 90       	pop	r0
    1978:	0f 90       	pop	r0
    197a:	cf 91       	pop	r28
    197c:	df 91       	pop	r29
    197e:	08 95       	ret

00001980 <setup>:
//  Version : 2.0
//  Notes   : Shifts out to Daisy Chained TPIC6C595s on
//          : The AMNH BDD 1.5 Ciruit boards
//****************************************************************

void setup() {
    1980:	df 93       	push	r29
    1982:	cf 93       	push	r28
    1984:	cd b7       	in	r28, 0x3d	; 61
    1986:	de b7       	in	r29, 0x3e	; 62

}
    1988:	cf 91       	pop	r28
    198a:	df 91       	pop	r29
    198c:	08 95       	ret

0000198e <_Z41__static_initialization_and_destruction_0ii>:
	// setLength(123);
	// setMass(45678);
	// updateDisplays();


}
    198e:	cf 92       	push	r12
    1990:	ef 92       	push	r14
    1992:	0f 93       	push	r16
    1994:	1f 93       	push	r17
    1996:	df 93       	push	r29
    1998:	cf 93       	push	r28
    199a:	00 d0       	rcall	.+0      	; 0x199c <_Z41__static_initialization_and_destruction_0ii+0xe>
    199c:	00 d0       	rcall	.+0      	; 0x199e <_Z41__static_initialization_and_destruction_0ii+0x10>
    199e:	cd b7       	in	r28, 0x3d	; 61
    19a0:	de b7       	in	r29, 0x3e	; 62
    19a2:	9a 83       	std	Y+2, r25	; 0x02
    19a4:	89 83       	std	Y+1, r24	; 0x01
    19a6:	7c 83       	std	Y+4, r23	; 0x04
    19a8:	6b 83       	std	Y+3, r22	; 0x03
    19aa:	89 81       	ldd	r24, Y+1	; 0x01
    19ac:	9a 81       	ldd	r25, Y+2	; 0x02
    19ae:	81 30       	cpi	r24, 0x01	; 1
    19b0:	91 05       	cpc	r25, r1
    19b2:	a9 f4       	brne	.+42     	; 0x19de <_Z41__static_initialization_and_destruction_0ii+0x50>
    19b4:	8b 81       	ldd	r24, Y+3	; 0x03
    19b6:	9c 81       	ldd	r25, Y+4	; 0x04
    19b8:	2f ef       	ldi	r18, 0xFF	; 255
    19ba:	8f 3f       	cpi	r24, 0xFF	; 255
    19bc:	92 07       	cpc	r25, r18
    19be:	79 f4       	brne	.+30     	; 0x19de <_Z41__static_initialization_and_destruction_0ii+0x50>
#include "BigDigitDriver.h"
#include <stdlib.h>

BigDigitDriver bdd(4,5,6,A0,false,true);
    19c0:	86 e9       	ldi	r24, 0x96	; 150
    19c2:	92 e0       	ldi	r25, 0x02	; 2
    19c4:	64 e0       	ldi	r22, 0x04	; 4
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	45 e0       	ldi	r20, 0x05	; 5
    19ca:	50 e0       	ldi	r21, 0x00	; 0
    19cc:	26 e0       	ldi	r18, 0x06	; 6
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	0e e0       	ldi	r16, 0x0E	; 14
    19d2:	10 e0       	ldi	r17, 0x00	; 0
    19d4:	ee 24       	eor	r14, r14
    19d6:	cc 24       	eor	r12, r12
    19d8:	c3 94       	inc	r12
    19da:	0e 94 54 09 	call	0x12a8	; 0x12a8 <_ZN14BigDigitDriverC1Eiiiibb>
	// setLength(123);
	// setMass(45678);
	// updateDisplays();


}
    19de:	0f 90       	pop	r0
    19e0:	0f 90       	pop	r0
    19e2:	0f 90       	pop	r0
    19e4:	0f 90       	pop	r0
    19e6:	cf 91       	pop	r28
    19e8:	df 91       	pop	r29
    19ea:	1f 91       	pop	r17
    19ec:	0f 91       	pop	r16
    19ee:	ef 90       	pop	r14
    19f0:	cf 90       	pop	r12
    19f2:	08 95       	ret

000019f4 <_GLOBAL__I_bdd>:
    19f4:	df 93       	push	r29
    19f6:	cf 93       	push	r28
    19f8:	cd b7       	in	r28, 0x3d	; 61
    19fa:	de b7       	in	r29, 0x3e	; 62
    19fc:	81 e0       	ldi	r24, 0x01	; 1
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	6f ef       	ldi	r22, 0xFF	; 255
    1a02:	7f ef       	ldi	r23, 0xFF	; 255
    1a04:	0e 94 c7 0c 	call	0x198e	; 0x198e <_Z41__static_initialization_and_destruction_0ii>
    1a08:	cf 91       	pop	r28
    1a0a:	df 91       	pop	r29
    1a0c:	08 95       	ret

00001a0e <loop>:

void setup() {

}

void loop() {
    1a0e:	ef 92       	push	r14
    1a10:	ff 92       	push	r15
    1a12:	0f 93       	push	r16
    1a14:	1f 93       	push	r17
    1a16:	df 93       	push	r29
    1a18:	cf 93       	push	r28
    1a1a:	00 d0       	rcall	.+0      	; 0x1a1c <loop+0xe>
    1a1c:	00 d0       	rcall	.+0      	; 0x1a1e <loop+0x10>
    1a1e:	cd b7       	in	r28, 0x3d	; 61
    1a20:	de b7       	in	r29, 0x3e	; 62

	bdd.updateSlider();
    1a22:	86 e9       	ldi	r24, 0x96	; 150
    1a24:	92 e0       	ldi	r25, 0x02	; 2
    1a26:	0e 94 29 08 	call	0x1052	; 0x1052 <_ZN14BigDigitDriver12updateSliderEv>
	bdd.updateButtons();
    1a2a:	86 e9       	ldi	r24, 0x96	; 150
    1a2c:	92 e0       	ldi	r25, 0x02	; 2
    1a2e:	0e 94 34 09 	call	0x1268	; 0x1268 <_ZN14BigDigitDriver13updateButtonsEv>

	switch (bdd.state) {
    1a32:	e0 90 ad 02 	lds	r14, 0x02AD
    1a36:	f0 90 ae 02 	lds	r15, 0x02AE
    1a3a:	fb 82       	std	Y+3, r15	; 0x03
    1a3c:	ea 82       	std	Y+2, r14	; 0x02
    1a3e:	0a 81       	ldd	r16, Y+2	; 0x02
    1a40:	1b 81       	ldd	r17, Y+3	; 0x03
    1a42:	01 30       	cpi	r16, 0x01	; 1
    1a44:	11 05       	cpc	r17, r1
    1a46:	09 f4       	brne	.+2      	; 0x1a4a <loop+0x3c>
    1a48:	71 c0       	rjmp	.+226    	; 0x1b2c <loop+0x11e>
    1a4a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a4c:	9b 81       	ldd	r25, Y+3	; 0x03
    1a4e:	82 30       	cpi	r24, 0x02	; 2
    1a50:	91 05       	cpc	r25, r1
    1a52:	5c f4       	brge	.+22     	; 0x1a6a <loop+0x5c>
    1a54:	0a 81       	ldd	r16, Y+2	; 0x02
    1a56:	1b 81       	ldd	r17, Y+3	; 0x03
    1a58:	2f ef       	ldi	r18, 0xFF	; 255
    1a5a:	0f 3f       	cpi	r16, 0xFF	; 255
    1a5c:	12 07       	cpc	r17, r18
    1a5e:	91 f0       	breq	.+36     	; 0x1a84 <loop+0x76>
    1a60:	8a 81       	ldd	r24, Y+2	; 0x02
    1a62:	9b 81       	ldd	r25, Y+3	; 0x03
    1a64:	00 97       	sbiw	r24, 0x00	; 0
    1a66:	b9 f0       	breq	.+46     	; 0x1a96 <loop+0x88>
    1a68:	5d c1       	rjmp	.+698    	; 0x1d24 <loop+0x316>
    1a6a:	0a 81       	ldd	r16, Y+2	; 0x02
    1a6c:	1b 81       	ldd	r17, Y+3	; 0x03
    1a6e:	02 30       	cpi	r16, 0x02	; 2
    1a70:	11 05       	cpc	r17, r1
    1a72:	09 f4       	brne	.+2      	; 0x1a76 <loop+0x68>
    1a74:	ab c0       	rjmp	.+342    	; 0x1bcc <loop+0x1be>
    1a76:	8a 81       	ldd	r24, Y+2	; 0x02
    1a78:	9b 81       	ldd	r25, Y+3	; 0x03
    1a7a:	83 30       	cpi	r24, 0x03	; 3
    1a7c:	91 05       	cpc	r25, r1
    1a7e:	09 f4       	brne	.+2      	; 0x1a82 <loop+0x74>
    1a80:	ff c0       	rjmp	.+510    	; 0x1c80 <loop+0x272>
    1a82:	50 c1       	rjmp	.+672    	; 0x1d24 <loop+0x316>
	case -1:
		// startup animation
		bdd.startup();
    1a84:	86 e9       	ldi	r24, 0x96	; 150
    1a86:	92 e0       	ldi	r25, 0x02	; 2
    1a88:	0e 94 99 08 	call	0x1132	; 0x1132 <_ZN14BigDigitDriver7startupEv>
		bdd.state = 0;
    1a8c:	10 92 ae 02 	sts	0x02AE, r1
    1a90:	10 92 ad 02 	sts	0x02AD, r1
    1a94:	47 c1       	rjmp	.+654    	; 0x1d24 <loop+0x316>
		break;
	case 0:
		// sleep state
		if (bdd.kgVal == LOW) {
    1a96:	80 91 ab 02 	lds	r24, 0x02AB
    1a9a:	90 91 ac 02 	lds	r25, 0x02AC
    1a9e:	00 97       	sbiw	r24, 0x00	; 0
    1aa0:	31 f4       	brne	.+12     	; 0x1aae <loop+0xa0>
			bdd.state = 2;
    1aa2:	82 e0       	ldi	r24, 0x02	; 2
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	90 93 ae 02 	sts	0x02AE, r25
    1aaa:	80 93 ad 02 	sts	0x02AD, r24
		}
		if (bdd.lbVal == LOW) {
    1aae:	80 91 a9 02 	lds	r24, 0x02A9
    1ab2:	90 91 aa 02 	lds	r25, 0x02AA
    1ab6:	00 97       	sbiw	r24, 0x00	; 0
    1ab8:	31 f4       	brne	.+12     	; 0x1ac6 <loop+0xb8>
			bdd.state = 3;
    1aba:	83 e0       	ldi	r24, 0x03	; 3
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	90 93 ae 02 	sts	0x02AE, r25
    1ac2:	80 93 ad 02 	sts	0x02AD, r24
		}

		bdd.updateDisplays();
    1ac6:	86 e9       	ldi	r24, 0x96	; 150
    1ac8:	92 e0       	ldi	r25, 0x02	; 2
    1aca:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>

		if (bdd.checkSlider()) {
    1ace:	86 e9       	ldi	r24, 0x96	; 150
    1ad0:	92 e0       	ldi	r25, 0x02	; 2
    1ad2:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN14BigDigitDriver11checkSliderEv>
    1ad6:	8c 83       	std	Y+4, r24	; 0x04
    1ad8:	9c 81       	ldd	r25, Y+4	; 0x04
    1ada:	99 23       	and	r25, r25
    1adc:	11 f0       	breq	.+4      	; 0x1ae2 <loop+0xd4>
    1ade:	01 e0       	ldi	r16, 0x01	; 1
    1ae0:	0c 83       	std	Y+4, r16	; 0x04
    1ae2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ae4:	88 23       	and	r24, r24
    1ae6:	71 f0       	breq	.+28     	; 0x1b04 <loop+0xf6>
			Serial.println("TRUE");
    1ae8:	87 ec       	ldi	r24, 0xC7	; 199
    1aea:	93 e0       	ldi	r25, 0x03	; 3
    1aec:	26 e1       	ldi	r18, 0x16	; 22
    1aee:	31 e0       	ldi	r19, 0x01	; 1
    1af0:	b9 01       	movw	r22, r18
    1af2:	0e 94 19 1c 	call	0x3832	; 0x3832 <_ZN5Print7printlnEPKc>
			bdd.state = 1;
    1af6:	81 e0       	ldi	r24, 0x01	; 1
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	90 93 ae 02 	sts	0x02AE, r25
    1afe:	80 93 ad 02 	sts	0x02AD, r24
    1b02:	10 c1       	rjmp	.+544    	; 0x1d24 <loop+0x316>
		} else {
			Serial.println("FALSE");
    1b04:	87 ec       	ldi	r24, 0xC7	; 199
    1b06:	93 e0       	ldi	r25, 0x03	; 3
    1b08:	2b e1       	ldi	r18, 0x1B	; 27
    1b0a:	31 e0       	ldi	r19, 0x01	; 1
    1b0c:	b9 01       	movw	r22, r18
    1b0e:	0e 94 19 1c 	call	0x3832	; 0x3832 <_ZN5Print7printlnEPKc>
			bdd.setAll(10);
    1b12:	86 e9       	ldi	r24, 0x96	; 150
    1b14:	92 e0       	ldi	r25, 0x02	; 2
    1b16:	6a e0       	ldi	r22, 0x0A	; 10
    1b18:	70 e0       	ldi	r23, 0x00	; 0
    1b1a:	0e 94 45 08 	call	0x108a	; 0x108a <_ZN14BigDigitDriver6setAllEi>
			delay(50);
    1b1e:	62 e3       	ldi	r22, 0x32	; 50
    1b20:	70 e0       	ldi	r23, 0x00	; 0
    1b22:	80 e0       	ldi	r24, 0x00	; 0
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
    1b2a:	fc c0       	rjmp	.+504    	; 0x1d24 <loop+0x316>
		}

		break;
	case 1:
		// measuring...
		bdd.updateSlider();
    1b2c:	86 e9       	ldi	r24, 0x96	; 150
    1b2e:	92 e0       	ldi	r25, 0x02	; 2
    1b30:	0e 94 29 08 	call	0x1052	; 0x1052 <_ZN14BigDigitDriver12updateSliderEv>
		bdd.checkSlider();
    1b34:	86 e9       	ldi	r24, 0x96	; 150
    1b36:	92 e0       	ldi	r25, 0x02	; 2
    1b38:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN14BigDigitDriver11checkSliderEv>
		bdd.measure();
    1b3c:	86 e9       	ldi	r24, 0x96	; 150
    1b3e:	92 e0       	ldi	r25, 0x02	; 2
    1b40:	0e 94 cf 06 	call	0xd9e	; 0xd9e <_ZN14BigDigitDriver7measureEv>
		bdd.updateDisplays();
    1b44:	86 e9       	ldi	r24, 0x96	; 150
    1b46:	92 e0       	ldi	r25, 0x02	; 2
    1b48:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
		if ((millis() - bdd.startWait) > bdd.TIMEOUT) {
    1b4c:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <millis>
    1b50:	9b 01       	movw	r18, r22
    1b52:	ac 01       	movw	r20, r24
    1b54:	80 91 b0 02 	lds	r24, 0x02B0
    1b58:	90 91 b1 02 	lds	r25, 0x02B1
    1b5c:	a0 91 b2 02 	lds	r26, 0x02B2
    1b60:	b0 91 b3 02 	lds	r27, 0x02B3
    1b64:	79 01       	movw	r14, r18
    1b66:	8a 01       	movw	r16, r20
    1b68:	e8 1a       	sub	r14, r24
    1b6a:	f9 0a       	sbc	r15, r25
    1b6c:	0a 0b       	sbc	r16, r26
    1b6e:	1b 0b       	sbc	r17, r27
    1b70:	d8 01       	movw	r26, r16
    1b72:	c7 01       	movw	r24, r14
    1b74:	19 82       	std	Y+1, r1	; 0x01
    1b76:	89 38       	cpi	r24, 0x89	; 137
    1b78:	03 e1       	ldi	r16, 0x13	; 19
    1b7a:	90 07       	cpc	r25, r16
    1b7c:	00 e0       	ldi	r16, 0x00	; 0
    1b7e:	a0 07       	cpc	r26, r16
    1b80:	00 e0       	ldi	r16, 0x00	; 0
    1b82:	b0 07       	cpc	r27, r16
    1b84:	10 f0       	brcs	.+4      	; 0x1b8a <loop+0x17c>
    1b86:	11 e0       	ldi	r17, 0x01	; 1
    1b88:	19 83       	std	Y+1, r17	; 0x01
    1b8a:	29 81       	ldd	r18, Y+1	; 0x01
    1b8c:	22 23       	and	r18, r18
    1b8e:	21 f0       	breq	.+8      	; 0x1b98 <loop+0x18a>
			bdd.state = 0;
    1b90:	10 92 ae 02 	sts	0x02AE, r1
    1b94:	10 92 ad 02 	sts	0x02AD, r1
		}
		// display live measurement value

		if (bdd.kgVal == LOW) {
    1b98:	80 91 ab 02 	lds	r24, 0x02AB
    1b9c:	90 91 ac 02 	lds	r25, 0x02AC
    1ba0:	00 97       	sbiw	r24, 0x00	; 0
    1ba2:	31 f4       	brne	.+12     	; 0x1bb0 <loop+0x1a2>
			bdd.state = 2;
    1ba4:	82 e0       	ldi	r24, 0x02	; 2
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	90 93 ae 02 	sts	0x02AE, r25
    1bac:	80 93 ad 02 	sts	0x02AD, r24
		}
		if (bdd.lbVal == LOW) {
    1bb0:	80 91 a9 02 	lds	r24, 0x02A9
    1bb4:	90 91 aa 02 	lds	r25, 0x02AA
    1bb8:	00 97       	sbiw	r24, 0x00	; 0
    1bba:	09 f0       	breq	.+2      	; 0x1bbe <loop+0x1b0>
    1bbc:	b3 c0       	rjmp	.+358    	; 0x1d24 <loop+0x316>
			bdd.state = 3;
    1bbe:	83 e0       	ldi	r24, 0x03	; 3
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	90 93 ae 02 	sts	0x02AE, r25
    1bc6:	80 93 ad 02 	sts	0x02AD, r24
    1bca:	ac c0       	rjmp	.+344    	; 0x1d24 <loop+0x316>
		}

		break;
	case 2:
		bdd.updateSlider();
    1bcc:	86 e9       	ldi	r24, 0x96	; 150
    1bce:	92 e0       	ldi	r25, 0x02	; 2
    1bd0:	0e 94 29 08 	call	0x1052	; 0x1052 <_ZN14BigDigitDriver12updateSliderEv>
		bdd.checkSlider();
    1bd4:	86 e9       	ldi	r24, 0x96	; 150
    1bd6:	92 e0       	ldi	r25, 0x02	; 2
    1bd8:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN14BigDigitDriver11checkSliderEv>
		bdd.measure();
    1bdc:	86 e9       	ldi	r24, 0x96	; 150
    1bde:	92 e0       	ldi	r25, 0x02	; 2
    1be0:	0e 94 cf 06 	call	0xd9e	; 0xd9e <_ZN14BigDigitDriver7measureEv>
		bdd.updateButtons();
    1be4:	86 e9       	ldi	r24, 0x96	; 150
    1be6:	92 e0       	ldi	r25, 0x02	; 2
    1be8:	0e 94 34 09 	call	0x1268	; 0x1268 <_ZN14BigDigitDriver13updateButtonsEv>
		bdd.updateDisplays();
    1bec:	86 e9       	ldi	r24, 0x96	; 150
    1bee:	92 e0       	ldi	r25, 0x02	; 2
    1bf0:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>

		Serial.println("measuring");
    1bf4:	87 ec       	ldi	r24, 0xC7	; 199
    1bf6:	93 e0       	ldi	r25, 0x03	; 3
    1bf8:	21 e2       	ldi	r18, 0x21	; 33
    1bfa:	31 e0       	ldi	r19, 0x01	; 1
    1bfc:	b9 01       	movw	r22, r18
    1bfe:	0e 94 19 1c 	call	0x3832	; 0x3832 <_ZN5Print7printlnEPKc>
		//  setMass(calculateMass());
		bdd.setMass(bdd.calculateMass(false));
    1c02:	86 e9       	ldi	r24, 0x96	; 150
    1c04:	92 e0       	ldi	r25, 0x02	; 2
    1c06:	60 e0       	ldi	r22, 0x00	; 0
    1c08:	0e 94 bf 05 	call	0xb7e	; 0xb7e <_ZN14BigDigitDriver13calculateMassEh>
    1c0c:	9b 01       	movw	r18, r22
    1c0e:	ac 01       	movw	r20, r24
    1c10:	86 e9       	ldi	r24, 0x96	; 150
    1c12:	92 e0       	ldi	r25, 0x02	; 2
    1c14:	ba 01       	movw	r22, r20
    1c16:	a9 01       	movw	r20, r18
    1c18:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN14BigDigitDriver7setMassEl>
		Serial.print("THIS IS MASS------>>>>>>");
    1c1c:	87 ec       	ldi	r24, 0xC7	; 199
    1c1e:	93 e0       	ldi	r25, 0x03	; 3
    1c20:	2b e2       	ldi	r18, 0x2B	; 43
    1c22:	31 e0       	ldi	r19, 0x01	; 1
    1c24:	b9 01       	movw	r22, r18
    1c26:	0e 94 6d 1a 	call	0x34da	; 0x34da <_ZN5Print5printEPKc>
		Serial.println(bdd.calculateMass(false), DEC);
    1c2a:	86 e9       	ldi	r24, 0x96	; 150
    1c2c:	92 e0       	ldi	r25, 0x02	; 2
    1c2e:	60 e0       	ldi	r22, 0x00	; 0
    1c30:	0e 94 bf 05 	call	0xb7e	; 0xb7e <_ZN14BigDigitDriver13calculateMassEh>
    1c34:	9b 01       	movw	r18, r22
    1c36:	ac 01       	movw	r20, r24
    1c38:	87 ec       	ldi	r24, 0xC7	; 199
    1c3a:	93 e0       	ldi	r25, 0x03	; 3
    1c3c:	ba 01       	movw	r22, r20
    1c3e:	a9 01       	movw	r20, r18
    1c40:	2a e0       	ldi	r18, 0x0A	; 10
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	0e 94 2f 1c 	call	0x385e	; 0x385e <_ZN5Print7printlnEli>
		Serial.println("CALCULATING MASS");
    1c48:	87 ec       	ldi	r24, 0xC7	; 199
    1c4a:	93 e0       	ldi	r25, 0x03	; 3
    1c4c:	24 e4       	ldi	r18, 0x44	; 68
    1c4e:	31 e0       	ldi	r19, 0x01	; 1
    1c50:	b9 01       	movw	r22, r18
    1c52:	0e 94 19 1c 	call	0x3832	; 0x3832 <_ZN5Print7printlnEPKc>

		bdd.updateDisplays();
    1c56:	86 e9       	ldi	r24, 0x96	; 150
    1c58:	92 e0       	ldi	r25, 0x02	; 2
    1c5a:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
		 Serial.println("*************************************************************************************");
		 Serial.println("*********************              UPDATING DISPLAY              ********************");
		 Serial.println("*************************************************************************************");
		 Serial.println();
		 */
		delay(5000);
    1c5e:	68 e8       	ldi	r22, 0x88	; 136
    1c60:	73 e1       	ldi	r23, 0x13	; 19
    1c62:	80 e0       	ldi	r24, 0x00	; 0
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
		bdd.clearMass();
    1c6a:	86 e9       	ldi	r24, 0x96	; 150
    1c6c:	92 e0       	ldi	r25, 0x02	; 2
    1c6e:	0e 94 54 01 	call	0x2a8	; 0x2a8 <_ZN14BigDigitDriver9clearMassEv>
		bdd.state = 1;
    1c72:	81 e0       	ldi	r24, 0x01	; 1
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	90 93 ae 02 	sts	0x02AE, r25
    1c7a:	80 93 ad 02 	sts	0x02AD, r24
    1c7e:	52 c0       	rjmp	.+164    	; 0x1d24 <loop+0x316>
		break;
	case 3:
		bdd.updateSlider();
    1c80:	86 e9       	ldi	r24, 0x96	; 150
    1c82:	92 e0       	ldi	r25, 0x02	; 2
    1c84:	0e 94 29 08 	call	0x1052	; 0x1052 <_ZN14BigDigitDriver12updateSliderEv>
		bdd.checkSlider();
    1c88:	86 e9       	ldi	r24, 0x96	; 150
    1c8a:	92 e0       	ldi	r25, 0x02	; 2
    1c8c:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN14BigDigitDriver11checkSliderEv>
		bdd.updateButtons();
    1c90:	86 e9       	ldi	r24, 0x96	; 150
    1c92:	92 e0       	ldi	r25, 0x02	; 2
    1c94:	0e 94 34 09 	call	0x1268	; 0x1268 <_ZN14BigDigitDriver13updateButtonsEv>
		bdd.measure();
    1c98:	86 e9       	ldi	r24, 0x96	; 150
    1c9a:	92 e0       	ldi	r25, 0x02	; 2
    1c9c:	0e 94 cf 06 	call	0xd9e	; 0xd9e <_ZN14BigDigitDriver7measureEv>
		bdd.updateDisplays();
    1ca0:	86 e9       	ldi	r24, 0x96	; 150
    1ca2:	92 e0       	ldi	r25, 0x02	; 2
    1ca4:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>

		bdd.setMass(bdd.calculateMass(true));
    1ca8:	86 e9       	ldi	r24, 0x96	; 150
    1caa:	92 e0       	ldi	r25, 0x02	; 2
    1cac:	61 e0       	ldi	r22, 0x01	; 1
    1cae:	0e 94 bf 05 	call	0xb7e	; 0xb7e <_ZN14BigDigitDriver13calculateMassEh>
    1cb2:	9b 01       	movw	r18, r22
    1cb4:	ac 01       	movw	r20, r24
    1cb6:	86 e9       	ldi	r24, 0x96	; 150
    1cb8:	92 e0       	ldi	r25, 0x02	; 2
    1cba:	ba 01       	movw	r22, r20
    1cbc:	a9 01       	movw	r20, r18
    1cbe:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN14BigDigitDriver7setMassEl>
		Serial.print("THIS IS MASS------>>>>>>");
    1cc2:	87 ec       	ldi	r24, 0xC7	; 199
    1cc4:	93 e0       	ldi	r25, 0x03	; 3
    1cc6:	2b e2       	ldi	r18, 0x2B	; 43
    1cc8:	31 e0       	ldi	r19, 0x01	; 1
    1cca:	b9 01       	movw	r22, r18
    1ccc:	0e 94 6d 1a 	call	0x34da	; 0x34da <_ZN5Print5printEPKc>
		Serial.println(bdd.calculateMass(true), DEC);
    1cd0:	86 e9       	ldi	r24, 0x96	; 150
    1cd2:	92 e0       	ldi	r25, 0x02	; 2
    1cd4:	61 e0       	ldi	r22, 0x01	; 1
    1cd6:	0e 94 bf 05 	call	0xb7e	; 0xb7e <_ZN14BigDigitDriver13calculateMassEh>
    1cda:	9b 01       	movw	r18, r22
    1cdc:	ac 01       	movw	r20, r24
    1cde:	87 ec       	ldi	r24, 0xC7	; 199
    1ce0:	93 e0       	ldi	r25, 0x03	; 3
    1ce2:	ba 01       	movw	r22, r20
    1ce4:	a9 01       	movw	r20, r18
    1ce6:	2a e0       	ldi	r18, 0x0A	; 10
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	0e 94 2f 1c 	call	0x385e	; 0x385e <_ZN5Print7printlnEli>
		Serial.println("CALCULATING MASS");
    1cee:	87 ec       	ldi	r24, 0xC7	; 199
    1cf0:	93 e0       	ldi	r25, 0x03	; 3
    1cf2:	24 e4       	ldi	r18, 0x44	; 68
    1cf4:	31 e0       	ldi	r19, 0x01	; 1
    1cf6:	b9 01       	movw	r22, r18
    1cf8:	0e 94 19 1c 	call	0x3832	; 0x3832 <_ZN5Print7printlnEPKc>

		//updateDisplays();
		bdd.updateDisplays();
    1cfc:	86 e9       	ldi	r24, 0x96	; 150
    1cfe:	92 e0       	ldi	r25, 0x02	; 2
    1d00:	0e 94 df 02 	call	0x5be	; 0x5be <_ZN14BigDigitDriver14updateDisplaysEv>
		delay(5000);
    1d04:	68 e8       	ldi	r22, 0x88	; 136
    1d06:	73 e1       	ldi	r23, 0x13	; 19
    1d08:	80 e0       	ldi	r24, 0x00	; 0
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <delay>
		bdd.clearMass();
    1d10:	86 e9       	ldi	r24, 0x96	; 150
    1d12:	92 e0       	ldi	r25, 0x02	; 2
    1d14:	0e 94 54 01 	call	0x2a8	; 0x2a8 <_ZN14BigDigitDriver9clearMassEv>
		bdd.state = 1;
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	90 e0       	ldi	r25, 0x00	; 0
    1d1c:	90 93 ae 02 	sts	0x02AE, r25
    1d20:	80 93 ad 02 	sts	0x02AD, r24
	// setLength(123);
	// setMass(45678);
	// updateDisplays();


}
    1d24:	0f 90       	pop	r0
    1d26:	0f 90       	pop	r0
    1d28:	0f 90       	pop	r0
    1d2a:	0f 90       	pop	r0
    1d2c:	cf 91       	pop	r28
    1d2e:	df 91       	pop	r29
    1d30:	1f 91       	pop	r17
    1d32:	0f 91       	pop	r16
    1d34:	ff 90       	pop	r15
    1d36:	ef 90       	pop	r14
    1d38:	08 95       	ret

00001d3a <main>:
#include "BigDigitDriver.h"
#include <stdlib.h>

BigDigitDriver bdd(4,5,6,A0,false,true);

int main(void) {
    1d3a:	df 93       	push	r29
    1d3c:	cf 93       	push	r28
    1d3e:	cd b7       	in	r28, 0x3d	; 61
    1d40:	de b7       	in	r29, 0x3e	; 62
	init();
    1d42:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <init>

	setup();
    1d46:	0e 94 c0 0c 	call	0x1980	; 0x1980 <setup>

	for (;;)
		loop();
    1d4a:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <loop>
    1d4e:	fd cf       	rjmp	.-6      	; 0x1d4a <main+0x10>

00001d50 <__vector_16>:
    1d50:	1f 92       	push	r1
    1d52:	0f 92       	push	r0
    1d54:	0f b6       	in	r0, 0x3f	; 63
    1d56:	0f 92       	push	r0
    1d58:	11 24       	eor	r1, r1
    1d5a:	2f 93       	push	r18
    1d5c:	3f 93       	push	r19
    1d5e:	8f 93       	push	r24
    1d60:	9f 93       	push	r25
    1d62:	af 93       	push	r26
    1d64:	bf 93       	push	r27
    1d66:	80 91 3e 03 	lds	r24, 0x033E
    1d6a:	90 91 3f 03 	lds	r25, 0x033F
    1d6e:	a0 91 40 03 	lds	r26, 0x0340
    1d72:	b0 91 41 03 	lds	r27, 0x0341
    1d76:	30 91 42 03 	lds	r19, 0x0342
    1d7a:	01 96       	adiw	r24, 0x01	; 1
    1d7c:	a1 1d       	adc	r26, r1
    1d7e:	b1 1d       	adc	r27, r1
    1d80:	23 2f       	mov	r18, r19
    1d82:	2d 5f       	subi	r18, 0xFD	; 253
    1d84:	2d 37       	cpi	r18, 0x7D	; 125
    1d86:	20 f0       	brcs	.+8      	; 0x1d90 <__vector_16+0x40>
    1d88:	2d 57       	subi	r18, 0x7D	; 125
    1d8a:	01 96       	adiw	r24, 0x01	; 1
    1d8c:	a1 1d       	adc	r26, r1
    1d8e:	b1 1d       	adc	r27, r1
    1d90:	20 93 42 03 	sts	0x0342, r18
    1d94:	80 93 3e 03 	sts	0x033E, r24
    1d98:	90 93 3f 03 	sts	0x033F, r25
    1d9c:	a0 93 40 03 	sts	0x0340, r26
    1da0:	b0 93 41 03 	sts	0x0341, r27
    1da4:	80 91 3a 03 	lds	r24, 0x033A
    1da8:	90 91 3b 03 	lds	r25, 0x033B
    1dac:	a0 91 3c 03 	lds	r26, 0x033C
    1db0:	b0 91 3d 03 	lds	r27, 0x033D
    1db4:	01 96       	adiw	r24, 0x01	; 1
    1db6:	a1 1d       	adc	r26, r1
    1db8:	b1 1d       	adc	r27, r1
    1dba:	80 93 3a 03 	sts	0x033A, r24
    1dbe:	90 93 3b 03 	sts	0x033B, r25
    1dc2:	a0 93 3c 03 	sts	0x033C, r26
    1dc6:	b0 93 3d 03 	sts	0x033D, r27
    1dca:	bf 91       	pop	r27
    1dcc:	af 91       	pop	r26
    1dce:	9f 91       	pop	r25
    1dd0:	8f 91       	pop	r24
    1dd2:	3f 91       	pop	r19
    1dd4:	2f 91       	pop	r18
    1dd6:	0f 90       	pop	r0
    1dd8:	0f be       	out	0x3f, r0	; 63
    1dda:	0f 90       	pop	r0
    1ddc:	1f 90       	pop	r1
    1dde:	18 95       	reti

00001de0 <millis>:
    1de0:	8f b7       	in	r24, 0x3f	; 63
    1de2:	f8 94       	cli
    1de4:	20 91 3e 03 	lds	r18, 0x033E
    1de8:	30 91 3f 03 	lds	r19, 0x033F
    1dec:	40 91 40 03 	lds	r20, 0x0340
    1df0:	50 91 41 03 	lds	r21, 0x0341
    1df4:	8f bf       	out	0x3f, r24	; 63
    1df6:	b9 01       	movw	r22, r18
    1df8:	ca 01       	movw	r24, r20
    1dfa:	08 95       	ret

00001dfc <micros>:
    1dfc:	9f b7       	in	r25, 0x3f	; 63
    1dfe:	f8 94       	cli
    1e00:	20 91 3a 03 	lds	r18, 0x033A
    1e04:	30 91 3b 03 	lds	r19, 0x033B
    1e08:	40 91 3c 03 	lds	r20, 0x033C
    1e0c:	50 91 3d 03 	lds	r21, 0x033D
    1e10:	86 b5       	in	r24, 0x26	; 38
    1e12:	a8 9b       	sbis	0x15, 0	; 21
    1e14:	06 c0       	rjmp	.+12     	; 0x1e22 <micros+0x26>
    1e16:	8f 3f       	cpi	r24, 0xFF	; 255
    1e18:	21 f0       	breq	.+8      	; 0x1e22 <micros+0x26>
    1e1a:	2f 5f       	subi	r18, 0xFF	; 255
    1e1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e1e:	4f 4f       	sbci	r20, 0xFF	; 255
    1e20:	5f 4f       	sbci	r21, 0xFF	; 255
    1e22:	9f bf       	out	0x3f, r25	; 63
    1e24:	54 2f       	mov	r21, r20
    1e26:	43 2f       	mov	r20, r19
    1e28:	32 2f       	mov	r19, r18
    1e2a:	22 27       	eor	r18, r18
    1e2c:	28 0f       	add	r18, r24
    1e2e:	31 1d       	adc	r19, r1
    1e30:	41 1d       	adc	r20, r1
    1e32:	51 1d       	adc	r21, r1
    1e34:	82 e0       	ldi	r24, 0x02	; 2
    1e36:	22 0f       	add	r18, r18
    1e38:	33 1f       	adc	r19, r19
    1e3a:	44 1f       	adc	r20, r20
    1e3c:	55 1f       	adc	r21, r21
    1e3e:	8a 95       	dec	r24
    1e40:	d1 f7       	brne	.-12     	; 0x1e36 <micros+0x3a>
    1e42:	b9 01       	movw	r22, r18
    1e44:	ca 01       	movw	r24, r20
    1e46:	08 95       	ret

00001e48 <delay>:
    1e48:	ef 92       	push	r14
    1e4a:	ff 92       	push	r15
    1e4c:	0f 93       	push	r16
    1e4e:	1f 93       	push	r17
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	7b 01       	movw	r14, r22
    1e56:	8c 01       	movw	r16, r24
    1e58:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <micros>
    1e5c:	eb 01       	movw	r28, r22
    1e5e:	0e c0       	rjmp	.+28     	; 0x1e7c <delay+0x34>
    1e60:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <micros>
    1e64:	6c 1b       	sub	r22, r28
    1e66:	7d 0b       	sbc	r23, r29
    1e68:	68 5e       	subi	r22, 0xE8	; 232
    1e6a:	73 40       	sbci	r23, 0x03	; 3
    1e6c:	c8 f3       	brcs	.-14     	; 0x1e60 <delay+0x18>
    1e6e:	08 94       	sec
    1e70:	e1 08       	sbc	r14, r1
    1e72:	f1 08       	sbc	r15, r1
    1e74:	01 09       	sbc	r16, r1
    1e76:	11 09       	sbc	r17, r1
    1e78:	c8 51       	subi	r28, 0x18	; 24
    1e7a:	dc 4f       	sbci	r29, 0xFC	; 252
    1e7c:	e1 14       	cp	r14, r1
    1e7e:	f1 04       	cpc	r15, r1
    1e80:	01 05       	cpc	r16, r1
    1e82:	11 05       	cpc	r17, r1
    1e84:	69 f7       	brne	.-38     	; 0x1e60 <delay+0x18>
    1e86:	df 91       	pop	r29
    1e88:	cf 91       	pop	r28
    1e8a:	1f 91       	pop	r17
    1e8c:	0f 91       	pop	r16
    1e8e:	ff 90       	pop	r15
    1e90:	ef 90       	pop	r14
    1e92:	08 95       	ret

00001e94 <delayMicroseconds>:
    1e94:	01 97       	sbiw	r24, 0x01	; 1
    1e96:	39 f0       	breq	.+14     	; 0x1ea6 <delayMicroseconds+0x12>
    1e98:	88 0f       	add	r24, r24
    1e9a:	99 1f       	adc	r25, r25
    1e9c:	88 0f       	add	r24, r24
    1e9e:	99 1f       	adc	r25, r25
    1ea0:	02 97       	sbiw	r24, 0x02	; 2
    1ea2:	01 97       	sbiw	r24, 0x01	; 1
    1ea4:	f1 f7       	brne	.-4      	; 0x1ea2 <delayMicroseconds+0xe>
    1ea6:	08 95       	ret

00001ea8 <init>:
    1ea8:	78 94       	sei
    1eaa:	84 b5       	in	r24, 0x24	; 36
    1eac:	82 60       	ori	r24, 0x02	; 2
    1eae:	84 bd       	out	0x24, r24	; 36
    1eb0:	84 b5       	in	r24, 0x24	; 36
    1eb2:	81 60       	ori	r24, 0x01	; 1
    1eb4:	84 bd       	out	0x24, r24	; 36
    1eb6:	85 b5       	in	r24, 0x25	; 37
    1eb8:	82 60       	ori	r24, 0x02	; 2
    1eba:	85 bd       	out	0x25, r24	; 37
    1ebc:	85 b5       	in	r24, 0x25	; 37
    1ebe:	81 60       	ori	r24, 0x01	; 1
    1ec0:	85 bd       	out	0x25, r24	; 37
    1ec2:	ee e6       	ldi	r30, 0x6E	; 110
    1ec4:	f0 e0       	ldi	r31, 0x00	; 0
    1ec6:	80 81       	ld	r24, Z
    1ec8:	81 60       	ori	r24, 0x01	; 1
    1eca:	80 83       	st	Z, r24
    1ecc:	e1 e8       	ldi	r30, 0x81	; 129
    1ece:	f0 e0       	ldi	r31, 0x00	; 0
    1ed0:	10 82       	st	Z, r1
    1ed2:	80 81       	ld	r24, Z
    1ed4:	82 60       	ori	r24, 0x02	; 2
    1ed6:	80 83       	st	Z, r24
    1ed8:	80 81       	ld	r24, Z
    1eda:	81 60       	ori	r24, 0x01	; 1
    1edc:	80 83       	st	Z, r24
    1ede:	e0 e8       	ldi	r30, 0x80	; 128
    1ee0:	f0 e0       	ldi	r31, 0x00	; 0
    1ee2:	80 81       	ld	r24, Z
    1ee4:	81 60       	ori	r24, 0x01	; 1
    1ee6:	80 83       	st	Z, r24
    1ee8:	e1 eb       	ldi	r30, 0xB1	; 177
    1eea:	f0 e0       	ldi	r31, 0x00	; 0
    1eec:	80 81       	ld	r24, Z
    1eee:	84 60       	ori	r24, 0x04	; 4
    1ef0:	80 83       	st	Z, r24
    1ef2:	e0 eb       	ldi	r30, 0xB0	; 176
    1ef4:	f0 e0       	ldi	r31, 0x00	; 0
    1ef6:	80 81       	ld	r24, Z
    1ef8:	81 60       	ori	r24, 0x01	; 1
    1efa:	80 83       	st	Z, r24
    1efc:	ea e7       	ldi	r30, 0x7A	; 122
    1efe:	f0 e0       	ldi	r31, 0x00	; 0
    1f00:	80 81       	ld	r24, Z
    1f02:	84 60       	ori	r24, 0x04	; 4
    1f04:	80 83       	st	Z, r24
    1f06:	80 81       	ld	r24, Z
    1f08:	82 60       	ori	r24, 0x02	; 2
    1f0a:	80 83       	st	Z, r24
    1f0c:	80 81       	ld	r24, Z
    1f0e:	81 60       	ori	r24, 0x01	; 1
    1f10:	80 83       	st	Z, r24
    1f12:	80 81       	ld	r24, Z
    1f14:	80 68       	ori	r24, 0x80	; 128
    1f16:	80 83       	st	Z, r24
    1f18:	10 92 c1 00 	sts	0x00C1, r1
    1f1c:	08 95       	ret

00001f1e <analogReference>:
    1f1e:	80 93 58 01 	sts	0x0158, r24
    1f22:	08 95       	ret

00001f24 <analogRead>:
    1f24:	98 2f       	mov	r25, r24
    1f26:	8e 30       	cpi	r24, 0x0E	; 14
    1f28:	08 f0       	brcs	.+2      	; 0x1f2c <analogRead+0x8>
    1f2a:	9e 50       	subi	r25, 0x0E	; 14
    1f2c:	97 70       	andi	r25, 0x07	; 7
    1f2e:	80 91 58 01 	lds	r24, 0x0158
    1f32:	82 95       	swap	r24
    1f34:	88 0f       	add	r24, r24
    1f36:	88 0f       	add	r24, r24
    1f38:	80 7c       	andi	r24, 0xC0	; 192
    1f3a:	89 2b       	or	r24, r25
    1f3c:	80 93 7c 00 	sts	0x007C, r24
    1f40:	80 91 7a 00 	lds	r24, 0x007A
    1f44:	80 64       	ori	r24, 0x40	; 64
    1f46:	80 93 7a 00 	sts	0x007A, r24
    1f4a:	80 91 7a 00 	lds	r24, 0x007A
    1f4e:	86 fd       	sbrc	r24, 6
    1f50:	fc cf       	rjmp	.-8      	; 0x1f4a <analogRead+0x26>
    1f52:	20 91 78 00 	lds	r18, 0x0078
    1f56:	40 91 79 00 	lds	r20, 0x0079
    1f5a:	94 2f       	mov	r25, r20
    1f5c:	80 e0       	ldi	r24, 0x00	; 0
    1f5e:	30 e0       	ldi	r19, 0x00	; 0
    1f60:	28 2b       	or	r18, r24
    1f62:	39 2b       	or	r19, r25
    1f64:	c9 01       	movw	r24, r18
    1f66:	08 95       	ret

00001f68 <analogWrite>:
    1f68:	1f 93       	push	r17
    1f6a:	cf 93       	push	r28
    1f6c:	df 93       	push	r29
    1f6e:	18 2f       	mov	r17, r24
    1f70:	eb 01       	movw	r28, r22
    1f72:	61 e0       	ldi	r22, 0x01	; 1
    1f74:	0e 94 14 10 	call	0x2028	; 0x2028 <pinMode>
    1f78:	20 97       	sbiw	r28, 0x00	; 0
    1f7a:	09 f4       	brne	.+2      	; 0x1f7e <analogWrite+0x16>
    1f7c:	4a c0       	rjmp	.+148    	; 0x2012 <analogWrite+0xaa>
    1f7e:	cf 3f       	cpi	r28, 0xFF	; 255
    1f80:	d1 05       	cpc	r29, r1
    1f82:	09 f4       	brne	.+2      	; 0x1f86 <analogWrite+0x1e>
    1f84:	49 c0       	rjmp	.+146    	; 0x2018 <analogWrite+0xb0>
    1f86:	e1 2f       	mov	r30, r17
    1f88:	f0 e0       	ldi	r31, 0x00	; 0
    1f8a:	e0 5d       	subi	r30, 0xD0	; 208
    1f8c:	fe 4f       	sbci	r31, 0xFE	; 254
    1f8e:	84 91       	lpm	r24, Z+
    1f90:	83 30       	cpi	r24, 0x03	; 3
    1f92:	c1 f0       	breq	.+48     	; 0x1fc4 <analogWrite+0x5c>
    1f94:	84 30       	cpi	r24, 0x04	; 4
    1f96:	28 f4       	brcc	.+10     	; 0x1fa2 <analogWrite+0x3a>
    1f98:	81 30       	cpi	r24, 0x01	; 1
    1f9a:	51 f0       	breq	.+20     	; 0x1fb0 <analogWrite+0x48>
    1f9c:	82 30       	cpi	r24, 0x02	; 2
    1f9e:	b1 f5       	brne	.+108    	; 0x200c <analogWrite+0xa4>
    1fa0:	0c c0       	rjmp	.+24     	; 0x1fba <analogWrite+0x52>
    1fa2:	86 30       	cpi	r24, 0x06	; 6
    1fa4:	19 f1       	breq	.+70     	; 0x1fec <analogWrite+0x84>
    1fa6:	87 30       	cpi	r24, 0x07	; 7
    1fa8:	49 f1       	breq	.+82     	; 0x1ffc <analogWrite+0x94>
    1faa:	84 30       	cpi	r24, 0x04	; 4
    1fac:	79 f5       	brne	.+94     	; 0x200c <analogWrite+0xa4>
    1fae:	14 c0       	rjmp	.+40     	; 0x1fd8 <analogWrite+0x70>
    1fb0:	84 b5       	in	r24, 0x24	; 36
    1fb2:	80 68       	ori	r24, 0x80	; 128
    1fb4:	84 bd       	out	0x24, r24	; 36
    1fb6:	c7 bd       	out	0x27, r28	; 39
    1fb8:	33 c0       	rjmp	.+102    	; 0x2020 <analogWrite+0xb8>
    1fba:	84 b5       	in	r24, 0x24	; 36
    1fbc:	80 62       	ori	r24, 0x20	; 32
    1fbe:	84 bd       	out	0x24, r24	; 36
    1fc0:	c8 bd       	out	0x28, r28	; 40
    1fc2:	2e c0       	rjmp	.+92     	; 0x2020 <analogWrite+0xb8>
    1fc4:	80 91 80 00 	lds	r24, 0x0080
    1fc8:	80 68       	ori	r24, 0x80	; 128
    1fca:	80 93 80 00 	sts	0x0080, r24
    1fce:	d0 93 89 00 	sts	0x0089, r29
    1fd2:	c0 93 88 00 	sts	0x0088, r28
    1fd6:	24 c0       	rjmp	.+72     	; 0x2020 <analogWrite+0xb8>
    1fd8:	80 91 80 00 	lds	r24, 0x0080
    1fdc:	80 62       	ori	r24, 0x20	; 32
    1fde:	80 93 80 00 	sts	0x0080, r24
    1fe2:	d0 93 8b 00 	sts	0x008B, r29
    1fe6:	c0 93 8a 00 	sts	0x008A, r28
    1fea:	1a c0       	rjmp	.+52     	; 0x2020 <analogWrite+0xb8>
    1fec:	80 91 b0 00 	lds	r24, 0x00B0
    1ff0:	80 68       	ori	r24, 0x80	; 128
    1ff2:	80 93 b0 00 	sts	0x00B0, r24
    1ff6:	c0 93 b3 00 	sts	0x00B3, r28
    1ffa:	12 c0       	rjmp	.+36     	; 0x2020 <analogWrite+0xb8>
    1ffc:	80 91 b0 00 	lds	r24, 0x00B0
    2000:	80 62       	ori	r24, 0x20	; 32
    2002:	80 93 b0 00 	sts	0x00B0, r24
    2006:	c0 93 b4 00 	sts	0x00B4, r28
    200a:	0a c0       	rjmp	.+20     	; 0x2020 <analogWrite+0xb8>
    200c:	c0 38       	cpi	r28, 0x80	; 128
    200e:	d1 05       	cpc	r29, r1
    2010:	1c f4       	brge	.+6      	; 0x2018 <analogWrite+0xb0>
    2012:	81 2f       	mov	r24, r17
    2014:	60 e0       	ldi	r22, 0x00	; 0
    2016:	02 c0       	rjmp	.+4      	; 0x201c <analogWrite+0xb4>
    2018:	81 2f       	mov	r24, r17
    201a:	61 e0       	ldi	r22, 0x01	; 1
    201c:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
    2020:	df 91       	pop	r29
    2022:	cf 91       	pop	r28
    2024:	1f 91       	pop	r17
    2026:	08 95       	ret

00002028 <pinMode>:
    2028:	48 2f       	mov	r20, r24
    202a:	50 e0       	ldi	r21, 0x00	; 0
    202c:	ca 01       	movw	r24, r20
    202e:	84 5e       	subi	r24, 0xE4	; 228
    2030:	9e 4f       	sbci	r25, 0xFE	; 254
    2032:	fc 01       	movw	r30, r24
    2034:	24 91       	lpm	r18, Z+
    2036:	48 5f       	subi	r20, 0xF8	; 248
    2038:	5e 4f       	sbci	r21, 0xFE	; 254
    203a:	fa 01       	movw	r30, r20
    203c:	84 91       	lpm	r24, Z+
    203e:	88 23       	and	r24, r24
    2040:	c1 f0       	breq	.+48     	; 0x2072 <pinMode+0x4a>
    2042:	e8 2f       	mov	r30, r24
    2044:	f0 e0       	ldi	r31, 0x00	; 0
    2046:	ee 0f       	add	r30, r30
    2048:	ff 1f       	adc	r31, r31
    204a:	e6 51       	subi	r30, 0x16	; 22
    204c:	ff 4f       	sbci	r31, 0xFF	; 255
    204e:	a5 91       	lpm	r26, Z+
    2050:	b4 91       	lpm	r27, Z+
    2052:	66 23       	and	r22, r22
    2054:	41 f4       	brne	.+16     	; 0x2066 <pinMode+0x3e>
    2056:	9f b7       	in	r25, 0x3f	; 63
    2058:	f8 94       	cli
    205a:	8c 91       	ld	r24, X
    205c:	20 95       	com	r18
    205e:	82 23       	and	r24, r18
    2060:	8c 93       	st	X, r24
    2062:	9f bf       	out	0x3f, r25	; 63
    2064:	08 95       	ret
    2066:	9f b7       	in	r25, 0x3f	; 63
    2068:	f8 94       	cli
    206a:	8c 91       	ld	r24, X
    206c:	82 2b       	or	r24, r18
    206e:	8c 93       	st	X, r24
    2070:	9f bf       	out	0x3f, r25	; 63
    2072:	08 95       	ret

00002074 <turnOffPWM>:
    2074:	83 30       	cpi	r24, 0x03	; 3
    2076:	71 f0       	breq	.+28     	; 0x2094 <turnOffPWM+0x20>
    2078:	84 30       	cpi	r24, 0x04	; 4
    207a:	28 f4       	brcc	.+10     	; 0x2086 <turnOffPWM+0x12>
    207c:	81 30       	cpi	r24, 0x01	; 1
    207e:	a1 f0       	breq	.+40     	; 0x20a8 <turnOffPWM+0x34>
    2080:	82 30       	cpi	r24, 0x02	; 2
    2082:	21 f5       	brne	.+72     	; 0x20cc <turnOffPWM+0x58>
    2084:	14 c0       	rjmp	.+40     	; 0x20ae <turnOffPWM+0x3a>
    2086:	86 30       	cpi	r24, 0x06	; 6
    2088:	b1 f0       	breq	.+44     	; 0x20b6 <turnOffPWM+0x42>
    208a:	87 30       	cpi	r24, 0x07	; 7
    208c:	d1 f0       	breq	.+52     	; 0x20c2 <turnOffPWM+0x4e>
    208e:	84 30       	cpi	r24, 0x04	; 4
    2090:	e9 f4       	brne	.+58     	; 0x20cc <turnOffPWM+0x58>
    2092:	04 c0       	rjmp	.+8      	; 0x209c <turnOffPWM+0x28>
    2094:	80 91 80 00 	lds	r24, 0x0080
    2098:	8f 77       	andi	r24, 0x7F	; 127
    209a:	03 c0       	rjmp	.+6      	; 0x20a2 <turnOffPWM+0x2e>
    209c:	80 91 80 00 	lds	r24, 0x0080
    20a0:	8f 7d       	andi	r24, 0xDF	; 223
    20a2:	80 93 80 00 	sts	0x0080, r24
    20a6:	08 95       	ret
    20a8:	84 b5       	in	r24, 0x24	; 36
    20aa:	8f 77       	andi	r24, 0x7F	; 127
    20ac:	02 c0       	rjmp	.+4      	; 0x20b2 <turnOffPWM+0x3e>
    20ae:	84 b5       	in	r24, 0x24	; 36
    20b0:	8f 7d       	andi	r24, 0xDF	; 223
    20b2:	84 bd       	out	0x24, r24	; 36
    20b4:	08 95       	ret
    20b6:	80 91 b0 00 	lds	r24, 0x00B0
    20ba:	8f 77       	andi	r24, 0x7F	; 127
    20bc:	80 93 b0 00 	sts	0x00B0, r24
    20c0:	08 95       	ret
    20c2:	80 91 b0 00 	lds	r24, 0x00B0
    20c6:	8f 7d       	andi	r24, 0xDF	; 223
    20c8:	80 93 b0 00 	sts	0x00B0, r24
    20cc:	08 95       	ret

000020ce <digitalWrite>:
    20ce:	ff 92       	push	r15
    20d0:	0f 93       	push	r16
    20d2:	1f 93       	push	r17
    20d4:	f6 2e       	mov	r15, r22
    20d6:	48 2f       	mov	r20, r24
    20d8:	50 e0       	ldi	r21, 0x00	; 0
    20da:	ca 01       	movw	r24, r20
    20dc:	80 5d       	subi	r24, 0xD0	; 208
    20de:	9e 4f       	sbci	r25, 0xFE	; 254
    20e0:	fc 01       	movw	r30, r24
    20e2:	24 91       	lpm	r18, Z+
    20e4:	ca 01       	movw	r24, r20
    20e6:	84 5e       	subi	r24, 0xE4	; 228
    20e8:	9e 4f       	sbci	r25, 0xFE	; 254
    20ea:	fc 01       	movw	r30, r24
    20ec:	14 91       	lpm	r17, Z+
    20ee:	48 5f       	subi	r20, 0xF8	; 248
    20f0:	5e 4f       	sbci	r21, 0xFE	; 254
    20f2:	fa 01       	movw	r30, r20
    20f4:	04 91       	lpm	r16, Z+
    20f6:	00 23       	and	r16, r16
    20f8:	d9 f0       	breq	.+54     	; 0x2130 <digitalWrite+0x62>
    20fa:	22 23       	and	r18, r18
    20fc:	19 f0       	breq	.+6      	; 0x2104 <digitalWrite+0x36>
    20fe:	82 2f       	mov	r24, r18
    2100:	0e 94 3a 10 	call	0x2074	; 0x2074 <turnOffPWM>
    2104:	e0 2f       	mov	r30, r16
    2106:	f0 e0       	ldi	r31, 0x00	; 0
    2108:	ee 0f       	add	r30, r30
    210a:	ff 1f       	adc	r31, r31
    210c:	ec 50       	subi	r30, 0x0C	; 12
    210e:	ff 4f       	sbci	r31, 0xFF	; 255
    2110:	a5 91       	lpm	r26, Z+
    2112:	b4 91       	lpm	r27, Z+
    2114:	ff 20       	and	r15, r15
    2116:	31 f4       	brne	.+12     	; 0x2124 <digitalWrite+0x56>
    2118:	9f b7       	in	r25, 0x3f	; 63
    211a:	f8 94       	cli
    211c:	8c 91       	ld	r24, X
    211e:	10 95       	com	r17
    2120:	81 23       	and	r24, r17
    2122:	04 c0       	rjmp	.+8      	; 0x212c <digitalWrite+0x5e>
    2124:	9f b7       	in	r25, 0x3f	; 63
    2126:	f8 94       	cli
    2128:	8c 91       	ld	r24, X
    212a:	81 2b       	or	r24, r17
    212c:	8c 93       	st	X, r24
    212e:	9f bf       	out	0x3f, r25	; 63
    2130:	1f 91       	pop	r17
    2132:	0f 91       	pop	r16
    2134:	ff 90       	pop	r15
    2136:	08 95       	ret

00002138 <digitalRead>:
    2138:	0f 93       	push	r16
    213a:	1f 93       	push	r17
    213c:	48 2f       	mov	r20, r24
    213e:	50 e0       	ldi	r21, 0x00	; 0
    2140:	ca 01       	movw	r24, r20
    2142:	80 5d       	subi	r24, 0xD0	; 208
    2144:	9e 4f       	sbci	r25, 0xFE	; 254
    2146:	fc 01       	movw	r30, r24
    2148:	24 91       	lpm	r18, Z+
    214a:	ca 01       	movw	r24, r20
    214c:	84 5e       	subi	r24, 0xE4	; 228
    214e:	9e 4f       	sbci	r25, 0xFE	; 254
    2150:	fc 01       	movw	r30, r24
    2152:	04 91       	lpm	r16, Z+
    2154:	48 5f       	subi	r20, 0xF8	; 248
    2156:	5e 4f       	sbci	r21, 0xFE	; 254
    2158:	fa 01       	movw	r30, r20
    215a:	14 91       	lpm	r17, Z+
    215c:	11 23       	and	r17, r17
    215e:	19 f4       	brne	.+6      	; 0x2166 <digitalRead+0x2e>
    2160:	20 e0       	ldi	r18, 0x00	; 0
    2162:	30 e0       	ldi	r19, 0x00	; 0
    2164:	15 c0       	rjmp	.+42     	; 0x2190 <digitalRead+0x58>
    2166:	22 23       	and	r18, r18
    2168:	19 f0       	breq	.+6      	; 0x2170 <digitalRead+0x38>
    216a:	82 2f       	mov	r24, r18
    216c:	0e 94 3a 10 	call	0x2074	; 0x2074 <turnOffPWM>
    2170:	81 2f       	mov	r24, r17
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	88 0f       	add	r24, r24
    2176:	99 1f       	adc	r25, r25
    2178:	82 50       	subi	r24, 0x02	; 2
    217a:	9f 4f       	sbci	r25, 0xFF	; 255
    217c:	fc 01       	movw	r30, r24
    217e:	a5 91       	lpm	r26, Z+
    2180:	b4 91       	lpm	r27, Z+
    2182:	8c 91       	ld	r24, X
    2184:	20 e0       	ldi	r18, 0x00	; 0
    2186:	30 e0       	ldi	r19, 0x00	; 0
    2188:	80 23       	and	r24, r16
    218a:	11 f0       	breq	.+4      	; 0x2190 <digitalRead+0x58>
    218c:	21 e0       	ldi	r18, 0x01	; 1
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	c9 01       	movw	r24, r18
    2192:	1f 91       	pop	r17
    2194:	0f 91       	pop	r16
    2196:	08 95       	ret

00002198 <shiftOut>:
    2198:	bf 92       	push	r11
    219a:	cf 92       	push	r12
    219c:	df 92       	push	r13
    219e:	ef 92       	push	r14
    21a0:	ff 92       	push	r15
    21a2:	0f 93       	push	r16
    21a4:	1f 93       	push	r17
    21a6:	cf 93       	push	r28
    21a8:	df 93       	push	r29
    21aa:	e8 2e       	mov	r14, r24
    21ac:	f6 2e       	mov	r15, r22
    21ae:	b4 2e       	mov	r11, r20
    21b0:	c7 e0       	ldi	r28, 0x07	; 7
    21b2:	d0 e0       	ldi	r29, 0x00	; 0
    21b4:	02 2f       	mov	r16, r18
    21b6:	10 e0       	ldi	r17, 0x00	; 0
    21b8:	87 e0       	ldi	r24, 0x07	; 7
    21ba:	c8 2e       	mov	r12, r24
    21bc:	d1 2c       	mov	r13, r1
    21be:	bb 20       	and	r11, r11
    21c0:	59 f4       	brne	.+22     	; 0x21d8 <shiftOut+0x40>
    21c2:	b6 01       	movw	r22, r12
    21c4:	6c 1b       	sub	r22, r28
    21c6:	7d 0b       	sbc	r23, r29
    21c8:	c8 01       	movw	r24, r16
    21ca:	02 c0       	rjmp	.+4      	; 0x21d0 <shiftOut+0x38>
    21cc:	95 95       	asr	r25
    21ce:	87 95       	ror	r24
    21d0:	6a 95       	dec	r22
    21d2:	e2 f7       	brpl	.-8      	; 0x21cc <shiftOut+0x34>
    21d4:	bc 01       	movw	r22, r24
    21d6:	07 c0       	rjmp	.+14     	; 0x21e6 <shiftOut+0x4e>
    21d8:	b8 01       	movw	r22, r16
    21da:	0c 2e       	mov	r0, r28
    21dc:	02 c0       	rjmp	.+4      	; 0x21e2 <shiftOut+0x4a>
    21de:	75 95       	asr	r23
    21e0:	67 95       	ror	r22
    21e2:	0a 94       	dec	r0
    21e4:	e2 f7       	brpl	.-8      	; 0x21de <shiftOut+0x46>
    21e6:	61 70       	andi	r22, 0x01	; 1
    21e8:	8e 2d       	mov	r24, r14
    21ea:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
    21ee:	8f 2d       	mov	r24, r15
    21f0:	61 e0       	ldi	r22, 0x01	; 1
    21f2:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
    21f6:	8f 2d       	mov	r24, r15
    21f8:	60 e0       	ldi	r22, 0x00	; 0
    21fa:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
    21fe:	21 97       	sbiw	r28, 0x01	; 1
    2200:	9f ef       	ldi	r25, 0xFF	; 255
    2202:	cf 3f       	cpi	r28, 0xFF	; 255
    2204:	d9 07       	cpc	r29, r25
    2206:	d9 f6       	brne	.-74     	; 0x21be <shiftOut+0x26>
    2208:	df 91       	pop	r29
    220a:	cf 91       	pop	r28
    220c:	1f 91       	pop	r17
    220e:	0f 91       	pop	r16
    2210:	ff 90       	pop	r15
    2212:	ef 90       	pop	r14
    2214:	df 90       	pop	r13
    2216:	cf 90       	pop	r12
    2218:	bf 90       	pop	r11
    221a:	08 95       	ret

0000221c <shiftIn>:
    221c:	cf 92       	push	r12
    221e:	df 92       	push	r13
    2220:	ef 92       	push	r14
    2222:	ff 92       	push	r15
    2224:	0f 93       	push	r16
    2226:	1f 93       	push	r17
    2228:	cf 93       	push	r28
    222a:	df 93       	push	r29
    222c:	f8 2e       	mov	r15, r24
    222e:	06 2f       	mov	r16, r22
    2230:	e4 2e       	mov	r14, r20
    2232:	10 e0       	ldi	r17, 0x00	; 0
    2234:	c7 e0       	ldi	r28, 0x07	; 7
    2236:	d0 e0       	ldi	r29, 0x00	; 0
    2238:	97 e0       	ldi	r25, 0x07	; 7
    223a:	c9 2e       	mov	r12, r25
    223c:	d1 2c       	mov	r13, r1
    223e:	80 2f       	mov	r24, r16
    2240:	61 e0       	ldi	r22, 0x01	; 1
    2242:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
    2246:	ee 20       	and	r14, r14
    2248:	61 f4       	brne	.+24     	; 0x2262 <shiftIn+0x46>
    224a:	8f 2d       	mov	r24, r15
    224c:	0e 94 9c 10 	call	0x2138	; 0x2138 <digitalRead>
    2250:	96 01       	movw	r18, r12
    2252:	2c 1b       	sub	r18, r28
    2254:	3d 0b       	sbc	r19, r29
    2256:	02 c0       	rjmp	.+4      	; 0x225c <shiftIn+0x40>
    2258:	88 0f       	add	r24, r24
    225a:	99 1f       	adc	r25, r25
    225c:	2a 95       	dec	r18
    225e:	e2 f7       	brpl	.-8      	; 0x2258 <shiftIn+0x3c>
    2260:	09 c0       	rjmp	.+18     	; 0x2274 <shiftIn+0x58>
    2262:	8f 2d       	mov	r24, r15
    2264:	0e 94 9c 10 	call	0x2138	; 0x2138 <digitalRead>
    2268:	0c 2e       	mov	r0, r28
    226a:	02 c0       	rjmp	.+4      	; 0x2270 <shiftIn+0x54>
    226c:	88 0f       	add	r24, r24
    226e:	99 1f       	adc	r25, r25
    2270:	0a 94       	dec	r0
    2272:	e2 f7       	brpl	.-8      	; 0x226c <shiftIn+0x50>
    2274:	18 2b       	or	r17, r24
    2276:	80 2f       	mov	r24, r16
    2278:	60 e0       	ldi	r22, 0x00	; 0
    227a:	0e 94 67 10 	call	0x20ce	; 0x20ce <digitalWrite>
    227e:	21 97       	sbiw	r28, 0x01	; 1
    2280:	8f ef       	ldi	r24, 0xFF	; 255
    2282:	cf 3f       	cpi	r28, 0xFF	; 255
    2284:	d8 07       	cpc	r29, r24
    2286:	d9 f6       	brne	.-74     	; 0x223e <shiftIn+0x22>
    2288:	81 2f       	mov	r24, r17
    228a:	df 91       	pop	r29
    228c:	cf 91       	pop	r28
    228e:	1f 91       	pop	r17
    2290:	0f 91       	pop	r16
    2292:	ff 90       	pop	r15
    2294:	ef 90       	pop	r14
    2296:	df 90       	pop	r13
    2298:	cf 90       	pop	r12
    229a:	08 95       	ret

0000229c <__fixunssfsi>:
    229c:	ef 92       	push	r14
    229e:	ff 92       	push	r15
    22a0:	0f 93       	push	r16
    22a2:	1f 93       	push	r17
    22a4:	7b 01       	movw	r14, r22
    22a6:	8c 01       	movw	r16, r24
    22a8:	20 e0       	ldi	r18, 0x00	; 0
    22aa:	30 e0       	ldi	r19, 0x00	; 0
    22ac:	40 e0       	ldi	r20, 0x00	; 0
    22ae:	5f e4       	ldi	r21, 0x4F	; 79
    22b0:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__gesf2>
    22b4:	88 23       	and	r24, r24
    22b6:	8c f0       	brlt	.+34     	; 0x22da <__fixunssfsi+0x3e>
    22b8:	c8 01       	movw	r24, r16
    22ba:	b7 01       	movw	r22, r14
    22bc:	20 e0       	ldi	r18, 0x00	; 0
    22be:	30 e0       	ldi	r19, 0x00	; 0
    22c0:	40 e0       	ldi	r20, 0x00	; 0
    22c2:	5f e4       	ldi	r21, 0x4F	; 79
    22c4:	0e 94 c6 12 	call	0x258c	; 0x258c <__subsf3>
    22c8:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
    22cc:	9b 01       	movw	r18, r22
    22ce:	ac 01       	movw	r20, r24
    22d0:	20 50       	subi	r18, 0x00	; 0
    22d2:	30 40       	sbci	r19, 0x00	; 0
    22d4:	40 40       	sbci	r20, 0x00	; 0
    22d6:	50 48       	sbci	r21, 0x80	; 128
    22d8:	06 c0       	rjmp	.+12     	; 0x22e6 <__fixunssfsi+0x4a>
    22da:	c8 01       	movw	r24, r16
    22dc:	b7 01       	movw	r22, r14
    22de:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
    22e2:	9b 01       	movw	r18, r22
    22e4:	ac 01       	movw	r20, r24
    22e6:	b9 01       	movw	r22, r18
    22e8:	ca 01       	movw	r24, r20
    22ea:	1f 91       	pop	r17
    22ec:	0f 91       	pop	r16
    22ee:	ff 90       	pop	r15
    22f0:	ef 90       	pop	r14
    22f2:	08 95       	ret

000022f4 <_fpadd_parts>:
    22f4:	a0 e0       	ldi	r26, 0x00	; 0
    22f6:	b0 e0       	ldi	r27, 0x00	; 0
    22f8:	e0 e8       	ldi	r30, 0x80	; 128
    22fa:	f1 e1       	ldi	r31, 0x11	; 17
    22fc:	0c 94 99 25 	jmp	0x4b32	; 0x4b32 <__prologue_saves__>
    2300:	dc 01       	movw	r26, r24
    2302:	2b 01       	movw	r4, r22
    2304:	fa 01       	movw	r30, r20
    2306:	9c 91       	ld	r25, X
    2308:	92 30       	cpi	r25, 0x02	; 2
    230a:	08 f4       	brcc	.+2      	; 0x230e <_fpadd_parts+0x1a>
    230c:	39 c1       	rjmp	.+626    	; 0x2580 <_fpadd_parts+0x28c>
    230e:	eb 01       	movw	r28, r22
    2310:	88 81       	ld	r24, Y
    2312:	82 30       	cpi	r24, 0x02	; 2
    2314:	08 f4       	brcc	.+2      	; 0x2318 <_fpadd_parts+0x24>
    2316:	33 c1       	rjmp	.+614    	; 0x257e <_fpadd_parts+0x28a>
    2318:	94 30       	cpi	r25, 0x04	; 4
    231a:	69 f4       	brne	.+26     	; 0x2336 <_fpadd_parts+0x42>
    231c:	84 30       	cpi	r24, 0x04	; 4
    231e:	09 f0       	breq	.+2      	; 0x2322 <_fpadd_parts+0x2e>
    2320:	2f c1       	rjmp	.+606    	; 0x2580 <_fpadd_parts+0x28c>
    2322:	11 96       	adiw	r26, 0x01	; 1
    2324:	9c 91       	ld	r25, X
    2326:	11 97       	sbiw	r26, 0x01	; 1
    2328:	89 81       	ldd	r24, Y+1	; 0x01
    232a:	98 17       	cp	r25, r24
    232c:	09 f4       	brne	.+2      	; 0x2330 <_fpadd_parts+0x3c>
    232e:	28 c1       	rjmp	.+592    	; 0x2580 <_fpadd_parts+0x28c>
    2330:	a9 e5       	ldi	r26, 0x59	; 89
    2332:	b1 e0       	ldi	r27, 0x01	; 1
    2334:	25 c1       	rjmp	.+586    	; 0x2580 <_fpadd_parts+0x28c>
    2336:	84 30       	cpi	r24, 0x04	; 4
    2338:	09 f4       	brne	.+2      	; 0x233c <_fpadd_parts+0x48>
    233a:	21 c1       	rjmp	.+578    	; 0x257e <_fpadd_parts+0x28a>
    233c:	82 30       	cpi	r24, 0x02	; 2
    233e:	a9 f4       	brne	.+42     	; 0x236a <_fpadd_parts+0x76>
    2340:	92 30       	cpi	r25, 0x02	; 2
    2342:	09 f0       	breq	.+2      	; 0x2346 <_fpadd_parts+0x52>
    2344:	1d c1       	rjmp	.+570    	; 0x2580 <_fpadd_parts+0x28c>
    2346:	9a 01       	movw	r18, r20
    2348:	ad 01       	movw	r20, r26
    234a:	88 e0       	ldi	r24, 0x08	; 8
    234c:	ea 01       	movw	r28, r20
    234e:	09 90       	ld	r0, Y+
    2350:	ae 01       	movw	r20, r28
    2352:	e9 01       	movw	r28, r18
    2354:	09 92       	st	Y+, r0
    2356:	9e 01       	movw	r18, r28
    2358:	81 50       	subi	r24, 0x01	; 1
    235a:	c1 f7       	brne	.-16     	; 0x234c <_fpadd_parts+0x58>
    235c:	e2 01       	movw	r28, r4
    235e:	89 81       	ldd	r24, Y+1	; 0x01
    2360:	11 96       	adiw	r26, 0x01	; 1
    2362:	9c 91       	ld	r25, X
    2364:	89 23       	and	r24, r25
    2366:	81 83       	std	Z+1, r24	; 0x01
    2368:	08 c1       	rjmp	.+528    	; 0x257a <_fpadd_parts+0x286>
    236a:	92 30       	cpi	r25, 0x02	; 2
    236c:	09 f4       	brne	.+2      	; 0x2370 <_fpadd_parts+0x7c>
    236e:	07 c1       	rjmp	.+526    	; 0x257e <_fpadd_parts+0x28a>
    2370:	12 96       	adiw	r26, 0x02	; 2
    2372:	2d 90       	ld	r2, X+
    2374:	3c 90       	ld	r3, X
    2376:	13 97       	sbiw	r26, 0x03	; 3
    2378:	eb 01       	movw	r28, r22
    237a:	8a 81       	ldd	r24, Y+2	; 0x02
    237c:	9b 81       	ldd	r25, Y+3	; 0x03
    237e:	14 96       	adiw	r26, 0x04	; 4
    2380:	ad 90       	ld	r10, X+
    2382:	bd 90       	ld	r11, X+
    2384:	cd 90       	ld	r12, X+
    2386:	dc 90       	ld	r13, X
    2388:	17 97       	sbiw	r26, 0x07	; 7
    238a:	ec 80       	ldd	r14, Y+4	; 0x04
    238c:	fd 80       	ldd	r15, Y+5	; 0x05
    238e:	0e 81       	ldd	r16, Y+6	; 0x06
    2390:	1f 81       	ldd	r17, Y+7	; 0x07
    2392:	91 01       	movw	r18, r2
    2394:	28 1b       	sub	r18, r24
    2396:	39 0b       	sbc	r19, r25
    2398:	b9 01       	movw	r22, r18
    239a:	37 ff       	sbrs	r19, 7
    239c:	04 c0       	rjmp	.+8      	; 0x23a6 <_fpadd_parts+0xb2>
    239e:	66 27       	eor	r22, r22
    23a0:	77 27       	eor	r23, r23
    23a2:	62 1b       	sub	r22, r18
    23a4:	73 0b       	sbc	r23, r19
    23a6:	60 32       	cpi	r22, 0x20	; 32
    23a8:	71 05       	cpc	r23, r1
    23aa:	0c f0       	brlt	.+2      	; 0x23ae <_fpadd_parts+0xba>
    23ac:	61 c0       	rjmp	.+194    	; 0x2470 <_fpadd_parts+0x17c>
    23ae:	12 16       	cp	r1, r18
    23b0:	13 06       	cpc	r1, r19
    23b2:	6c f5       	brge	.+90     	; 0x240e <_fpadd_parts+0x11a>
    23b4:	37 01       	movw	r6, r14
    23b6:	48 01       	movw	r8, r16
    23b8:	06 2e       	mov	r0, r22
    23ba:	04 c0       	rjmp	.+8      	; 0x23c4 <_fpadd_parts+0xd0>
    23bc:	96 94       	lsr	r9
    23be:	87 94       	ror	r8
    23c0:	77 94       	ror	r7
    23c2:	67 94       	ror	r6
    23c4:	0a 94       	dec	r0
    23c6:	d2 f7       	brpl	.-12     	; 0x23bc <_fpadd_parts+0xc8>
    23c8:	21 e0       	ldi	r18, 0x01	; 1
    23ca:	30 e0       	ldi	r19, 0x00	; 0
    23cc:	40 e0       	ldi	r20, 0x00	; 0
    23ce:	50 e0       	ldi	r21, 0x00	; 0
    23d0:	04 c0       	rjmp	.+8      	; 0x23da <_fpadd_parts+0xe6>
    23d2:	22 0f       	add	r18, r18
    23d4:	33 1f       	adc	r19, r19
    23d6:	44 1f       	adc	r20, r20
    23d8:	55 1f       	adc	r21, r21
    23da:	6a 95       	dec	r22
    23dc:	d2 f7       	brpl	.-12     	; 0x23d2 <_fpadd_parts+0xde>
    23de:	21 50       	subi	r18, 0x01	; 1
    23e0:	30 40       	sbci	r19, 0x00	; 0
    23e2:	40 40       	sbci	r20, 0x00	; 0
    23e4:	50 40       	sbci	r21, 0x00	; 0
    23e6:	2e 21       	and	r18, r14
    23e8:	3f 21       	and	r19, r15
    23ea:	40 23       	and	r20, r16
    23ec:	51 23       	and	r21, r17
    23ee:	21 15       	cp	r18, r1
    23f0:	31 05       	cpc	r19, r1
    23f2:	41 05       	cpc	r20, r1
    23f4:	51 05       	cpc	r21, r1
    23f6:	21 f0       	breq	.+8      	; 0x2400 <_fpadd_parts+0x10c>
    23f8:	21 e0       	ldi	r18, 0x01	; 1
    23fa:	30 e0       	ldi	r19, 0x00	; 0
    23fc:	40 e0       	ldi	r20, 0x00	; 0
    23fe:	50 e0       	ldi	r21, 0x00	; 0
    2400:	79 01       	movw	r14, r18
    2402:	8a 01       	movw	r16, r20
    2404:	e6 28       	or	r14, r6
    2406:	f7 28       	or	r15, r7
    2408:	08 29       	or	r16, r8
    240a:	19 29       	or	r17, r9
    240c:	3c c0       	rjmp	.+120    	; 0x2486 <_fpadd_parts+0x192>
    240e:	23 2b       	or	r18, r19
    2410:	d1 f1       	breq	.+116    	; 0x2486 <_fpadd_parts+0x192>
    2412:	26 0e       	add	r2, r22
    2414:	37 1e       	adc	r3, r23
    2416:	35 01       	movw	r6, r10
    2418:	46 01       	movw	r8, r12
    241a:	06 2e       	mov	r0, r22
    241c:	04 c0       	rjmp	.+8      	; 0x2426 <_fpadd_parts+0x132>
    241e:	96 94       	lsr	r9
    2420:	87 94       	ror	r8
    2422:	77 94       	ror	r7
    2424:	67 94       	ror	r6
    2426:	0a 94       	dec	r0
    2428:	d2 f7       	brpl	.-12     	; 0x241e <_fpadd_parts+0x12a>
    242a:	21 e0       	ldi	r18, 0x01	; 1
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	40 e0       	ldi	r20, 0x00	; 0
    2430:	50 e0       	ldi	r21, 0x00	; 0
    2432:	04 c0       	rjmp	.+8      	; 0x243c <_fpadd_parts+0x148>
    2434:	22 0f       	add	r18, r18
    2436:	33 1f       	adc	r19, r19
    2438:	44 1f       	adc	r20, r20
    243a:	55 1f       	adc	r21, r21
    243c:	6a 95       	dec	r22
    243e:	d2 f7       	brpl	.-12     	; 0x2434 <_fpadd_parts+0x140>
    2440:	21 50       	subi	r18, 0x01	; 1
    2442:	30 40       	sbci	r19, 0x00	; 0
    2444:	40 40       	sbci	r20, 0x00	; 0
    2446:	50 40       	sbci	r21, 0x00	; 0
    2448:	2a 21       	and	r18, r10
    244a:	3b 21       	and	r19, r11
    244c:	4c 21       	and	r20, r12
    244e:	5d 21       	and	r21, r13
    2450:	21 15       	cp	r18, r1
    2452:	31 05       	cpc	r19, r1
    2454:	41 05       	cpc	r20, r1
    2456:	51 05       	cpc	r21, r1
    2458:	21 f0       	breq	.+8      	; 0x2462 <_fpadd_parts+0x16e>
    245a:	21 e0       	ldi	r18, 0x01	; 1
    245c:	30 e0       	ldi	r19, 0x00	; 0
    245e:	40 e0       	ldi	r20, 0x00	; 0
    2460:	50 e0       	ldi	r21, 0x00	; 0
    2462:	59 01       	movw	r10, r18
    2464:	6a 01       	movw	r12, r20
    2466:	a6 28       	or	r10, r6
    2468:	b7 28       	or	r11, r7
    246a:	c8 28       	or	r12, r8
    246c:	d9 28       	or	r13, r9
    246e:	0b c0       	rjmp	.+22     	; 0x2486 <_fpadd_parts+0x192>
    2470:	82 15       	cp	r24, r2
    2472:	93 05       	cpc	r25, r3
    2474:	2c f0       	brlt	.+10     	; 0x2480 <_fpadd_parts+0x18c>
    2476:	1c 01       	movw	r2, r24
    2478:	aa 24       	eor	r10, r10
    247a:	bb 24       	eor	r11, r11
    247c:	65 01       	movw	r12, r10
    247e:	03 c0       	rjmp	.+6      	; 0x2486 <_fpadd_parts+0x192>
    2480:	ee 24       	eor	r14, r14
    2482:	ff 24       	eor	r15, r15
    2484:	87 01       	movw	r16, r14
    2486:	11 96       	adiw	r26, 0x01	; 1
    2488:	9c 91       	ld	r25, X
    248a:	d2 01       	movw	r26, r4
    248c:	11 96       	adiw	r26, 0x01	; 1
    248e:	8c 91       	ld	r24, X
    2490:	98 17       	cp	r25, r24
    2492:	09 f4       	brne	.+2      	; 0x2496 <_fpadd_parts+0x1a2>
    2494:	45 c0       	rjmp	.+138    	; 0x2520 <_fpadd_parts+0x22c>
    2496:	99 23       	and	r25, r25
    2498:	39 f0       	breq	.+14     	; 0x24a8 <_fpadd_parts+0x1b4>
    249a:	a8 01       	movw	r20, r16
    249c:	97 01       	movw	r18, r14
    249e:	2a 19       	sub	r18, r10
    24a0:	3b 09       	sbc	r19, r11
    24a2:	4c 09       	sbc	r20, r12
    24a4:	5d 09       	sbc	r21, r13
    24a6:	06 c0       	rjmp	.+12     	; 0x24b4 <_fpadd_parts+0x1c0>
    24a8:	a6 01       	movw	r20, r12
    24aa:	95 01       	movw	r18, r10
    24ac:	2e 19       	sub	r18, r14
    24ae:	3f 09       	sbc	r19, r15
    24b0:	40 0b       	sbc	r20, r16
    24b2:	51 0b       	sbc	r21, r17
    24b4:	57 fd       	sbrc	r21, 7
    24b6:	08 c0       	rjmp	.+16     	; 0x24c8 <_fpadd_parts+0x1d4>
    24b8:	11 82       	std	Z+1, r1	; 0x01
    24ba:	33 82       	std	Z+3, r3	; 0x03
    24bc:	22 82       	std	Z+2, r2	; 0x02
    24be:	24 83       	std	Z+4, r18	; 0x04
    24c0:	35 83       	std	Z+5, r19	; 0x05
    24c2:	46 83       	std	Z+6, r20	; 0x06
    24c4:	57 83       	std	Z+7, r21	; 0x07
    24c6:	1d c0       	rjmp	.+58     	; 0x2502 <_fpadd_parts+0x20e>
    24c8:	81 e0       	ldi	r24, 0x01	; 1
    24ca:	81 83       	std	Z+1, r24	; 0x01
    24cc:	33 82       	std	Z+3, r3	; 0x03
    24ce:	22 82       	std	Z+2, r2	; 0x02
    24d0:	88 27       	eor	r24, r24
    24d2:	99 27       	eor	r25, r25
    24d4:	dc 01       	movw	r26, r24
    24d6:	82 1b       	sub	r24, r18
    24d8:	93 0b       	sbc	r25, r19
    24da:	a4 0b       	sbc	r26, r20
    24dc:	b5 0b       	sbc	r27, r21
    24de:	84 83       	std	Z+4, r24	; 0x04
    24e0:	95 83       	std	Z+5, r25	; 0x05
    24e2:	a6 83       	std	Z+6, r26	; 0x06
    24e4:	b7 83       	std	Z+7, r27	; 0x07
    24e6:	0d c0       	rjmp	.+26     	; 0x2502 <_fpadd_parts+0x20e>
    24e8:	22 0f       	add	r18, r18
    24ea:	33 1f       	adc	r19, r19
    24ec:	44 1f       	adc	r20, r20
    24ee:	55 1f       	adc	r21, r21
    24f0:	24 83       	std	Z+4, r18	; 0x04
    24f2:	35 83       	std	Z+5, r19	; 0x05
    24f4:	46 83       	std	Z+6, r20	; 0x06
    24f6:	57 83       	std	Z+7, r21	; 0x07
    24f8:	82 81       	ldd	r24, Z+2	; 0x02
    24fa:	93 81       	ldd	r25, Z+3	; 0x03
    24fc:	01 97       	sbiw	r24, 0x01	; 1
    24fe:	93 83       	std	Z+3, r25	; 0x03
    2500:	82 83       	std	Z+2, r24	; 0x02
    2502:	24 81       	ldd	r18, Z+4	; 0x04
    2504:	35 81       	ldd	r19, Z+5	; 0x05
    2506:	46 81       	ldd	r20, Z+6	; 0x06
    2508:	57 81       	ldd	r21, Z+7	; 0x07
    250a:	da 01       	movw	r26, r20
    250c:	c9 01       	movw	r24, r18
    250e:	01 97       	sbiw	r24, 0x01	; 1
    2510:	a1 09       	sbc	r26, r1
    2512:	b1 09       	sbc	r27, r1
    2514:	8f 5f       	subi	r24, 0xFF	; 255
    2516:	9f 4f       	sbci	r25, 0xFF	; 255
    2518:	af 4f       	sbci	r26, 0xFF	; 255
    251a:	bf 43       	sbci	r27, 0x3F	; 63
    251c:	28 f3       	brcs	.-54     	; 0x24e8 <_fpadd_parts+0x1f4>
    251e:	0b c0       	rjmp	.+22     	; 0x2536 <_fpadd_parts+0x242>
    2520:	91 83       	std	Z+1, r25	; 0x01
    2522:	33 82       	std	Z+3, r3	; 0x03
    2524:	22 82       	std	Z+2, r2	; 0x02
    2526:	ea 0c       	add	r14, r10
    2528:	fb 1c       	adc	r15, r11
    252a:	0c 1d       	adc	r16, r12
    252c:	1d 1d       	adc	r17, r13
    252e:	e4 82       	std	Z+4, r14	; 0x04
    2530:	f5 82       	std	Z+5, r15	; 0x05
    2532:	06 83       	std	Z+6, r16	; 0x06
    2534:	17 83       	std	Z+7, r17	; 0x07
    2536:	83 e0       	ldi	r24, 0x03	; 3
    2538:	80 83       	st	Z, r24
    253a:	24 81       	ldd	r18, Z+4	; 0x04
    253c:	35 81       	ldd	r19, Z+5	; 0x05
    253e:	46 81       	ldd	r20, Z+6	; 0x06
    2540:	57 81       	ldd	r21, Z+7	; 0x07
    2542:	57 ff       	sbrs	r21, 7
    2544:	1a c0       	rjmp	.+52     	; 0x257a <_fpadd_parts+0x286>
    2546:	c9 01       	movw	r24, r18
    2548:	aa 27       	eor	r26, r26
    254a:	97 fd       	sbrc	r25, 7
    254c:	a0 95       	com	r26
    254e:	ba 2f       	mov	r27, r26
    2550:	81 70       	andi	r24, 0x01	; 1
    2552:	90 70       	andi	r25, 0x00	; 0
    2554:	a0 70       	andi	r26, 0x00	; 0
    2556:	b0 70       	andi	r27, 0x00	; 0
    2558:	56 95       	lsr	r21
    255a:	47 95       	ror	r20
    255c:	37 95       	ror	r19
    255e:	27 95       	ror	r18
    2560:	82 2b       	or	r24, r18
    2562:	93 2b       	or	r25, r19
    2564:	a4 2b       	or	r26, r20
    2566:	b5 2b       	or	r27, r21
    2568:	84 83       	std	Z+4, r24	; 0x04
    256a:	95 83       	std	Z+5, r25	; 0x05
    256c:	a6 83       	std	Z+6, r26	; 0x06
    256e:	b7 83       	std	Z+7, r27	; 0x07
    2570:	82 81       	ldd	r24, Z+2	; 0x02
    2572:	93 81       	ldd	r25, Z+3	; 0x03
    2574:	01 96       	adiw	r24, 0x01	; 1
    2576:	93 83       	std	Z+3, r25	; 0x03
    2578:	82 83       	std	Z+2, r24	; 0x02
    257a:	df 01       	movw	r26, r30
    257c:	01 c0       	rjmp	.+2      	; 0x2580 <_fpadd_parts+0x28c>
    257e:	d2 01       	movw	r26, r4
    2580:	cd 01       	movw	r24, r26
    2582:	cd b7       	in	r28, 0x3d	; 61
    2584:	de b7       	in	r29, 0x3e	; 62
    2586:	e2 e1       	ldi	r30, 0x12	; 18
    2588:	0c 94 b5 25 	jmp	0x4b6a	; 0x4b6a <__epilogue_restores__>

0000258c <__subsf3>:
    258c:	a0 e2       	ldi	r26, 0x20	; 32
    258e:	b0 e0       	ldi	r27, 0x00	; 0
    2590:	ec ec       	ldi	r30, 0xCC	; 204
    2592:	f2 e1       	ldi	r31, 0x12	; 18
    2594:	0c 94 a5 25 	jmp	0x4b4a	; 0x4b4a <__prologue_saves__+0x18>
    2598:	69 83       	std	Y+1, r22	; 0x01
    259a:	7a 83       	std	Y+2, r23	; 0x02
    259c:	8b 83       	std	Y+3, r24	; 0x03
    259e:	9c 83       	std	Y+4, r25	; 0x04
    25a0:	2d 83       	std	Y+5, r18	; 0x05
    25a2:	3e 83       	std	Y+6, r19	; 0x06
    25a4:	4f 83       	std	Y+7, r20	; 0x07
    25a6:	58 87       	std	Y+8, r21	; 0x08
    25a8:	e9 e0       	ldi	r30, 0x09	; 9
    25aa:	ee 2e       	mov	r14, r30
    25ac:	f1 2c       	mov	r15, r1
    25ae:	ec 0e       	add	r14, r28
    25b0:	fd 1e       	adc	r15, r29
    25b2:	ce 01       	movw	r24, r28
    25b4:	01 96       	adiw	r24, 0x01	; 1
    25b6:	b7 01       	movw	r22, r14
    25b8:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    25bc:	8e 01       	movw	r16, r28
    25be:	0f 5e       	subi	r16, 0xEF	; 239
    25c0:	1f 4f       	sbci	r17, 0xFF	; 255
    25c2:	ce 01       	movw	r24, r28
    25c4:	05 96       	adiw	r24, 0x05	; 5
    25c6:	b8 01       	movw	r22, r16
    25c8:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    25cc:	8a 89       	ldd	r24, Y+18	; 0x12
    25ce:	91 e0       	ldi	r25, 0x01	; 1
    25d0:	89 27       	eor	r24, r25
    25d2:	8a 8b       	std	Y+18, r24	; 0x12
    25d4:	c7 01       	movw	r24, r14
    25d6:	b8 01       	movw	r22, r16
    25d8:	ae 01       	movw	r20, r28
    25da:	47 5e       	subi	r20, 0xE7	; 231
    25dc:	5f 4f       	sbci	r21, 0xFF	; 255
    25de:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <_fpadd_parts>
    25e2:	0e 94 d4 16 	call	0x2da8	; 0x2da8 <__pack_f>
    25e6:	a0 96       	adiw	r28, 0x20	; 32
    25e8:	e6 e0       	ldi	r30, 0x06	; 6
    25ea:	0c 94 c1 25 	jmp	0x4b82	; 0x4b82 <__epilogue_restores__+0x18>

000025ee <__addsf3>:
    25ee:	a0 e2       	ldi	r26, 0x20	; 32
    25f0:	b0 e0       	ldi	r27, 0x00	; 0
    25f2:	ed ef       	ldi	r30, 0xFD	; 253
    25f4:	f2 e1       	ldi	r31, 0x12	; 18
    25f6:	0c 94 a5 25 	jmp	0x4b4a	; 0x4b4a <__prologue_saves__+0x18>
    25fa:	69 83       	std	Y+1, r22	; 0x01
    25fc:	7a 83       	std	Y+2, r23	; 0x02
    25fe:	8b 83       	std	Y+3, r24	; 0x03
    2600:	9c 83       	std	Y+4, r25	; 0x04
    2602:	2d 83       	std	Y+5, r18	; 0x05
    2604:	3e 83       	std	Y+6, r19	; 0x06
    2606:	4f 83       	std	Y+7, r20	; 0x07
    2608:	58 87       	std	Y+8, r21	; 0x08
    260a:	f9 e0       	ldi	r31, 0x09	; 9
    260c:	ef 2e       	mov	r14, r31
    260e:	f1 2c       	mov	r15, r1
    2610:	ec 0e       	add	r14, r28
    2612:	fd 1e       	adc	r15, r29
    2614:	ce 01       	movw	r24, r28
    2616:	01 96       	adiw	r24, 0x01	; 1
    2618:	b7 01       	movw	r22, r14
    261a:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    261e:	8e 01       	movw	r16, r28
    2620:	0f 5e       	subi	r16, 0xEF	; 239
    2622:	1f 4f       	sbci	r17, 0xFF	; 255
    2624:	ce 01       	movw	r24, r28
    2626:	05 96       	adiw	r24, 0x05	; 5
    2628:	b8 01       	movw	r22, r16
    262a:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    262e:	c7 01       	movw	r24, r14
    2630:	b8 01       	movw	r22, r16
    2632:	ae 01       	movw	r20, r28
    2634:	47 5e       	subi	r20, 0xE7	; 231
    2636:	5f 4f       	sbci	r21, 0xFF	; 255
    2638:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <_fpadd_parts>
    263c:	0e 94 d4 16 	call	0x2da8	; 0x2da8 <__pack_f>
    2640:	a0 96       	adiw	r28, 0x20	; 32
    2642:	e6 e0       	ldi	r30, 0x06	; 6
    2644:	0c 94 c1 25 	jmp	0x4b82	; 0x4b82 <__epilogue_restores__+0x18>

00002648 <__mulsf3>:
    2648:	a0 e2       	ldi	r26, 0x20	; 32
    264a:	b0 e0       	ldi	r27, 0x00	; 0
    264c:	ea e2       	ldi	r30, 0x2A	; 42
    264e:	f3 e1       	ldi	r31, 0x13	; 19
    2650:	0c 94 99 25 	jmp	0x4b32	; 0x4b32 <__prologue_saves__>
    2654:	69 83       	std	Y+1, r22	; 0x01
    2656:	7a 83       	std	Y+2, r23	; 0x02
    2658:	8b 83       	std	Y+3, r24	; 0x03
    265a:	9c 83       	std	Y+4, r25	; 0x04
    265c:	2d 83       	std	Y+5, r18	; 0x05
    265e:	3e 83       	std	Y+6, r19	; 0x06
    2660:	4f 83       	std	Y+7, r20	; 0x07
    2662:	58 87       	std	Y+8, r21	; 0x08
    2664:	ce 01       	movw	r24, r28
    2666:	01 96       	adiw	r24, 0x01	; 1
    2668:	be 01       	movw	r22, r28
    266a:	67 5f       	subi	r22, 0xF7	; 247
    266c:	7f 4f       	sbci	r23, 0xFF	; 255
    266e:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    2672:	ce 01       	movw	r24, r28
    2674:	05 96       	adiw	r24, 0x05	; 5
    2676:	be 01       	movw	r22, r28
    2678:	6f 5e       	subi	r22, 0xEF	; 239
    267a:	7f 4f       	sbci	r23, 0xFF	; 255
    267c:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    2680:	99 85       	ldd	r25, Y+9	; 0x09
    2682:	92 30       	cpi	r25, 0x02	; 2
    2684:	88 f0       	brcs	.+34     	; 0x26a8 <__mulsf3+0x60>
    2686:	89 89       	ldd	r24, Y+17	; 0x11
    2688:	82 30       	cpi	r24, 0x02	; 2
    268a:	c8 f0       	brcs	.+50     	; 0x26be <__mulsf3+0x76>
    268c:	94 30       	cpi	r25, 0x04	; 4
    268e:	19 f4       	brne	.+6      	; 0x2696 <__mulsf3+0x4e>
    2690:	82 30       	cpi	r24, 0x02	; 2
    2692:	51 f4       	brne	.+20     	; 0x26a8 <__mulsf3+0x60>
    2694:	04 c0       	rjmp	.+8      	; 0x269e <__mulsf3+0x56>
    2696:	84 30       	cpi	r24, 0x04	; 4
    2698:	29 f4       	brne	.+10     	; 0x26a4 <__mulsf3+0x5c>
    269a:	92 30       	cpi	r25, 0x02	; 2
    269c:	81 f4       	brne	.+32     	; 0x26be <__mulsf3+0x76>
    269e:	89 e5       	ldi	r24, 0x59	; 89
    26a0:	91 e0       	ldi	r25, 0x01	; 1
    26a2:	c6 c0       	rjmp	.+396    	; 0x2830 <__mulsf3+0x1e8>
    26a4:	92 30       	cpi	r25, 0x02	; 2
    26a6:	49 f4       	brne	.+18     	; 0x26ba <__mulsf3+0x72>
    26a8:	20 e0       	ldi	r18, 0x00	; 0
    26aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    26ac:	8a 89       	ldd	r24, Y+18	; 0x12
    26ae:	98 13       	cpse	r25, r24
    26b0:	21 e0       	ldi	r18, 0x01	; 1
    26b2:	2a 87       	std	Y+10, r18	; 0x0a
    26b4:	ce 01       	movw	r24, r28
    26b6:	09 96       	adiw	r24, 0x09	; 9
    26b8:	bb c0       	rjmp	.+374    	; 0x2830 <__mulsf3+0x1e8>
    26ba:	82 30       	cpi	r24, 0x02	; 2
    26bc:	49 f4       	brne	.+18     	; 0x26d0 <__mulsf3+0x88>
    26be:	20 e0       	ldi	r18, 0x00	; 0
    26c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    26c2:	8a 89       	ldd	r24, Y+18	; 0x12
    26c4:	98 13       	cpse	r25, r24
    26c6:	21 e0       	ldi	r18, 0x01	; 1
    26c8:	2a 8b       	std	Y+18, r18	; 0x12
    26ca:	ce 01       	movw	r24, r28
    26cc:	41 96       	adiw	r24, 0x11	; 17
    26ce:	b0 c0       	rjmp	.+352    	; 0x2830 <__mulsf3+0x1e8>
    26d0:	2d 84       	ldd	r2, Y+13	; 0x0d
    26d2:	3e 84       	ldd	r3, Y+14	; 0x0e
    26d4:	4f 84       	ldd	r4, Y+15	; 0x0f
    26d6:	58 88       	ldd	r5, Y+16	; 0x10
    26d8:	6d 88       	ldd	r6, Y+21	; 0x15
    26da:	7e 88       	ldd	r7, Y+22	; 0x16
    26dc:	8f 88       	ldd	r8, Y+23	; 0x17
    26de:	98 8c       	ldd	r9, Y+24	; 0x18
    26e0:	ee 24       	eor	r14, r14
    26e2:	ff 24       	eor	r15, r15
    26e4:	87 01       	movw	r16, r14
    26e6:	aa 24       	eor	r10, r10
    26e8:	bb 24       	eor	r11, r11
    26ea:	65 01       	movw	r12, r10
    26ec:	40 e0       	ldi	r20, 0x00	; 0
    26ee:	50 e0       	ldi	r21, 0x00	; 0
    26f0:	60 e0       	ldi	r22, 0x00	; 0
    26f2:	70 e0       	ldi	r23, 0x00	; 0
    26f4:	e0 e0       	ldi	r30, 0x00	; 0
    26f6:	f0 e0       	ldi	r31, 0x00	; 0
    26f8:	c1 01       	movw	r24, r2
    26fa:	81 70       	andi	r24, 0x01	; 1
    26fc:	90 70       	andi	r25, 0x00	; 0
    26fe:	89 2b       	or	r24, r25
    2700:	e9 f0       	breq	.+58     	; 0x273c <__mulsf3+0xf4>
    2702:	e6 0c       	add	r14, r6
    2704:	f7 1c       	adc	r15, r7
    2706:	08 1d       	adc	r16, r8
    2708:	19 1d       	adc	r17, r9
    270a:	9a 01       	movw	r18, r20
    270c:	ab 01       	movw	r20, r22
    270e:	2a 0d       	add	r18, r10
    2710:	3b 1d       	adc	r19, r11
    2712:	4c 1d       	adc	r20, r12
    2714:	5d 1d       	adc	r21, r13
    2716:	80 e0       	ldi	r24, 0x00	; 0
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	a0 e0       	ldi	r26, 0x00	; 0
    271c:	b0 e0       	ldi	r27, 0x00	; 0
    271e:	e6 14       	cp	r14, r6
    2720:	f7 04       	cpc	r15, r7
    2722:	08 05       	cpc	r16, r8
    2724:	19 05       	cpc	r17, r9
    2726:	20 f4       	brcc	.+8      	; 0x2730 <__mulsf3+0xe8>
    2728:	81 e0       	ldi	r24, 0x01	; 1
    272a:	90 e0       	ldi	r25, 0x00	; 0
    272c:	a0 e0       	ldi	r26, 0x00	; 0
    272e:	b0 e0       	ldi	r27, 0x00	; 0
    2730:	ba 01       	movw	r22, r20
    2732:	a9 01       	movw	r20, r18
    2734:	48 0f       	add	r20, r24
    2736:	59 1f       	adc	r21, r25
    2738:	6a 1f       	adc	r22, r26
    273a:	7b 1f       	adc	r23, r27
    273c:	aa 0c       	add	r10, r10
    273e:	bb 1c       	adc	r11, r11
    2740:	cc 1c       	adc	r12, r12
    2742:	dd 1c       	adc	r13, r13
    2744:	97 fe       	sbrs	r9, 7
    2746:	08 c0       	rjmp	.+16     	; 0x2758 <__mulsf3+0x110>
    2748:	81 e0       	ldi	r24, 0x01	; 1
    274a:	90 e0       	ldi	r25, 0x00	; 0
    274c:	a0 e0       	ldi	r26, 0x00	; 0
    274e:	b0 e0       	ldi	r27, 0x00	; 0
    2750:	a8 2a       	or	r10, r24
    2752:	b9 2a       	or	r11, r25
    2754:	ca 2a       	or	r12, r26
    2756:	db 2a       	or	r13, r27
    2758:	31 96       	adiw	r30, 0x01	; 1
    275a:	e0 32       	cpi	r30, 0x20	; 32
    275c:	f1 05       	cpc	r31, r1
    275e:	49 f0       	breq	.+18     	; 0x2772 <__mulsf3+0x12a>
    2760:	66 0c       	add	r6, r6
    2762:	77 1c       	adc	r7, r7
    2764:	88 1c       	adc	r8, r8
    2766:	99 1c       	adc	r9, r9
    2768:	56 94       	lsr	r5
    276a:	47 94       	ror	r4
    276c:	37 94       	ror	r3
    276e:	27 94       	ror	r2
    2770:	c3 cf       	rjmp	.-122    	; 0x26f8 <__mulsf3+0xb0>
    2772:	fa 85       	ldd	r31, Y+10	; 0x0a
    2774:	ea 89       	ldd	r30, Y+18	; 0x12
    2776:	2b 89       	ldd	r18, Y+19	; 0x13
    2778:	3c 89       	ldd	r19, Y+20	; 0x14
    277a:	8b 85       	ldd	r24, Y+11	; 0x0b
    277c:	9c 85       	ldd	r25, Y+12	; 0x0c
    277e:	28 0f       	add	r18, r24
    2780:	39 1f       	adc	r19, r25
    2782:	2e 5f       	subi	r18, 0xFE	; 254
    2784:	3f 4f       	sbci	r19, 0xFF	; 255
    2786:	17 c0       	rjmp	.+46     	; 0x27b6 <__mulsf3+0x16e>
    2788:	ca 01       	movw	r24, r20
    278a:	81 70       	andi	r24, 0x01	; 1
    278c:	90 70       	andi	r25, 0x00	; 0
    278e:	89 2b       	or	r24, r25
    2790:	61 f0       	breq	.+24     	; 0x27aa <__mulsf3+0x162>
    2792:	16 95       	lsr	r17
    2794:	07 95       	ror	r16
    2796:	f7 94       	ror	r15
    2798:	e7 94       	ror	r14
    279a:	80 e0       	ldi	r24, 0x00	; 0
    279c:	90 e0       	ldi	r25, 0x00	; 0
    279e:	a0 e0       	ldi	r26, 0x00	; 0
    27a0:	b0 e8       	ldi	r27, 0x80	; 128
    27a2:	e8 2a       	or	r14, r24
    27a4:	f9 2a       	or	r15, r25
    27a6:	0a 2b       	or	r16, r26
    27a8:	1b 2b       	or	r17, r27
    27aa:	76 95       	lsr	r23
    27ac:	67 95       	ror	r22
    27ae:	57 95       	ror	r21
    27b0:	47 95       	ror	r20
    27b2:	2f 5f       	subi	r18, 0xFF	; 255
    27b4:	3f 4f       	sbci	r19, 0xFF	; 255
    27b6:	77 fd       	sbrc	r23, 7
    27b8:	e7 cf       	rjmp	.-50     	; 0x2788 <__mulsf3+0x140>
    27ba:	0c c0       	rjmp	.+24     	; 0x27d4 <__mulsf3+0x18c>
    27bc:	44 0f       	add	r20, r20
    27be:	55 1f       	adc	r21, r21
    27c0:	66 1f       	adc	r22, r22
    27c2:	77 1f       	adc	r23, r23
    27c4:	17 fd       	sbrc	r17, 7
    27c6:	41 60       	ori	r20, 0x01	; 1
    27c8:	ee 0c       	add	r14, r14
    27ca:	ff 1c       	adc	r15, r15
    27cc:	00 1f       	adc	r16, r16
    27ce:	11 1f       	adc	r17, r17
    27d0:	21 50       	subi	r18, 0x01	; 1
    27d2:	30 40       	sbci	r19, 0x00	; 0
    27d4:	40 30       	cpi	r20, 0x00	; 0
    27d6:	90 e0       	ldi	r25, 0x00	; 0
    27d8:	59 07       	cpc	r21, r25
    27da:	90 e0       	ldi	r25, 0x00	; 0
    27dc:	69 07       	cpc	r22, r25
    27de:	90 e4       	ldi	r25, 0x40	; 64
    27e0:	79 07       	cpc	r23, r25
    27e2:	60 f3       	brcs	.-40     	; 0x27bc <__mulsf3+0x174>
    27e4:	2b 8f       	std	Y+27, r18	; 0x1b
    27e6:	3c 8f       	std	Y+28, r19	; 0x1c
    27e8:	db 01       	movw	r26, r22
    27ea:	ca 01       	movw	r24, r20
    27ec:	8f 77       	andi	r24, 0x7F	; 127
    27ee:	90 70       	andi	r25, 0x00	; 0
    27f0:	a0 70       	andi	r26, 0x00	; 0
    27f2:	b0 70       	andi	r27, 0x00	; 0
    27f4:	80 34       	cpi	r24, 0x40	; 64
    27f6:	91 05       	cpc	r25, r1
    27f8:	a1 05       	cpc	r26, r1
    27fa:	b1 05       	cpc	r27, r1
    27fc:	61 f4       	brne	.+24     	; 0x2816 <__mulsf3+0x1ce>
    27fe:	47 fd       	sbrc	r20, 7
    2800:	0a c0       	rjmp	.+20     	; 0x2816 <__mulsf3+0x1ce>
    2802:	e1 14       	cp	r14, r1
    2804:	f1 04       	cpc	r15, r1
    2806:	01 05       	cpc	r16, r1
    2808:	11 05       	cpc	r17, r1
    280a:	29 f0       	breq	.+10     	; 0x2816 <__mulsf3+0x1ce>
    280c:	40 5c       	subi	r20, 0xC0	; 192
    280e:	5f 4f       	sbci	r21, 0xFF	; 255
    2810:	6f 4f       	sbci	r22, 0xFF	; 255
    2812:	7f 4f       	sbci	r23, 0xFF	; 255
    2814:	40 78       	andi	r20, 0x80	; 128
    2816:	1a 8e       	std	Y+26, r1	; 0x1a
    2818:	fe 17       	cp	r31, r30
    281a:	11 f0       	breq	.+4      	; 0x2820 <__mulsf3+0x1d8>
    281c:	81 e0       	ldi	r24, 0x01	; 1
    281e:	8a 8f       	std	Y+26, r24	; 0x1a
    2820:	4d 8f       	std	Y+29, r20	; 0x1d
    2822:	5e 8f       	std	Y+30, r21	; 0x1e
    2824:	6f 8f       	std	Y+31, r22	; 0x1f
    2826:	78 a3       	std	Y+32, r23	; 0x20
    2828:	83 e0       	ldi	r24, 0x03	; 3
    282a:	89 8f       	std	Y+25, r24	; 0x19
    282c:	ce 01       	movw	r24, r28
    282e:	49 96       	adiw	r24, 0x19	; 25
    2830:	0e 94 d4 16 	call	0x2da8	; 0x2da8 <__pack_f>
    2834:	a0 96       	adiw	r28, 0x20	; 32
    2836:	e2 e1       	ldi	r30, 0x12	; 18
    2838:	0c 94 b5 25 	jmp	0x4b6a	; 0x4b6a <__epilogue_restores__>

0000283c <__divsf3>:
    283c:	a8 e1       	ldi	r26, 0x18	; 24
    283e:	b0 e0       	ldi	r27, 0x00	; 0
    2840:	e4 e2       	ldi	r30, 0x24	; 36
    2842:	f4 e1       	ldi	r31, 0x14	; 20
    2844:	0c 94 a1 25 	jmp	0x4b42	; 0x4b42 <__prologue_saves__+0x10>
    2848:	69 83       	std	Y+1, r22	; 0x01
    284a:	7a 83       	std	Y+2, r23	; 0x02
    284c:	8b 83       	std	Y+3, r24	; 0x03
    284e:	9c 83       	std	Y+4, r25	; 0x04
    2850:	2d 83       	std	Y+5, r18	; 0x05
    2852:	3e 83       	std	Y+6, r19	; 0x06
    2854:	4f 83       	std	Y+7, r20	; 0x07
    2856:	58 87       	std	Y+8, r21	; 0x08
    2858:	b9 e0       	ldi	r27, 0x09	; 9
    285a:	eb 2e       	mov	r14, r27
    285c:	f1 2c       	mov	r15, r1
    285e:	ec 0e       	add	r14, r28
    2860:	fd 1e       	adc	r15, r29
    2862:	ce 01       	movw	r24, r28
    2864:	01 96       	adiw	r24, 0x01	; 1
    2866:	b7 01       	movw	r22, r14
    2868:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    286c:	8e 01       	movw	r16, r28
    286e:	0f 5e       	subi	r16, 0xEF	; 239
    2870:	1f 4f       	sbci	r17, 0xFF	; 255
    2872:	ce 01       	movw	r24, r28
    2874:	05 96       	adiw	r24, 0x05	; 5
    2876:	b8 01       	movw	r22, r16
    2878:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    287c:	29 85       	ldd	r18, Y+9	; 0x09
    287e:	22 30       	cpi	r18, 0x02	; 2
    2880:	08 f4       	brcc	.+2      	; 0x2884 <__divsf3+0x48>
    2882:	7e c0       	rjmp	.+252    	; 0x2980 <__divsf3+0x144>
    2884:	39 89       	ldd	r19, Y+17	; 0x11
    2886:	32 30       	cpi	r19, 0x02	; 2
    2888:	10 f4       	brcc	.+4      	; 0x288e <__divsf3+0x52>
    288a:	b8 01       	movw	r22, r16
    288c:	7c c0       	rjmp	.+248    	; 0x2986 <__divsf3+0x14a>
    288e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2890:	9a 89       	ldd	r25, Y+18	; 0x12
    2892:	89 27       	eor	r24, r25
    2894:	8a 87       	std	Y+10, r24	; 0x0a
    2896:	24 30       	cpi	r18, 0x04	; 4
    2898:	11 f0       	breq	.+4      	; 0x289e <__divsf3+0x62>
    289a:	22 30       	cpi	r18, 0x02	; 2
    289c:	31 f4       	brne	.+12     	; 0x28aa <__divsf3+0x6e>
    289e:	23 17       	cp	r18, r19
    28a0:	09 f0       	breq	.+2      	; 0x28a4 <__divsf3+0x68>
    28a2:	6e c0       	rjmp	.+220    	; 0x2980 <__divsf3+0x144>
    28a4:	69 e5       	ldi	r22, 0x59	; 89
    28a6:	71 e0       	ldi	r23, 0x01	; 1
    28a8:	6e c0       	rjmp	.+220    	; 0x2986 <__divsf3+0x14a>
    28aa:	34 30       	cpi	r19, 0x04	; 4
    28ac:	39 f4       	brne	.+14     	; 0x28bc <__divsf3+0x80>
    28ae:	1d 86       	std	Y+13, r1	; 0x0d
    28b0:	1e 86       	std	Y+14, r1	; 0x0e
    28b2:	1f 86       	std	Y+15, r1	; 0x0f
    28b4:	18 8a       	std	Y+16, r1	; 0x10
    28b6:	1c 86       	std	Y+12, r1	; 0x0c
    28b8:	1b 86       	std	Y+11, r1	; 0x0b
    28ba:	04 c0       	rjmp	.+8      	; 0x28c4 <__divsf3+0x88>
    28bc:	32 30       	cpi	r19, 0x02	; 2
    28be:	21 f4       	brne	.+8      	; 0x28c8 <__divsf3+0x8c>
    28c0:	84 e0       	ldi	r24, 0x04	; 4
    28c2:	89 87       	std	Y+9, r24	; 0x09
    28c4:	b7 01       	movw	r22, r14
    28c6:	5f c0       	rjmp	.+190    	; 0x2986 <__divsf3+0x14a>
    28c8:	2b 85       	ldd	r18, Y+11	; 0x0b
    28ca:	3c 85       	ldd	r19, Y+12	; 0x0c
    28cc:	8b 89       	ldd	r24, Y+19	; 0x13
    28ce:	9c 89       	ldd	r25, Y+20	; 0x14
    28d0:	28 1b       	sub	r18, r24
    28d2:	39 0b       	sbc	r19, r25
    28d4:	3c 87       	std	Y+12, r19	; 0x0c
    28d6:	2b 87       	std	Y+11, r18	; 0x0b
    28d8:	ed 84       	ldd	r14, Y+13	; 0x0d
    28da:	fe 84       	ldd	r15, Y+14	; 0x0e
    28dc:	0f 85       	ldd	r16, Y+15	; 0x0f
    28de:	18 89       	ldd	r17, Y+16	; 0x10
    28e0:	ad 88       	ldd	r10, Y+21	; 0x15
    28e2:	be 88       	ldd	r11, Y+22	; 0x16
    28e4:	cf 88       	ldd	r12, Y+23	; 0x17
    28e6:	d8 8c       	ldd	r13, Y+24	; 0x18
    28e8:	ea 14       	cp	r14, r10
    28ea:	fb 04       	cpc	r15, r11
    28ec:	0c 05       	cpc	r16, r12
    28ee:	1d 05       	cpc	r17, r13
    28f0:	40 f4       	brcc	.+16     	; 0x2902 <__divsf3+0xc6>
    28f2:	ee 0c       	add	r14, r14
    28f4:	ff 1c       	adc	r15, r15
    28f6:	00 1f       	adc	r16, r16
    28f8:	11 1f       	adc	r17, r17
    28fa:	21 50       	subi	r18, 0x01	; 1
    28fc:	30 40       	sbci	r19, 0x00	; 0
    28fe:	3c 87       	std	Y+12, r19	; 0x0c
    2900:	2b 87       	std	Y+11, r18	; 0x0b
    2902:	20 e0       	ldi	r18, 0x00	; 0
    2904:	30 e0       	ldi	r19, 0x00	; 0
    2906:	40 e0       	ldi	r20, 0x00	; 0
    2908:	50 e0       	ldi	r21, 0x00	; 0
    290a:	80 e0       	ldi	r24, 0x00	; 0
    290c:	90 e0       	ldi	r25, 0x00	; 0
    290e:	a0 e0       	ldi	r26, 0x00	; 0
    2910:	b0 e4       	ldi	r27, 0x40	; 64
    2912:	60 e0       	ldi	r22, 0x00	; 0
    2914:	70 e0       	ldi	r23, 0x00	; 0
    2916:	ea 14       	cp	r14, r10
    2918:	fb 04       	cpc	r15, r11
    291a:	0c 05       	cpc	r16, r12
    291c:	1d 05       	cpc	r17, r13
    291e:	40 f0       	brcs	.+16     	; 0x2930 <__divsf3+0xf4>
    2920:	28 2b       	or	r18, r24
    2922:	39 2b       	or	r19, r25
    2924:	4a 2b       	or	r20, r26
    2926:	5b 2b       	or	r21, r27
    2928:	ea 18       	sub	r14, r10
    292a:	fb 08       	sbc	r15, r11
    292c:	0c 09       	sbc	r16, r12
    292e:	1d 09       	sbc	r17, r13
    2930:	b6 95       	lsr	r27
    2932:	a7 95       	ror	r26
    2934:	97 95       	ror	r25
    2936:	87 95       	ror	r24
    2938:	ee 0c       	add	r14, r14
    293a:	ff 1c       	adc	r15, r15
    293c:	00 1f       	adc	r16, r16
    293e:	11 1f       	adc	r17, r17
    2940:	6f 5f       	subi	r22, 0xFF	; 255
    2942:	7f 4f       	sbci	r23, 0xFF	; 255
    2944:	6f 31       	cpi	r22, 0x1F	; 31
    2946:	71 05       	cpc	r23, r1
    2948:	31 f7       	brne	.-52     	; 0x2916 <__divsf3+0xda>
    294a:	da 01       	movw	r26, r20
    294c:	c9 01       	movw	r24, r18
    294e:	8f 77       	andi	r24, 0x7F	; 127
    2950:	90 70       	andi	r25, 0x00	; 0
    2952:	a0 70       	andi	r26, 0x00	; 0
    2954:	b0 70       	andi	r27, 0x00	; 0
    2956:	80 34       	cpi	r24, 0x40	; 64
    2958:	91 05       	cpc	r25, r1
    295a:	a1 05       	cpc	r26, r1
    295c:	b1 05       	cpc	r27, r1
    295e:	61 f4       	brne	.+24     	; 0x2978 <__divsf3+0x13c>
    2960:	27 fd       	sbrc	r18, 7
    2962:	0a c0       	rjmp	.+20     	; 0x2978 <__divsf3+0x13c>
    2964:	e1 14       	cp	r14, r1
    2966:	f1 04       	cpc	r15, r1
    2968:	01 05       	cpc	r16, r1
    296a:	11 05       	cpc	r17, r1
    296c:	29 f0       	breq	.+10     	; 0x2978 <__divsf3+0x13c>
    296e:	20 5c       	subi	r18, 0xC0	; 192
    2970:	3f 4f       	sbci	r19, 0xFF	; 255
    2972:	4f 4f       	sbci	r20, 0xFF	; 255
    2974:	5f 4f       	sbci	r21, 0xFF	; 255
    2976:	20 78       	andi	r18, 0x80	; 128
    2978:	2d 87       	std	Y+13, r18	; 0x0d
    297a:	3e 87       	std	Y+14, r19	; 0x0e
    297c:	4f 87       	std	Y+15, r20	; 0x0f
    297e:	58 8b       	std	Y+16, r21	; 0x10
    2980:	be 01       	movw	r22, r28
    2982:	67 5f       	subi	r22, 0xF7	; 247
    2984:	7f 4f       	sbci	r23, 0xFF	; 255
    2986:	cb 01       	movw	r24, r22
    2988:	0e 94 d4 16 	call	0x2da8	; 0x2da8 <__pack_f>
    298c:	68 96       	adiw	r28, 0x18	; 24
    298e:	ea e0       	ldi	r30, 0x0A	; 10
    2990:	0c 94 bd 25 	jmp	0x4b7a	; 0x4b7a <__epilogue_restores__+0x10>

00002994 <__gtsf2>:
    2994:	a8 e1       	ldi	r26, 0x18	; 24
    2996:	b0 e0       	ldi	r27, 0x00	; 0
    2998:	e0 ed       	ldi	r30, 0xD0	; 208
    299a:	f4 e1       	ldi	r31, 0x14	; 20
    299c:	0c 94 a5 25 	jmp	0x4b4a	; 0x4b4a <__prologue_saves__+0x18>
    29a0:	69 83       	std	Y+1, r22	; 0x01
    29a2:	7a 83       	std	Y+2, r23	; 0x02
    29a4:	8b 83       	std	Y+3, r24	; 0x03
    29a6:	9c 83       	std	Y+4, r25	; 0x04
    29a8:	2d 83       	std	Y+5, r18	; 0x05
    29aa:	3e 83       	std	Y+6, r19	; 0x06
    29ac:	4f 83       	std	Y+7, r20	; 0x07
    29ae:	58 87       	std	Y+8, r21	; 0x08
    29b0:	89 e0       	ldi	r24, 0x09	; 9
    29b2:	e8 2e       	mov	r14, r24
    29b4:	f1 2c       	mov	r15, r1
    29b6:	ec 0e       	add	r14, r28
    29b8:	fd 1e       	adc	r15, r29
    29ba:	ce 01       	movw	r24, r28
    29bc:	01 96       	adiw	r24, 0x01	; 1
    29be:	b7 01       	movw	r22, r14
    29c0:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    29c4:	8e 01       	movw	r16, r28
    29c6:	0f 5e       	subi	r16, 0xEF	; 239
    29c8:	1f 4f       	sbci	r17, 0xFF	; 255
    29ca:	ce 01       	movw	r24, r28
    29cc:	05 96       	adiw	r24, 0x05	; 5
    29ce:	b8 01       	movw	r22, r16
    29d0:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    29d4:	89 85       	ldd	r24, Y+9	; 0x09
    29d6:	82 30       	cpi	r24, 0x02	; 2
    29d8:	40 f0       	brcs	.+16     	; 0x29ea <__gtsf2+0x56>
    29da:	89 89       	ldd	r24, Y+17	; 0x11
    29dc:	82 30       	cpi	r24, 0x02	; 2
    29de:	28 f0       	brcs	.+10     	; 0x29ea <__gtsf2+0x56>
    29e0:	c7 01       	movw	r24, r14
    29e2:	b8 01       	movw	r22, r16
    29e4:	0e 94 21 18 	call	0x3042	; 0x3042 <__fpcmp_parts_f>
    29e8:	01 c0       	rjmp	.+2      	; 0x29ec <__gtsf2+0x58>
    29ea:	8f ef       	ldi	r24, 0xFF	; 255
    29ec:	68 96       	adiw	r28, 0x18	; 24
    29ee:	e6 e0       	ldi	r30, 0x06	; 6
    29f0:	0c 94 c1 25 	jmp	0x4b82	; 0x4b82 <__epilogue_restores__+0x18>

000029f4 <__gesf2>:
    29f4:	a8 e1       	ldi	r26, 0x18	; 24
    29f6:	b0 e0       	ldi	r27, 0x00	; 0
    29f8:	e0 e0       	ldi	r30, 0x00	; 0
    29fa:	f5 e1       	ldi	r31, 0x15	; 21
    29fc:	0c 94 a5 25 	jmp	0x4b4a	; 0x4b4a <__prologue_saves__+0x18>
    2a00:	69 83       	std	Y+1, r22	; 0x01
    2a02:	7a 83       	std	Y+2, r23	; 0x02
    2a04:	8b 83       	std	Y+3, r24	; 0x03
    2a06:	9c 83       	std	Y+4, r25	; 0x04
    2a08:	2d 83       	std	Y+5, r18	; 0x05
    2a0a:	3e 83       	std	Y+6, r19	; 0x06
    2a0c:	4f 83       	std	Y+7, r20	; 0x07
    2a0e:	58 87       	std	Y+8, r21	; 0x08
    2a10:	89 e0       	ldi	r24, 0x09	; 9
    2a12:	e8 2e       	mov	r14, r24
    2a14:	f1 2c       	mov	r15, r1
    2a16:	ec 0e       	add	r14, r28
    2a18:	fd 1e       	adc	r15, r29
    2a1a:	ce 01       	movw	r24, r28
    2a1c:	01 96       	adiw	r24, 0x01	; 1
    2a1e:	b7 01       	movw	r22, r14
    2a20:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    2a24:	8e 01       	movw	r16, r28
    2a26:	0f 5e       	subi	r16, 0xEF	; 239
    2a28:	1f 4f       	sbci	r17, 0xFF	; 255
    2a2a:	ce 01       	movw	r24, r28
    2a2c:	05 96       	adiw	r24, 0x05	; 5
    2a2e:	b8 01       	movw	r22, r16
    2a30:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    2a34:	89 85       	ldd	r24, Y+9	; 0x09
    2a36:	82 30       	cpi	r24, 0x02	; 2
    2a38:	40 f0       	brcs	.+16     	; 0x2a4a <__gesf2+0x56>
    2a3a:	89 89       	ldd	r24, Y+17	; 0x11
    2a3c:	82 30       	cpi	r24, 0x02	; 2
    2a3e:	28 f0       	brcs	.+10     	; 0x2a4a <__gesf2+0x56>
    2a40:	c7 01       	movw	r24, r14
    2a42:	b8 01       	movw	r22, r16
    2a44:	0e 94 21 18 	call	0x3042	; 0x3042 <__fpcmp_parts_f>
    2a48:	01 c0       	rjmp	.+2      	; 0x2a4c <__gesf2+0x58>
    2a4a:	8f ef       	ldi	r24, 0xFF	; 255
    2a4c:	68 96       	adiw	r28, 0x18	; 24
    2a4e:	e6 e0       	ldi	r30, 0x06	; 6
    2a50:	0c 94 c1 25 	jmp	0x4b82	; 0x4b82 <__epilogue_restores__+0x18>

00002a54 <__ltsf2>:
    2a54:	a8 e1       	ldi	r26, 0x18	; 24
    2a56:	b0 e0       	ldi	r27, 0x00	; 0
    2a58:	e0 e3       	ldi	r30, 0x30	; 48
    2a5a:	f5 e1       	ldi	r31, 0x15	; 21
    2a5c:	0c 94 a5 25 	jmp	0x4b4a	; 0x4b4a <__prologue_saves__+0x18>
    2a60:	69 83       	std	Y+1, r22	; 0x01
    2a62:	7a 83       	std	Y+2, r23	; 0x02
    2a64:	8b 83       	std	Y+3, r24	; 0x03
    2a66:	9c 83       	std	Y+4, r25	; 0x04
    2a68:	2d 83       	std	Y+5, r18	; 0x05
    2a6a:	3e 83       	std	Y+6, r19	; 0x06
    2a6c:	4f 83       	std	Y+7, r20	; 0x07
    2a6e:	58 87       	std	Y+8, r21	; 0x08
    2a70:	89 e0       	ldi	r24, 0x09	; 9
    2a72:	e8 2e       	mov	r14, r24
    2a74:	f1 2c       	mov	r15, r1
    2a76:	ec 0e       	add	r14, r28
    2a78:	fd 1e       	adc	r15, r29
    2a7a:	ce 01       	movw	r24, r28
    2a7c:	01 96       	adiw	r24, 0x01	; 1
    2a7e:	b7 01       	movw	r22, r14
    2a80:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    2a84:	8e 01       	movw	r16, r28
    2a86:	0f 5e       	subi	r16, 0xEF	; 239
    2a88:	1f 4f       	sbci	r17, 0xFF	; 255
    2a8a:	ce 01       	movw	r24, r28
    2a8c:	05 96       	adiw	r24, 0x05	; 5
    2a8e:	b8 01       	movw	r22, r16
    2a90:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    2a94:	89 85       	ldd	r24, Y+9	; 0x09
    2a96:	82 30       	cpi	r24, 0x02	; 2
    2a98:	40 f0       	brcs	.+16     	; 0x2aaa <__ltsf2+0x56>
    2a9a:	89 89       	ldd	r24, Y+17	; 0x11
    2a9c:	82 30       	cpi	r24, 0x02	; 2
    2a9e:	28 f0       	brcs	.+10     	; 0x2aaa <__ltsf2+0x56>
    2aa0:	c7 01       	movw	r24, r14
    2aa2:	b8 01       	movw	r22, r16
    2aa4:	0e 94 21 18 	call	0x3042	; 0x3042 <__fpcmp_parts_f>
    2aa8:	01 c0       	rjmp	.+2      	; 0x2aac <__ltsf2+0x58>
    2aaa:	81 e0       	ldi	r24, 0x01	; 1
    2aac:	68 96       	adiw	r28, 0x18	; 24
    2aae:	e6 e0       	ldi	r30, 0x06	; 6
    2ab0:	0c 94 c1 25 	jmp	0x4b82	; 0x4b82 <__epilogue_restores__+0x18>

00002ab4 <__floatsisf>:
    2ab4:	a8 e0       	ldi	r26, 0x08	; 8
    2ab6:	b0 e0       	ldi	r27, 0x00	; 0
    2ab8:	e0 e6       	ldi	r30, 0x60	; 96
    2aba:	f5 e1       	ldi	r31, 0x15	; 21
    2abc:	0c 94 a2 25 	jmp	0x4b44	; 0x4b44 <__prologue_saves__+0x12>
    2ac0:	9b 01       	movw	r18, r22
    2ac2:	ac 01       	movw	r20, r24
    2ac4:	83 e0       	ldi	r24, 0x03	; 3
    2ac6:	89 83       	std	Y+1, r24	; 0x01
    2ac8:	da 01       	movw	r26, r20
    2aca:	c9 01       	movw	r24, r18
    2acc:	88 27       	eor	r24, r24
    2ace:	b7 fd       	sbrc	r27, 7
    2ad0:	83 95       	inc	r24
    2ad2:	99 27       	eor	r25, r25
    2ad4:	aa 27       	eor	r26, r26
    2ad6:	bb 27       	eor	r27, r27
    2ad8:	b8 2e       	mov	r11, r24
    2ada:	21 15       	cp	r18, r1
    2adc:	31 05       	cpc	r19, r1
    2ade:	41 05       	cpc	r20, r1
    2ae0:	51 05       	cpc	r21, r1
    2ae2:	19 f4       	brne	.+6      	; 0x2aea <__floatsisf+0x36>
    2ae4:	82 e0       	ldi	r24, 0x02	; 2
    2ae6:	89 83       	std	Y+1, r24	; 0x01
    2ae8:	3a c0       	rjmp	.+116    	; 0x2b5e <__floatsisf+0xaa>
    2aea:	88 23       	and	r24, r24
    2aec:	a9 f0       	breq	.+42     	; 0x2b18 <__floatsisf+0x64>
    2aee:	20 30       	cpi	r18, 0x00	; 0
    2af0:	80 e0       	ldi	r24, 0x00	; 0
    2af2:	38 07       	cpc	r19, r24
    2af4:	80 e0       	ldi	r24, 0x00	; 0
    2af6:	48 07       	cpc	r20, r24
    2af8:	80 e8       	ldi	r24, 0x80	; 128
    2afa:	58 07       	cpc	r21, r24
    2afc:	29 f4       	brne	.+10     	; 0x2b08 <__floatsisf+0x54>
    2afe:	60 e0       	ldi	r22, 0x00	; 0
    2b00:	70 e0       	ldi	r23, 0x00	; 0
    2b02:	80 e0       	ldi	r24, 0x00	; 0
    2b04:	9f ec       	ldi	r25, 0xCF	; 207
    2b06:	30 c0       	rjmp	.+96     	; 0x2b68 <__floatsisf+0xb4>
    2b08:	ee 24       	eor	r14, r14
    2b0a:	ff 24       	eor	r15, r15
    2b0c:	87 01       	movw	r16, r14
    2b0e:	e2 1a       	sub	r14, r18
    2b10:	f3 0a       	sbc	r15, r19
    2b12:	04 0b       	sbc	r16, r20
    2b14:	15 0b       	sbc	r17, r21
    2b16:	02 c0       	rjmp	.+4      	; 0x2b1c <__floatsisf+0x68>
    2b18:	79 01       	movw	r14, r18
    2b1a:	8a 01       	movw	r16, r20
    2b1c:	8e e1       	ldi	r24, 0x1E	; 30
    2b1e:	c8 2e       	mov	r12, r24
    2b20:	d1 2c       	mov	r13, r1
    2b22:	dc 82       	std	Y+4, r13	; 0x04
    2b24:	cb 82       	std	Y+3, r12	; 0x03
    2b26:	ed 82       	std	Y+5, r14	; 0x05
    2b28:	fe 82       	std	Y+6, r15	; 0x06
    2b2a:	0f 83       	std	Y+7, r16	; 0x07
    2b2c:	18 87       	std	Y+8, r17	; 0x08
    2b2e:	c8 01       	movw	r24, r16
    2b30:	b7 01       	movw	r22, r14
    2b32:	0e 94 85 16 	call	0x2d0a	; 0x2d0a <__clzsi2>
    2b36:	01 97       	sbiw	r24, 0x01	; 1
    2b38:	18 16       	cp	r1, r24
    2b3a:	19 06       	cpc	r1, r25
    2b3c:	84 f4       	brge	.+32     	; 0x2b5e <__floatsisf+0xaa>
    2b3e:	08 2e       	mov	r0, r24
    2b40:	04 c0       	rjmp	.+8      	; 0x2b4a <__floatsisf+0x96>
    2b42:	ee 0c       	add	r14, r14
    2b44:	ff 1c       	adc	r15, r15
    2b46:	00 1f       	adc	r16, r16
    2b48:	11 1f       	adc	r17, r17
    2b4a:	0a 94       	dec	r0
    2b4c:	d2 f7       	brpl	.-12     	; 0x2b42 <__floatsisf+0x8e>
    2b4e:	ed 82       	std	Y+5, r14	; 0x05
    2b50:	fe 82       	std	Y+6, r15	; 0x06
    2b52:	0f 83       	std	Y+7, r16	; 0x07
    2b54:	18 87       	std	Y+8, r17	; 0x08
    2b56:	c8 1a       	sub	r12, r24
    2b58:	d9 0a       	sbc	r13, r25
    2b5a:	dc 82       	std	Y+4, r13	; 0x04
    2b5c:	cb 82       	std	Y+3, r12	; 0x03
    2b5e:	ba 82       	std	Y+2, r11	; 0x02
    2b60:	ce 01       	movw	r24, r28
    2b62:	01 96       	adiw	r24, 0x01	; 1
    2b64:	0e 94 d4 16 	call	0x2da8	; 0x2da8 <__pack_f>
    2b68:	28 96       	adiw	r28, 0x08	; 8
    2b6a:	e9 e0       	ldi	r30, 0x09	; 9
    2b6c:	0c 94 be 25 	jmp	0x4b7c	; 0x4b7c <__epilogue_restores__+0x12>

00002b70 <__fixsfsi>:
    2b70:	ac e0       	ldi	r26, 0x0C	; 12
    2b72:	b0 e0       	ldi	r27, 0x00	; 0
    2b74:	ee eb       	ldi	r30, 0xBE	; 190
    2b76:	f5 e1       	ldi	r31, 0x15	; 21
    2b78:	0c 94 a9 25 	jmp	0x4b52	; 0x4b52 <__prologue_saves__+0x20>
    2b7c:	69 83       	std	Y+1, r22	; 0x01
    2b7e:	7a 83       	std	Y+2, r23	; 0x02
    2b80:	8b 83       	std	Y+3, r24	; 0x03
    2b82:	9c 83       	std	Y+4, r25	; 0x04
    2b84:	ce 01       	movw	r24, r28
    2b86:	01 96       	adiw	r24, 0x01	; 1
    2b88:	be 01       	movw	r22, r28
    2b8a:	6b 5f       	subi	r22, 0xFB	; 251
    2b8c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b8e:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__unpack_f>
    2b92:	8d 81       	ldd	r24, Y+5	; 0x05
    2b94:	82 30       	cpi	r24, 0x02	; 2
    2b96:	61 f1       	breq	.+88     	; 0x2bf0 <__fixsfsi+0x80>
    2b98:	82 30       	cpi	r24, 0x02	; 2
    2b9a:	50 f1       	brcs	.+84     	; 0x2bf0 <__fixsfsi+0x80>
    2b9c:	84 30       	cpi	r24, 0x04	; 4
    2b9e:	21 f4       	brne	.+8      	; 0x2ba8 <__fixsfsi+0x38>
    2ba0:	8e 81       	ldd	r24, Y+6	; 0x06
    2ba2:	88 23       	and	r24, r24
    2ba4:	51 f1       	breq	.+84     	; 0x2bfa <__fixsfsi+0x8a>
    2ba6:	2e c0       	rjmp	.+92     	; 0x2c04 <__fixsfsi+0x94>
    2ba8:	2f 81       	ldd	r18, Y+7	; 0x07
    2baa:	38 85       	ldd	r19, Y+8	; 0x08
    2bac:	37 fd       	sbrc	r19, 7
    2bae:	20 c0       	rjmp	.+64     	; 0x2bf0 <__fixsfsi+0x80>
    2bb0:	6e 81       	ldd	r22, Y+6	; 0x06
    2bb2:	2f 31       	cpi	r18, 0x1F	; 31
    2bb4:	31 05       	cpc	r19, r1
    2bb6:	1c f0       	brlt	.+6      	; 0x2bbe <__fixsfsi+0x4e>
    2bb8:	66 23       	and	r22, r22
    2bba:	f9 f0       	breq	.+62     	; 0x2bfa <__fixsfsi+0x8a>
    2bbc:	23 c0       	rjmp	.+70     	; 0x2c04 <__fixsfsi+0x94>
    2bbe:	8e e1       	ldi	r24, 0x1E	; 30
    2bc0:	90 e0       	ldi	r25, 0x00	; 0
    2bc2:	82 1b       	sub	r24, r18
    2bc4:	93 0b       	sbc	r25, r19
    2bc6:	29 85       	ldd	r18, Y+9	; 0x09
    2bc8:	3a 85       	ldd	r19, Y+10	; 0x0a
    2bca:	4b 85       	ldd	r20, Y+11	; 0x0b
    2bcc:	5c 85       	ldd	r21, Y+12	; 0x0c
    2bce:	04 c0       	rjmp	.+8      	; 0x2bd8 <__fixsfsi+0x68>
    2bd0:	56 95       	lsr	r21
    2bd2:	47 95       	ror	r20
    2bd4:	37 95       	ror	r19
    2bd6:	27 95       	ror	r18
    2bd8:	8a 95       	dec	r24
    2bda:	d2 f7       	brpl	.-12     	; 0x2bd0 <__fixsfsi+0x60>
    2bdc:	66 23       	and	r22, r22
    2bde:	b1 f0       	breq	.+44     	; 0x2c0c <__fixsfsi+0x9c>
    2be0:	50 95       	com	r21
    2be2:	40 95       	com	r20
    2be4:	30 95       	com	r19
    2be6:	21 95       	neg	r18
    2be8:	3f 4f       	sbci	r19, 0xFF	; 255
    2bea:	4f 4f       	sbci	r20, 0xFF	; 255
    2bec:	5f 4f       	sbci	r21, 0xFF	; 255
    2bee:	0e c0       	rjmp	.+28     	; 0x2c0c <__fixsfsi+0x9c>
    2bf0:	20 e0       	ldi	r18, 0x00	; 0
    2bf2:	30 e0       	ldi	r19, 0x00	; 0
    2bf4:	40 e0       	ldi	r20, 0x00	; 0
    2bf6:	50 e0       	ldi	r21, 0x00	; 0
    2bf8:	09 c0       	rjmp	.+18     	; 0x2c0c <__fixsfsi+0x9c>
    2bfa:	2f ef       	ldi	r18, 0xFF	; 255
    2bfc:	3f ef       	ldi	r19, 0xFF	; 255
    2bfe:	4f ef       	ldi	r20, 0xFF	; 255
    2c00:	5f e7       	ldi	r21, 0x7F	; 127
    2c02:	04 c0       	rjmp	.+8      	; 0x2c0c <__fixsfsi+0x9c>
    2c04:	20 e0       	ldi	r18, 0x00	; 0
    2c06:	30 e0       	ldi	r19, 0x00	; 0
    2c08:	40 e0       	ldi	r20, 0x00	; 0
    2c0a:	50 e8       	ldi	r21, 0x80	; 128
    2c0c:	b9 01       	movw	r22, r18
    2c0e:	ca 01       	movw	r24, r20
    2c10:	2c 96       	adiw	r28, 0x0c	; 12
    2c12:	e2 e0       	ldi	r30, 0x02	; 2
    2c14:	0c 94 c5 25 	jmp	0x4b8a	; 0x4b8a <__epilogue_restores__+0x20>

00002c18 <__floatunsisf>:
    2c18:	a8 e0       	ldi	r26, 0x08	; 8
    2c1a:	b0 e0       	ldi	r27, 0x00	; 0
    2c1c:	e2 e1       	ldi	r30, 0x12	; 18
    2c1e:	f6 e1       	ldi	r31, 0x16	; 22
    2c20:	0c 94 a1 25 	jmp	0x4b42	; 0x4b42 <__prologue_saves__+0x10>
    2c24:	7b 01       	movw	r14, r22
    2c26:	8c 01       	movw	r16, r24
    2c28:	61 15       	cp	r22, r1
    2c2a:	71 05       	cpc	r23, r1
    2c2c:	81 05       	cpc	r24, r1
    2c2e:	91 05       	cpc	r25, r1
    2c30:	19 f4       	brne	.+6      	; 0x2c38 <__floatunsisf+0x20>
    2c32:	82 e0       	ldi	r24, 0x02	; 2
    2c34:	89 83       	std	Y+1, r24	; 0x01
    2c36:	60 c0       	rjmp	.+192    	; 0x2cf8 <__floatunsisf+0xe0>
    2c38:	83 e0       	ldi	r24, 0x03	; 3
    2c3a:	89 83       	std	Y+1, r24	; 0x01
    2c3c:	8e e1       	ldi	r24, 0x1E	; 30
    2c3e:	c8 2e       	mov	r12, r24
    2c40:	d1 2c       	mov	r13, r1
    2c42:	dc 82       	std	Y+4, r13	; 0x04
    2c44:	cb 82       	std	Y+3, r12	; 0x03
    2c46:	ed 82       	std	Y+5, r14	; 0x05
    2c48:	fe 82       	std	Y+6, r15	; 0x06
    2c4a:	0f 83       	std	Y+7, r16	; 0x07
    2c4c:	18 87       	std	Y+8, r17	; 0x08
    2c4e:	c8 01       	movw	r24, r16
    2c50:	b7 01       	movw	r22, r14
    2c52:	0e 94 85 16 	call	0x2d0a	; 0x2d0a <__clzsi2>
    2c56:	fc 01       	movw	r30, r24
    2c58:	31 97       	sbiw	r30, 0x01	; 1
    2c5a:	f7 ff       	sbrs	r31, 7
    2c5c:	3b c0       	rjmp	.+118    	; 0x2cd4 <__floatunsisf+0xbc>
    2c5e:	22 27       	eor	r18, r18
    2c60:	33 27       	eor	r19, r19
    2c62:	2e 1b       	sub	r18, r30
    2c64:	3f 0b       	sbc	r19, r31
    2c66:	57 01       	movw	r10, r14
    2c68:	68 01       	movw	r12, r16
    2c6a:	02 2e       	mov	r0, r18
    2c6c:	04 c0       	rjmp	.+8      	; 0x2c76 <__floatunsisf+0x5e>
    2c6e:	d6 94       	lsr	r13
    2c70:	c7 94       	ror	r12
    2c72:	b7 94       	ror	r11
    2c74:	a7 94       	ror	r10
    2c76:	0a 94       	dec	r0
    2c78:	d2 f7       	brpl	.-12     	; 0x2c6e <__floatunsisf+0x56>
    2c7a:	40 e0       	ldi	r20, 0x00	; 0
    2c7c:	50 e0       	ldi	r21, 0x00	; 0
    2c7e:	60 e0       	ldi	r22, 0x00	; 0
    2c80:	70 e0       	ldi	r23, 0x00	; 0
    2c82:	81 e0       	ldi	r24, 0x01	; 1
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	a0 e0       	ldi	r26, 0x00	; 0
    2c88:	b0 e0       	ldi	r27, 0x00	; 0
    2c8a:	04 c0       	rjmp	.+8      	; 0x2c94 <__floatunsisf+0x7c>
    2c8c:	88 0f       	add	r24, r24
    2c8e:	99 1f       	adc	r25, r25
    2c90:	aa 1f       	adc	r26, r26
    2c92:	bb 1f       	adc	r27, r27
    2c94:	2a 95       	dec	r18
    2c96:	d2 f7       	brpl	.-12     	; 0x2c8c <__floatunsisf+0x74>
    2c98:	01 97       	sbiw	r24, 0x01	; 1
    2c9a:	a1 09       	sbc	r26, r1
    2c9c:	b1 09       	sbc	r27, r1
    2c9e:	8e 21       	and	r24, r14
    2ca0:	9f 21       	and	r25, r15
    2ca2:	a0 23       	and	r26, r16
    2ca4:	b1 23       	and	r27, r17
    2ca6:	00 97       	sbiw	r24, 0x00	; 0
    2ca8:	a1 05       	cpc	r26, r1
    2caa:	b1 05       	cpc	r27, r1
    2cac:	21 f0       	breq	.+8      	; 0x2cb6 <__floatunsisf+0x9e>
    2cae:	41 e0       	ldi	r20, 0x01	; 1
    2cb0:	50 e0       	ldi	r21, 0x00	; 0
    2cb2:	60 e0       	ldi	r22, 0x00	; 0
    2cb4:	70 e0       	ldi	r23, 0x00	; 0
    2cb6:	4a 29       	or	r20, r10
    2cb8:	5b 29       	or	r21, r11
    2cba:	6c 29       	or	r22, r12
    2cbc:	7d 29       	or	r23, r13
    2cbe:	4d 83       	std	Y+5, r20	; 0x05
    2cc0:	5e 83       	std	Y+6, r21	; 0x06
    2cc2:	6f 83       	std	Y+7, r22	; 0x07
    2cc4:	78 87       	std	Y+8, r23	; 0x08
    2cc6:	8e e1       	ldi	r24, 0x1E	; 30
    2cc8:	90 e0       	ldi	r25, 0x00	; 0
    2cca:	8e 1b       	sub	r24, r30
    2ccc:	9f 0b       	sbc	r25, r31
    2cce:	9c 83       	std	Y+4, r25	; 0x04
    2cd0:	8b 83       	std	Y+3, r24	; 0x03
    2cd2:	12 c0       	rjmp	.+36     	; 0x2cf8 <__floatunsisf+0xe0>
    2cd4:	30 97       	sbiw	r30, 0x00	; 0
    2cd6:	81 f0       	breq	.+32     	; 0x2cf8 <__floatunsisf+0xe0>
    2cd8:	0e 2e       	mov	r0, r30
    2cda:	04 c0       	rjmp	.+8      	; 0x2ce4 <__floatunsisf+0xcc>
    2cdc:	ee 0c       	add	r14, r14
    2cde:	ff 1c       	adc	r15, r15
    2ce0:	00 1f       	adc	r16, r16
    2ce2:	11 1f       	adc	r17, r17
    2ce4:	0a 94       	dec	r0
    2ce6:	d2 f7       	brpl	.-12     	; 0x2cdc <__floatunsisf+0xc4>
    2ce8:	ed 82       	std	Y+5, r14	; 0x05
    2cea:	fe 82       	std	Y+6, r15	; 0x06
    2cec:	0f 83       	std	Y+7, r16	; 0x07
    2cee:	18 87       	std	Y+8, r17	; 0x08
    2cf0:	ce 1a       	sub	r12, r30
    2cf2:	df 0a       	sbc	r13, r31
    2cf4:	dc 82       	std	Y+4, r13	; 0x04
    2cf6:	cb 82       	std	Y+3, r12	; 0x03
    2cf8:	1a 82       	std	Y+2, r1	; 0x02
    2cfa:	ce 01       	movw	r24, r28
    2cfc:	01 96       	adiw	r24, 0x01	; 1
    2cfe:	0e 94 d4 16 	call	0x2da8	; 0x2da8 <__pack_f>
    2d02:	28 96       	adiw	r28, 0x08	; 8
    2d04:	ea e0       	ldi	r30, 0x0A	; 10
    2d06:	0c 94 bd 25 	jmp	0x4b7a	; 0x4b7a <__epilogue_restores__+0x10>

00002d0a <__clzsi2>:
    2d0a:	ef 92       	push	r14
    2d0c:	ff 92       	push	r15
    2d0e:	0f 93       	push	r16
    2d10:	1f 93       	push	r17
    2d12:	7b 01       	movw	r14, r22
    2d14:	8c 01       	movw	r16, r24
    2d16:	80 e0       	ldi	r24, 0x00	; 0
    2d18:	e8 16       	cp	r14, r24
    2d1a:	80 e0       	ldi	r24, 0x00	; 0
    2d1c:	f8 06       	cpc	r15, r24
    2d1e:	81 e0       	ldi	r24, 0x01	; 1
    2d20:	08 07       	cpc	r16, r24
    2d22:	80 e0       	ldi	r24, 0x00	; 0
    2d24:	18 07       	cpc	r17, r24
    2d26:	88 f4       	brcc	.+34     	; 0x2d4a <__clzsi2+0x40>
    2d28:	8f ef       	ldi	r24, 0xFF	; 255
    2d2a:	e8 16       	cp	r14, r24
    2d2c:	f1 04       	cpc	r15, r1
    2d2e:	01 05       	cpc	r16, r1
    2d30:	11 05       	cpc	r17, r1
    2d32:	31 f0       	breq	.+12     	; 0x2d40 <__clzsi2+0x36>
    2d34:	28 f0       	brcs	.+10     	; 0x2d40 <__clzsi2+0x36>
    2d36:	88 e0       	ldi	r24, 0x08	; 8
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	a0 e0       	ldi	r26, 0x00	; 0
    2d3c:	b0 e0       	ldi	r27, 0x00	; 0
    2d3e:	17 c0       	rjmp	.+46     	; 0x2d6e <__clzsi2+0x64>
    2d40:	80 e0       	ldi	r24, 0x00	; 0
    2d42:	90 e0       	ldi	r25, 0x00	; 0
    2d44:	a0 e0       	ldi	r26, 0x00	; 0
    2d46:	b0 e0       	ldi	r27, 0x00	; 0
    2d48:	12 c0       	rjmp	.+36     	; 0x2d6e <__clzsi2+0x64>
    2d4a:	80 e0       	ldi	r24, 0x00	; 0
    2d4c:	e8 16       	cp	r14, r24
    2d4e:	80 e0       	ldi	r24, 0x00	; 0
    2d50:	f8 06       	cpc	r15, r24
    2d52:	80 e0       	ldi	r24, 0x00	; 0
    2d54:	08 07       	cpc	r16, r24
    2d56:	81 e0       	ldi	r24, 0x01	; 1
    2d58:	18 07       	cpc	r17, r24
    2d5a:	28 f0       	brcs	.+10     	; 0x2d66 <__clzsi2+0x5c>
    2d5c:	88 e1       	ldi	r24, 0x18	; 24
    2d5e:	90 e0       	ldi	r25, 0x00	; 0
    2d60:	a0 e0       	ldi	r26, 0x00	; 0
    2d62:	b0 e0       	ldi	r27, 0x00	; 0
    2d64:	04 c0       	rjmp	.+8      	; 0x2d6e <__clzsi2+0x64>
    2d66:	80 e1       	ldi	r24, 0x10	; 16
    2d68:	90 e0       	ldi	r25, 0x00	; 0
    2d6a:	a0 e0       	ldi	r26, 0x00	; 0
    2d6c:	b0 e0       	ldi	r27, 0x00	; 0
    2d6e:	20 e2       	ldi	r18, 0x20	; 32
    2d70:	30 e0       	ldi	r19, 0x00	; 0
    2d72:	40 e0       	ldi	r20, 0x00	; 0
    2d74:	50 e0       	ldi	r21, 0x00	; 0
    2d76:	28 1b       	sub	r18, r24
    2d78:	39 0b       	sbc	r19, r25
    2d7a:	4a 0b       	sbc	r20, r26
    2d7c:	5b 0b       	sbc	r21, r27
    2d7e:	04 c0       	rjmp	.+8      	; 0x2d88 <__clzsi2+0x7e>
    2d80:	16 95       	lsr	r17
    2d82:	07 95       	ror	r16
    2d84:	f7 94       	ror	r15
    2d86:	e7 94       	ror	r14
    2d88:	8a 95       	dec	r24
    2d8a:	d2 f7       	brpl	.-12     	; 0x2d80 <__clzsi2+0x76>
    2d8c:	f7 01       	movw	r30, r14
    2d8e:	ef 59       	subi	r30, 0x9F	; 159
    2d90:	fe 4f       	sbci	r31, 0xFE	; 254
    2d92:	80 81       	ld	r24, Z
    2d94:	28 1b       	sub	r18, r24
    2d96:	31 09       	sbc	r19, r1
    2d98:	41 09       	sbc	r20, r1
    2d9a:	51 09       	sbc	r21, r1
    2d9c:	c9 01       	movw	r24, r18
    2d9e:	1f 91       	pop	r17
    2da0:	0f 91       	pop	r16
    2da2:	ff 90       	pop	r15
    2da4:	ef 90       	pop	r14
    2da6:	08 95       	ret

00002da8 <__pack_f>:
    2da8:	df 92       	push	r13
    2daa:	ef 92       	push	r14
    2dac:	ff 92       	push	r15
    2dae:	0f 93       	push	r16
    2db0:	1f 93       	push	r17
    2db2:	fc 01       	movw	r30, r24
    2db4:	e4 80       	ldd	r14, Z+4	; 0x04
    2db6:	f5 80       	ldd	r15, Z+5	; 0x05
    2db8:	06 81       	ldd	r16, Z+6	; 0x06
    2dba:	17 81       	ldd	r17, Z+7	; 0x07
    2dbc:	d1 80       	ldd	r13, Z+1	; 0x01
    2dbe:	80 81       	ld	r24, Z
    2dc0:	82 30       	cpi	r24, 0x02	; 2
    2dc2:	48 f4       	brcc	.+18     	; 0x2dd6 <__pack_f+0x2e>
    2dc4:	80 e0       	ldi	r24, 0x00	; 0
    2dc6:	90 e0       	ldi	r25, 0x00	; 0
    2dc8:	a0 e1       	ldi	r26, 0x10	; 16
    2dca:	b0 e0       	ldi	r27, 0x00	; 0
    2dcc:	e8 2a       	or	r14, r24
    2dce:	f9 2a       	or	r15, r25
    2dd0:	0a 2b       	or	r16, r26
    2dd2:	1b 2b       	or	r17, r27
    2dd4:	a5 c0       	rjmp	.+330    	; 0x2f20 <__pack_f+0x178>
    2dd6:	84 30       	cpi	r24, 0x04	; 4
    2dd8:	09 f4       	brne	.+2      	; 0x2ddc <__pack_f+0x34>
    2dda:	9f c0       	rjmp	.+318    	; 0x2f1a <__pack_f+0x172>
    2ddc:	82 30       	cpi	r24, 0x02	; 2
    2dde:	21 f4       	brne	.+8      	; 0x2de8 <__pack_f+0x40>
    2de0:	ee 24       	eor	r14, r14
    2de2:	ff 24       	eor	r15, r15
    2de4:	87 01       	movw	r16, r14
    2de6:	05 c0       	rjmp	.+10     	; 0x2df2 <__pack_f+0x4a>
    2de8:	e1 14       	cp	r14, r1
    2dea:	f1 04       	cpc	r15, r1
    2dec:	01 05       	cpc	r16, r1
    2dee:	11 05       	cpc	r17, r1
    2df0:	19 f4       	brne	.+6      	; 0x2df8 <__pack_f+0x50>
    2df2:	e0 e0       	ldi	r30, 0x00	; 0
    2df4:	f0 e0       	ldi	r31, 0x00	; 0
    2df6:	96 c0       	rjmp	.+300    	; 0x2f24 <__pack_f+0x17c>
    2df8:	62 81       	ldd	r22, Z+2	; 0x02
    2dfa:	73 81       	ldd	r23, Z+3	; 0x03
    2dfc:	9f ef       	ldi	r25, 0xFF	; 255
    2dfe:	62 38       	cpi	r22, 0x82	; 130
    2e00:	79 07       	cpc	r23, r25
    2e02:	0c f0       	brlt	.+2      	; 0x2e06 <__pack_f+0x5e>
    2e04:	5b c0       	rjmp	.+182    	; 0x2ebc <__pack_f+0x114>
    2e06:	22 e8       	ldi	r18, 0x82	; 130
    2e08:	3f ef       	ldi	r19, 0xFF	; 255
    2e0a:	26 1b       	sub	r18, r22
    2e0c:	37 0b       	sbc	r19, r23
    2e0e:	2a 31       	cpi	r18, 0x1A	; 26
    2e10:	31 05       	cpc	r19, r1
    2e12:	2c f0       	brlt	.+10     	; 0x2e1e <__pack_f+0x76>
    2e14:	20 e0       	ldi	r18, 0x00	; 0
    2e16:	30 e0       	ldi	r19, 0x00	; 0
    2e18:	40 e0       	ldi	r20, 0x00	; 0
    2e1a:	50 e0       	ldi	r21, 0x00	; 0
    2e1c:	2a c0       	rjmp	.+84     	; 0x2e72 <__pack_f+0xca>
    2e1e:	b8 01       	movw	r22, r16
    2e20:	a7 01       	movw	r20, r14
    2e22:	02 2e       	mov	r0, r18
    2e24:	04 c0       	rjmp	.+8      	; 0x2e2e <__pack_f+0x86>
    2e26:	76 95       	lsr	r23
    2e28:	67 95       	ror	r22
    2e2a:	57 95       	ror	r21
    2e2c:	47 95       	ror	r20
    2e2e:	0a 94       	dec	r0
    2e30:	d2 f7       	brpl	.-12     	; 0x2e26 <__pack_f+0x7e>
    2e32:	81 e0       	ldi	r24, 0x01	; 1
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	a0 e0       	ldi	r26, 0x00	; 0
    2e38:	b0 e0       	ldi	r27, 0x00	; 0
    2e3a:	04 c0       	rjmp	.+8      	; 0x2e44 <__pack_f+0x9c>
    2e3c:	88 0f       	add	r24, r24
    2e3e:	99 1f       	adc	r25, r25
    2e40:	aa 1f       	adc	r26, r26
    2e42:	bb 1f       	adc	r27, r27
    2e44:	2a 95       	dec	r18
    2e46:	d2 f7       	brpl	.-12     	; 0x2e3c <__pack_f+0x94>
    2e48:	01 97       	sbiw	r24, 0x01	; 1
    2e4a:	a1 09       	sbc	r26, r1
    2e4c:	b1 09       	sbc	r27, r1
    2e4e:	8e 21       	and	r24, r14
    2e50:	9f 21       	and	r25, r15
    2e52:	a0 23       	and	r26, r16
    2e54:	b1 23       	and	r27, r17
    2e56:	00 97       	sbiw	r24, 0x00	; 0
    2e58:	a1 05       	cpc	r26, r1
    2e5a:	b1 05       	cpc	r27, r1
    2e5c:	21 f0       	breq	.+8      	; 0x2e66 <__pack_f+0xbe>
    2e5e:	81 e0       	ldi	r24, 0x01	; 1
    2e60:	90 e0       	ldi	r25, 0x00	; 0
    2e62:	a0 e0       	ldi	r26, 0x00	; 0
    2e64:	b0 e0       	ldi	r27, 0x00	; 0
    2e66:	9a 01       	movw	r18, r20
    2e68:	ab 01       	movw	r20, r22
    2e6a:	28 2b       	or	r18, r24
    2e6c:	39 2b       	or	r19, r25
    2e6e:	4a 2b       	or	r20, r26
    2e70:	5b 2b       	or	r21, r27
    2e72:	da 01       	movw	r26, r20
    2e74:	c9 01       	movw	r24, r18
    2e76:	8f 77       	andi	r24, 0x7F	; 127
    2e78:	90 70       	andi	r25, 0x00	; 0
    2e7a:	a0 70       	andi	r26, 0x00	; 0
    2e7c:	b0 70       	andi	r27, 0x00	; 0
    2e7e:	80 34       	cpi	r24, 0x40	; 64
    2e80:	91 05       	cpc	r25, r1
    2e82:	a1 05       	cpc	r26, r1
    2e84:	b1 05       	cpc	r27, r1
    2e86:	39 f4       	brne	.+14     	; 0x2e96 <__pack_f+0xee>
    2e88:	27 ff       	sbrs	r18, 7
    2e8a:	09 c0       	rjmp	.+18     	; 0x2e9e <__pack_f+0xf6>
    2e8c:	20 5c       	subi	r18, 0xC0	; 192
    2e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    2e90:	4f 4f       	sbci	r20, 0xFF	; 255
    2e92:	5f 4f       	sbci	r21, 0xFF	; 255
    2e94:	04 c0       	rjmp	.+8      	; 0x2e9e <__pack_f+0xf6>
    2e96:	21 5c       	subi	r18, 0xC1	; 193
    2e98:	3f 4f       	sbci	r19, 0xFF	; 255
    2e9a:	4f 4f       	sbci	r20, 0xFF	; 255
    2e9c:	5f 4f       	sbci	r21, 0xFF	; 255
    2e9e:	e0 e0       	ldi	r30, 0x00	; 0
    2ea0:	f0 e0       	ldi	r31, 0x00	; 0
    2ea2:	20 30       	cpi	r18, 0x00	; 0
    2ea4:	a0 e0       	ldi	r26, 0x00	; 0
    2ea6:	3a 07       	cpc	r19, r26
    2ea8:	a0 e0       	ldi	r26, 0x00	; 0
    2eaa:	4a 07       	cpc	r20, r26
    2eac:	a0 e4       	ldi	r26, 0x40	; 64
    2eae:	5a 07       	cpc	r21, r26
    2eb0:	10 f0       	brcs	.+4      	; 0x2eb6 <__pack_f+0x10e>
    2eb2:	e1 e0       	ldi	r30, 0x01	; 1
    2eb4:	f0 e0       	ldi	r31, 0x00	; 0
    2eb6:	79 01       	movw	r14, r18
    2eb8:	8a 01       	movw	r16, r20
    2eba:	27 c0       	rjmp	.+78     	; 0x2f0a <__pack_f+0x162>
    2ebc:	60 38       	cpi	r22, 0x80	; 128
    2ebe:	71 05       	cpc	r23, r1
    2ec0:	64 f5       	brge	.+88     	; 0x2f1a <__pack_f+0x172>
    2ec2:	fb 01       	movw	r30, r22
    2ec4:	e1 58       	subi	r30, 0x81	; 129
    2ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec8:	d8 01       	movw	r26, r16
    2eca:	c7 01       	movw	r24, r14
    2ecc:	8f 77       	andi	r24, 0x7F	; 127
    2ece:	90 70       	andi	r25, 0x00	; 0
    2ed0:	a0 70       	andi	r26, 0x00	; 0
    2ed2:	b0 70       	andi	r27, 0x00	; 0
    2ed4:	80 34       	cpi	r24, 0x40	; 64
    2ed6:	91 05       	cpc	r25, r1
    2ed8:	a1 05       	cpc	r26, r1
    2eda:	b1 05       	cpc	r27, r1
    2edc:	39 f4       	brne	.+14     	; 0x2eec <__pack_f+0x144>
    2ede:	e7 fe       	sbrs	r14, 7
    2ee0:	0d c0       	rjmp	.+26     	; 0x2efc <__pack_f+0x154>
    2ee2:	80 e4       	ldi	r24, 0x40	; 64
    2ee4:	90 e0       	ldi	r25, 0x00	; 0
    2ee6:	a0 e0       	ldi	r26, 0x00	; 0
    2ee8:	b0 e0       	ldi	r27, 0x00	; 0
    2eea:	04 c0       	rjmp	.+8      	; 0x2ef4 <__pack_f+0x14c>
    2eec:	8f e3       	ldi	r24, 0x3F	; 63
    2eee:	90 e0       	ldi	r25, 0x00	; 0
    2ef0:	a0 e0       	ldi	r26, 0x00	; 0
    2ef2:	b0 e0       	ldi	r27, 0x00	; 0
    2ef4:	e8 0e       	add	r14, r24
    2ef6:	f9 1e       	adc	r15, r25
    2ef8:	0a 1f       	adc	r16, r26
    2efa:	1b 1f       	adc	r17, r27
    2efc:	17 ff       	sbrs	r17, 7
    2efe:	05 c0       	rjmp	.+10     	; 0x2f0a <__pack_f+0x162>
    2f00:	16 95       	lsr	r17
    2f02:	07 95       	ror	r16
    2f04:	f7 94       	ror	r15
    2f06:	e7 94       	ror	r14
    2f08:	31 96       	adiw	r30, 0x01	; 1
    2f0a:	87 e0       	ldi	r24, 0x07	; 7
    2f0c:	16 95       	lsr	r17
    2f0e:	07 95       	ror	r16
    2f10:	f7 94       	ror	r15
    2f12:	e7 94       	ror	r14
    2f14:	8a 95       	dec	r24
    2f16:	d1 f7       	brne	.-12     	; 0x2f0c <__pack_f+0x164>
    2f18:	05 c0       	rjmp	.+10     	; 0x2f24 <__pack_f+0x17c>
    2f1a:	ee 24       	eor	r14, r14
    2f1c:	ff 24       	eor	r15, r15
    2f1e:	87 01       	movw	r16, r14
    2f20:	ef ef       	ldi	r30, 0xFF	; 255
    2f22:	f0 e0       	ldi	r31, 0x00	; 0
    2f24:	6e 2f       	mov	r22, r30
    2f26:	67 95       	ror	r22
    2f28:	66 27       	eor	r22, r22
    2f2a:	67 95       	ror	r22
    2f2c:	90 2f       	mov	r25, r16
    2f2e:	9f 77       	andi	r25, 0x7F	; 127
    2f30:	d7 94       	ror	r13
    2f32:	dd 24       	eor	r13, r13
    2f34:	d7 94       	ror	r13
    2f36:	8e 2f       	mov	r24, r30
    2f38:	86 95       	lsr	r24
    2f3a:	49 2f       	mov	r20, r25
    2f3c:	46 2b       	or	r20, r22
    2f3e:	58 2f       	mov	r21, r24
    2f40:	5d 29       	or	r21, r13
    2f42:	b7 01       	movw	r22, r14
    2f44:	ca 01       	movw	r24, r20
    2f46:	1f 91       	pop	r17
    2f48:	0f 91       	pop	r16
    2f4a:	ff 90       	pop	r15
    2f4c:	ef 90       	pop	r14
    2f4e:	df 90       	pop	r13
    2f50:	08 95       	ret

00002f52 <__unpack_f>:
    2f52:	fc 01       	movw	r30, r24
    2f54:	db 01       	movw	r26, r22
    2f56:	40 81       	ld	r20, Z
    2f58:	51 81       	ldd	r21, Z+1	; 0x01
    2f5a:	22 81       	ldd	r18, Z+2	; 0x02
    2f5c:	62 2f       	mov	r22, r18
    2f5e:	6f 77       	andi	r22, 0x7F	; 127
    2f60:	70 e0       	ldi	r23, 0x00	; 0
    2f62:	22 1f       	adc	r18, r18
    2f64:	22 27       	eor	r18, r18
    2f66:	22 1f       	adc	r18, r18
    2f68:	93 81       	ldd	r25, Z+3	; 0x03
    2f6a:	89 2f       	mov	r24, r25
    2f6c:	88 0f       	add	r24, r24
    2f6e:	82 2b       	or	r24, r18
    2f70:	28 2f       	mov	r18, r24
    2f72:	30 e0       	ldi	r19, 0x00	; 0
    2f74:	99 1f       	adc	r25, r25
    2f76:	99 27       	eor	r25, r25
    2f78:	99 1f       	adc	r25, r25
    2f7a:	11 96       	adiw	r26, 0x01	; 1
    2f7c:	9c 93       	st	X, r25
    2f7e:	11 97       	sbiw	r26, 0x01	; 1
    2f80:	21 15       	cp	r18, r1
    2f82:	31 05       	cpc	r19, r1
    2f84:	a9 f5       	brne	.+106    	; 0x2ff0 <__unpack_f+0x9e>
    2f86:	41 15       	cp	r20, r1
    2f88:	51 05       	cpc	r21, r1
    2f8a:	61 05       	cpc	r22, r1
    2f8c:	71 05       	cpc	r23, r1
    2f8e:	11 f4       	brne	.+4      	; 0x2f94 <__unpack_f+0x42>
    2f90:	82 e0       	ldi	r24, 0x02	; 2
    2f92:	37 c0       	rjmp	.+110    	; 0x3002 <__unpack_f+0xb0>
    2f94:	82 e8       	ldi	r24, 0x82	; 130
    2f96:	9f ef       	ldi	r25, 0xFF	; 255
    2f98:	13 96       	adiw	r26, 0x03	; 3
    2f9a:	9c 93       	st	X, r25
    2f9c:	8e 93       	st	-X, r24
    2f9e:	12 97       	sbiw	r26, 0x02	; 2
    2fa0:	9a 01       	movw	r18, r20
    2fa2:	ab 01       	movw	r20, r22
    2fa4:	67 e0       	ldi	r22, 0x07	; 7
    2fa6:	22 0f       	add	r18, r18
    2fa8:	33 1f       	adc	r19, r19
    2faa:	44 1f       	adc	r20, r20
    2fac:	55 1f       	adc	r21, r21
    2fae:	6a 95       	dec	r22
    2fb0:	d1 f7       	brne	.-12     	; 0x2fa6 <__unpack_f+0x54>
    2fb2:	83 e0       	ldi	r24, 0x03	; 3
    2fb4:	8c 93       	st	X, r24
    2fb6:	0d c0       	rjmp	.+26     	; 0x2fd2 <__unpack_f+0x80>
    2fb8:	22 0f       	add	r18, r18
    2fba:	33 1f       	adc	r19, r19
    2fbc:	44 1f       	adc	r20, r20
    2fbe:	55 1f       	adc	r21, r21
    2fc0:	12 96       	adiw	r26, 0x02	; 2
    2fc2:	8d 91       	ld	r24, X+
    2fc4:	9c 91       	ld	r25, X
    2fc6:	13 97       	sbiw	r26, 0x03	; 3
    2fc8:	01 97       	sbiw	r24, 0x01	; 1
    2fca:	13 96       	adiw	r26, 0x03	; 3
    2fcc:	9c 93       	st	X, r25
    2fce:	8e 93       	st	-X, r24
    2fd0:	12 97       	sbiw	r26, 0x02	; 2
    2fd2:	20 30       	cpi	r18, 0x00	; 0
    2fd4:	80 e0       	ldi	r24, 0x00	; 0
    2fd6:	38 07       	cpc	r19, r24
    2fd8:	80 e0       	ldi	r24, 0x00	; 0
    2fda:	48 07       	cpc	r20, r24
    2fdc:	80 e4       	ldi	r24, 0x40	; 64
    2fde:	58 07       	cpc	r21, r24
    2fe0:	58 f3       	brcs	.-42     	; 0x2fb8 <__unpack_f+0x66>
    2fe2:	14 96       	adiw	r26, 0x04	; 4
    2fe4:	2d 93       	st	X+, r18
    2fe6:	3d 93       	st	X+, r19
    2fe8:	4d 93       	st	X+, r20
    2fea:	5c 93       	st	X, r21
    2fec:	17 97       	sbiw	r26, 0x07	; 7
    2fee:	08 95       	ret
    2ff0:	2f 3f       	cpi	r18, 0xFF	; 255
    2ff2:	31 05       	cpc	r19, r1
    2ff4:	79 f4       	brne	.+30     	; 0x3014 <__unpack_f+0xc2>
    2ff6:	41 15       	cp	r20, r1
    2ff8:	51 05       	cpc	r21, r1
    2ffa:	61 05       	cpc	r22, r1
    2ffc:	71 05       	cpc	r23, r1
    2ffe:	19 f4       	brne	.+6      	; 0x3006 <__unpack_f+0xb4>
    3000:	84 e0       	ldi	r24, 0x04	; 4
    3002:	8c 93       	st	X, r24
    3004:	08 95       	ret
    3006:	64 ff       	sbrs	r22, 4
    3008:	03 c0       	rjmp	.+6      	; 0x3010 <__unpack_f+0xbe>
    300a:	81 e0       	ldi	r24, 0x01	; 1
    300c:	8c 93       	st	X, r24
    300e:	12 c0       	rjmp	.+36     	; 0x3034 <__unpack_f+0xe2>
    3010:	1c 92       	st	X, r1
    3012:	10 c0       	rjmp	.+32     	; 0x3034 <__unpack_f+0xe2>
    3014:	2f 57       	subi	r18, 0x7F	; 127
    3016:	30 40       	sbci	r19, 0x00	; 0
    3018:	13 96       	adiw	r26, 0x03	; 3
    301a:	3c 93       	st	X, r19
    301c:	2e 93       	st	-X, r18
    301e:	12 97       	sbiw	r26, 0x02	; 2
    3020:	83 e0       	ldi	r24, 0x03	; 3
    3022:	8c 93       	st	X, r24
    3024:	87 e0       	ldi	r24, 0x07	; 7
    3026:	44 0f       	add	r20, r20
    3028:	55 1f       	adc	r21, r21
    302a:	66 1f       	adc	r22, r22
    302c:	77 1f       	adc	r23, r23
    302e:	8a 95       	dec	r24
    3030:	d1 f7       	brne	.-12     	; 0x3026 <__unpack_f+0xd4>
    3032:	70 64       	ori	r23, 0x40	; 64
    3034:	14 96       	adiw	r26, 0x04	; 4
    3036:	4d 93       	st	X+, r20
    3038:	5d 93       	st	X+, r21
    303a:	6d 93       	st	X+, r22
    303c:	7c 93       	st	X, r23
    303e:	17 97       	sbiw	r26, 0x07	; 7
    3040:	08 95       	ret

00003042 <__fpcmp_parts_f>:
    3042:	1f 93       	push	r17
    3044:	dc 01       	movw	r26, r24
    3046:	fb 01       	movw	r30, r22
    3048:	9c 91       	ld	r25, X
    304a:	92 30       	cpi	r25, 0x02	; 2
    304c:	08 f4       	brcc	.+2      	; 0x3050 <__fpcmp_parts_f+0xe>
    304e:	47 c0       	rjmp	.+142    	; 0x30de <__fpcmp_parts_f+0x9c>
    3050:	80 81       	ld	r24, Z
    3052:	82 30       	cpi	r24, 0x02	; 2
    3054:	08 f4       	brcc	.+2      	; 0x3058 <__fpcmp_parts_f+0x16>
    3056:	43 c0       	rjmp	.+134    	; 0x30de <__fpcmp_parts_f+0x9c>
    3058:	94 30       	cpi	r25, 0x04	; 4
    305a:	51 f4       	brne	.+20     	; 0x3070 <__fpcmp_parts_f+0x2e>
    305c:	11 96       	adiw	r26, 0x01	; 1
    305e:	1c 91       	ld	r17, X
    3060:	84 30       	cpi	r24, 0x04	; 4
    3062:	99 f5       	brne	.+102    	; 0x30ca <__fpcmp_parts_f+0x88>
    3064:	81 81       	ldd	r24, Z+1	; 0x01
    3066:	68 2f       	mov	r22, r24
    3068:	70 e0       	ldi	r23, 0x00	; 0
    306a:	61 1b       	sub	r22, r17
    306c:	71 09       	sbc	r23, r1
    306e:	3f c0       	rjmp	.+126    	; 0x30ee <__fpcmp_parts_f+0xac>
    3070:	84 30       	cpi	r24, 0x04	; 4
    3072:	21 f0       	breq	.+8      	; 0x307c <__fpcmp_parts_f+0x3a>
    3074:	92 30       	cpi	r25, 0x02	; 2
    3076:	31 f4       	brne	.+12     	; 0x3084 <__fpcmp_parts_f+0x42>
    3078:	82 30       	cpi	r24, 0x02	; 2
    307a:	b9 f1       	breq	.+110    	; 0x30ea <__fpcmp_parts_f+0xa8>
    307c:	81 81       	ldd	r24, Z+1	; 0x01
    307e:	88 23       	and	r24, r24
    3080:	89 f1       	breq	.+98     	; 0x30e4 <__fpcmp_parts_f+0xa2>
    3082:	2d c0       	rjmp	.+90     	; 0x30de <__fpcmp_parts_f+0x9c>
    3084:	11 96       	adiw	r26, 0x01	; 1
    3086:	1c 91       	ld	r17, X
    3088:	11 97       	sbiw	r26, 0x01	; 1
    308a:	82 30       	cpi	r24, 0x02	; 2
    308c:	f1 f0       	breq	.+60     	; 0x30ca <__fpcmp_parts_f+0x88>
    308e:	81 81       	ldd	r24, Z+1	; 0x01
    3090:	18 17       	cp	r17, r24
    3092:	d9 f4       	brne	.+54     	; 0x30ca <__fpcmp_parts_f+0x88>
    3094:	12 96       	adiw	r26, 0x02	; 2
    3096:	2d 91       	ld	r18, X+
    3098:	3c 91       	ld	r19, X
    309a:	13 97       	sbiw	r26, 0x03	; 3
    309c:	82 81       	ldd	r24, Z+2	; 0x02
    309e:	93 81       	ldd	r25, Z+3	; 0x03
    30a0:	82 17       	cp	r24, r18
    30a2:	93 07       	cpc	r25, r19
    30a4:	94 f0       	brlt	.+36     	; 0x30ca <__fpcmp_parts_f+0x88>
    30a6:	28 17       	cp	r18, r24
    30a8:	39 07       	cpc	r19, r25
    30aa:	bc f0       	brlt	.+46     	; 0x30da <__fpcmp_parts_f+0x98>
    30ac:	14 96       	adiw	r26, 0x04	; 4
    30ae:	8d 91       	ld	r24, X+
    30b0:	9d 91       	ld	r25, X+
    30b2:	0d 90       	ld	r0, X+
    30b4:	bc 91       	ld	r27, X
    30b6:	a0 2d       	mov	r26, r0
    30b8:	24 81       	ldd	r18, Z+4	; 0x04
    30ba:	35 81       	ldd	r19, Z+5	; 0x05
    30bc:	46 81       	ldd	r20, Z+6	; 0x06
    30be:	57 81       	ldd	r21, Z+7	; 0x07
    30c0:	28 17       	cp	r18, r24
    30c2:	39 07       	cpc	r19, r25
    30c4:	4a 07       	cpc	r20, r26
    30c6:	5b 07       	cpc	r21, r27
    30c8:	18 f4       	brcc	.+6      	; 0x30d0 <__fpcmp_parts_f+0x8e>
    30ca:	11 23       	and	r17, r17
    30cc:	41 f0       	breq	.+16     	; 0x30de <__fpcmp_parts_f+0x9c>
    30ce:	0a c0       	rjmp	.+20     	; 0x30e4 <__fpcmp_parts_f+0xa2>
    30d0:	82 17       	cp	r24, r18
    30d2:	93 07       	cpc	r25, r19
    30d4:	a4 07       	cpc	r26, r20
    30d6:	b5 07       	cpc	r27, r21
    30d8:	40 f4       	brcc	.+16     	; 0x30ea <__fpcmp_parts_f+0xa8>
    30da:	11 23       	and	r17, r17
    30dc:	19 f0       	breq	.+6      	; 0x30e4 <__fpcmp_parts_f+0xa2>
    30de:	61 e0       	ldi	r22, 0x01	; 1
    30e0:	70 e0       	ldi	r23, 0x00	; 0
    30e2:	05 c0       	rjmp	.+10     	; 0x30ee <__fpcmp_parts_f+0xac>
    30e4:	6f ef       	ldi	r22, 0xFF	; 255
    30e6:	7f ef       	ldi	r23, 0xFF	; 255
    30e8:	02 c0       	rjmp	.+4      	; 0x30ee <__fpcmp_parts_f+0xac>
    30ea:	60 e0       	ldi	r22, 0x00	; 0
    30ec:	70 e0       	ldi	r23, 0x00	; 0
    30ee:	cb 01       	movw	r24, r22
    30f0:	1f 91       	pop	r17
    30f2:	08 95       	ret

000030f4 <__vector_18>:
    30f4:	1f 92       	push	r1
    30f6:	0f 92       	push	r0
    30f8:	0f b6       	in	r0, 0x3f	; 63
    30fa:	0f 92       	push	r0
    30fc:	11 24       	eor	r1, r1
    30fe:	2f 93       	push	r18
    3100:	3f 93       	push	r19
    3102:	4f 93       	push	r20
    3104:	8f 93       	push	r24
    3106:	9f 93       	push	r25
    3108:	ef 93       	push	r30
    310a:	ff 93       	push	r31
    310c:	40 91 c6 00 	lds	r20, 0x00C6
    3110:	e0 91 c3 03 	lds	r30, 0x03C3
    3114:	f0 91 c4 03 	lds	r31, 0x03C4
    3118:	31 96       	adiw	r30, 0x01	; 1
    311a:	9f 01       	movw	r18, r30
    311c:	2f 77       	andi	r18, 0x7F	; 127
    311e:	30 70       	andi	r19, 0x00	; 0
    3120:	31 97       	sbiw	r30, 0x01	; 1
    3122:	80 91 c5 03 	lds	r24, 0x03C5
    3126:	90 91 c6 03 	lds	r25, 0x03C6
    312a:	28 17       	cp	r18, r24
    312c:	39 07       	cpc	r19, r25
    312e:	39 f0       	breq	.+14     	; 0x313e <__vector_18+0x4a>
    3130:	ed 5b       	subi	r30, 0xBD	; 189
    3132:	fc 4f       	sbci	r31, 0xFC	; 252
    3134:	40 83       	st	Z, r20
    3136:	30 93 c4 03 	sts	0x03C4, r19
    313a:	20 93 c3 03 	sts	0x03C3, r18
    313e:	ff 91       	pop	r31
    3140:	ef 91       	pop	r30
    3142:	9f 91       	pop	r25
    3144:	8f 91       	pop	r24
    3146:	4f 91       	pop	r20
    3148:	3f 91       	pop	r19
    314a:	2f 91       	pop	r18
    314c:	0f 90       	pop	r0
    314e:	0f be       	out	0x3f, r0	; 63
    3150:	0f 90       	pop	r0
    3152:	1f 90       	pop	r1
    3154:	18 95       	reti

00003156 <_ZN14HardwareSerialC2EP11ring_bufferPVhS3_S3_S3_S3_hhhhh>:
    3156:	8f 92       	push	r8
    3158:	af 92       	push	r10
    315a:	cf 92       	push	r12
    315c:	df 92       	push	r13
    315e:	ef 92       	push	r14
    3160:	ff 92       	push	r15
    3162:	0f 93       	push	r16
    3164:	1f 93       	push	r17
    3166:	df 93       	push	r29
    3168:	cf 93       	push	r28
    316a:	cd b7       	in	r28, 0x3d	; 61
    316c:	de b7       	in	r29, 0x3e	; 62
    316e:	fc 01       	movw	r30, r24
    3170:	8b e6       	ldi	r24, 0x6B	; 107
    3172:	92 e0       	ldi	r25, 0x02	; 2
    3174:	91 83       	std	Z+1, r25	; 0x01
    3176:	80 83       	st	Z, r24
    3178:	73 83       	std	Z+3, r23	; 0x03
    317a:	62 83       	std	Z+2, r22	; 0x02
    317c:	55 83       	std	Z+5, r21	; 0x05
    317e:	44 83       	std	Z+4, r20	; 0x04
    3180:	37 83       	std	Z+7, r19	; 0x07
    3182:	26 83       	std	Z+6, r18	; 0x06
    3184:	11 87       	std	Z+9, r17	; 0x09
    3186:	00 87       	std	Z+8, r16	; 0x08
    3188:	f3 86       	std	Z+11, r15	; 0x0b
    318a:	e2 86       	std	Z+10, r14	; 0x0a
    318c:	d5 86       	std	Z+13, r13	; 0x0d
    318e:	c4 86       	std	Z+12, r12	; 0x0c
    3190:	a6 86       	std	Z+14, r10	; 0x0e
    3192:	87 86       	std	Z+15, r8	; 0x0f
    3194:	8d 85       	ldd	r24, Y+13	; 0x0d
    3196:	80 8b       	std	Z+16, r24	; 0x10
    3198:	8e 85       	ldd	r24, Y+14	; 0x0e
    319a:	81 8b       	std	Z+17, r24	; 0x11
    319c:	8f 85       	ldd	r24, Y+15	; 0x0f
    319e:	82 8b       	std	Z+18, r24	; 0x12
    31a0:	cf 91       	pop	r28
    31a2:	df 91       	pop	r29
    31a4:	1f 91       	pop	r17
    31a6:	0f 91       	pop	r16
    31a8:	ff 90       	pop	r15
    31aa:	ef 90       	pop	r14
    31ac:	df 90       	pop	r13
    31ae:	cf 90       	pop	r12
    31b0:	af 90       	pop	r10
    31b2:	8f 90       	pop	r8
    31b4:	08 95       	ret

000031b6 <_ZN14HardwareSerialC1EP11ring_bufferPVhS3_S3_S3_S3_hhhhh>:
    31b6:	8f 92       	push	r8
    31b8:	af 92       	push	r10
    31ba:	cf 92       	push	r12
    31bc:	df 92       	push	r13
    31be:	ef 92       	push	r14
    31c0:	ff 92       	push	r15
    31c2:	0f 93       	push	r16
    31c4:	1f 93       	push	r17
    31c6:	df 93       	push	r29
    31c8:	cf 93       	push	r28
    31ca:	cd b7       	in	r28, 0x3d	; 61
    31cc:	de b7       	in	r29, 0x3e	; 62
    31ce:	fc 01       	movw	r30, r24
    31d0:	8b e6       	ldi	r24, 0x6B	; 107
    31d2:	92 e0       	ldi	r25, 0x02	; 2
    31d4:	91 83       	std	Z+1, r25	; 0x01
    31d6:	80 83       	st	Z, r24
    31d8:	73 83       	std	Z+3, r23	; 0x03
    31da:	62 83       	std	Z+2, r22	; 0x02
    31dc:	55 83       	std	Z+5, r21	; 0x05
    31de:	44 83       	std	Z+4, r20	; 0x04
    31e0:	37 83       	std	Z+7, r19	; 0x07
    31e2:	26 83       	std	Z+6, r18	; 0x06
    31e4:	11 87       	std	Z+9, r17	; 0x09
    31e6:	00 87       	std	Z+8, r16	; 0x08
    31e8:	f3 86       	std	Z+11, r15	; 0x0b
    31ea:	e2 86       	std	Z+10, r14	; 0x0a
    31ec:	d5 86       	std	Z+13, r13	; 0x0d
    31ee:	c4 86       	std	Z+12, r12	; 0x0c
    31f0:	a6 86       	std	Z+14, r10	; 0x0e
    31f2:	87 86       	std	Z+15, r8	; 0x0f
    31f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    31f6:	80 8b       	std	Z+16, r24	; 0x10
    31f8:	8e 85       	ldd	r24, Y+14	; 0x0e
    31fa:	81 8b       	std	Z+17, r24	; 0x11
    31fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    31fe:	82 8b       	std	Z+18, r24	; 0x12
    3200:	cf 91       	pop	r28
    3202:	df 91       	pop	r29
    3204:	1f 91       	pop	r17
    3206:	0f 91       	pop	r16
    3208:	ff 90       	pop	r15
    320a:	ef 90       	pop	r14
    320c:	df 90       	pop	r13
    320e:	cf 90       	pop	r12
    3210:	af 90       	pop	r10
    3212:	8f 90       	pop	r8
    3214:	08 95       	ret

00003216 <_ZN14HardwareSerial5beginEl>:
    3216:	cf 93       	push	r28
    3218:	df 93       	push	r29
    321a:	ec 01       	movw	r28, r24
    321c:	9a 01       	movw	r18, r20
    321e:	ab 01       	movw	r20, r22
    3220:	e8 85       	ldd	r30, Y+8	; 0x08
    3222:	f9 85       	ldd	r31, Y+9	; 0x09
    3224:	20 30       	cpi	r18, 0x00	; 0
    3226:	81 ee       	ldi	r24, 0xE1	; 225
    3228:	38 07       	cpc	r19, r24
    322a:	80 e0       	ldi	r24, 0x00	; 0
    322c:	48 07       	cpc	r20, r24
    322e:	80 e0       	ldi	r24, 0x00	; 0
    3230:	58 07       	cpc	r21, r24
    3232:	09 f4       	brne	.+2      	; 0x3236 <_ZN14HardwareSerial5beginEl+0x20>
    3234:	45 c0       	rjmp	.+138    	; 0x32c0 <_ZN14HardwareSerial5beginEl+0xaa>
    3236:	81 e0       	ldi	r24, 0x01	; 1
    3238:	90 e0       	ldi	r25, 0x00	; 0
    323a:	0a 88       	ldd	r0, Y+18	; 0x12
    323c:	02 c0       	rjmp	.+4      	; 0x3242 <_ZN14HardwareSerial5beginEl+0x2c>
    323e:	88 0f       	add	r24, r24
    3240:	99 1f       	adc	r25, r25
    3242:	0a 94       	dec	r0
    3244:	e2 f7       	brpl	.-8      	; 0x323e <_ZN14HardwareSerial5beginEl+0x28>
    3246:	80 83       	st	Z, r24
    3248:	60 e0       	ldi	r22, 0x00	; 0
    324a:	79 e0       	ldi	r23, 0x09	; 9
    324c:	8d e3       	ldi	r24, 0x3D	; 61
    324e:	90 e0       	ldi	r25, 0x00	; 0
    3250:	0e 94 48 25 	call	0x4a90	; 0x4a90 <__udivmodsi4>
    3254:	21 50       	subi	r18, 0x01	; 1
    3256:	30 40       	sbci	r19, 0x00	; 0
    3258:	40 40       	sbci	r20, 0x00	; 0
    325a:	50 40       	sbci	r21, 0x00	; 0
    325c:	56 95       	lsr	r21
    325e:	47 95       	ror	r20
    3260:	37 95       	ror	r19
    3262:	27 95       	ror	r18
    3264:	ec 81       	ldd	r30, Y+4	; 0x04
    3266:	fd 81       	ldd	r31, Y+5	; 0x05
    3268:	30 83       	st	Z, r19
    326a:	ee 81       	ldd	r30, Y+6	; 0x06
    326c:	ff 81       	ldd	r31, Y+7	; 0x07
    326e:	20 83       	st	Z, r18
    3270:	ea 85       	ldd	r30, Y+10	; 0x0a
    3272:	fb 85       	ldd	r31, Y+11	; 0x0b
    3274:	20 81       	ld	r18, Z
    3276:	41 e0       	ldi	r20, 0x01	; 1
    3278:	50 e0       	ldi	r21, 0x00	; 0
    327a:	ca 01       	movw	r24, r20
    327c:	0e 84       	ldd	r0, Y+14	; 0x0e
    327e:	02 c0       	rjmp	.+4      	; 0x3284 <_ZN14HardwareSerial5beginEl+0x6e>
    3280:	88 0f       	add	r24, r24
    3282:	99 1f       	adc	r25, r25
    3284:	0a 94       	dec	r0
    3286:	e2 f7       	brpl	.-8      	; 0x3280 <_ZN14HardwareSerial5beginEl+0x6a>
    3288:	28 2b       	or	r18, r24
    328a:	20 83       	st	Z, r18
    328c:	ea 85       	ldd	r30, Y+10	; 0x0a
    328e:	fb 85       	ldd	r31, Y+11	; 0x0b
    3290:	20 81       	ld	r18, Z
    3292:	ca 01       	movw	r24, r20
    3294:	0f 84       	ldd	r0, Y+15	; 0x0f
    3296:	02 c0       	rjmp	.+4      	; 0x329c <_ZN14HardwareSerial5beginEl+0x86>
    3298:	88 0f       	add	r24, r24
    329a:	99 1f       	adc	r25, r25
    329c:	0a 94       	dec	r0
    329e:	e2 f7       	brpl	.-8      	; 0x3298 <_ZN14HardwareSerial5beginEl+0x82>
    32a0:	28 2b       	or	r18, r24
    32a2:	20 83       	st	Z, r18
    32a4:	ea 85       	ldd	r30, Y+10	; 0x0a
    32a6:	fb 85       	ldd	r31, Y+11	; 0x0b
    32a8:	80 81       	ld	r24, Z
    32aa:	08 88       	ldd	r0, Y+16	; 0x10
    32ac:	02 c0       	rjmp	.+4      	; 0x32b2 <_ZN14HardwareSerial5beginEl+0x9c>
    32ae:	44 0f       	add	r20, r20
    32b0:	55 1f       	adc	r21, r21
    32b2:	0a 94       	dec	r0
    32b4:	e2 f7       	brpl	.-8      	; 0x32ae <_ZN14HardwareSerial5beginEl+0x98>
    32b6:	84 2b       	or	r24, r20
    32b8:	80 83       	st	Z, r24
    32ba:	df 91       	pop	r29
    32bc:	cf 91       	pop	r28
    32be:	08 95       	ret
    32c0:	10 82       	st	Z, r1
    32c2:	20 e1       	ldi	r18, 0x10	; 16
    32c4:	30 e0       	ldi	r19, 0x00	; 0
    32c6:	ce cf       	rjmp	.-100    	; 0x3264 <_ZN14HardwareSerial5beginEl+0x4e>

000032c8 <_ZN14HardwareSerial3endEv>:
    32c8:	fc 01       	movw	r30, r24
    32ca:	a2 85       	ldd	r26, Z+10	; 0x0a
    32cc:	b3 85       	ldd	r27, Z+11	; 0x0b
    32ce:	4c 91       	ld	r20, X
    32d0:	21 e0       	ldi	r18, 0x01	; 1
    32d2:	30 e0       	ldi	r19, 0x00	; 0
    32d4:	c9 01       	movw	r24, r18
    32d6:	06 84       	ldd	r0, Z+14	; 0x0e
    32d8:	02 c0       	rjmp	.+4      	; 0x32de <_ZN14HardwareSerial3endEv+0x16>
    32da:	88 0f       	add	r24, r24
    32dc:	99 1f       	adc	r25, r25
    32de:	0a 94       	dec	r0
    32e0:	e2 f7       	brpl	.-8      	; 0x32da <_ZN14HardwareSerial3endEv+0x12>
    32e2:	80 95       	com	r24
    32e4:	84 23       	and	r24, r20
    32e6:	8c 93       	st	X, r24
    32e8:	a2 85       	ldd	r26, Z+10	; 0x0a
    32ea:	b3 85       	ldd	r27, Z+11	; 0x0b
    32ec:	4c 91       	ld	r20, X
    32ee:	c9 01       	movw	r24, r18
    32f0:	07 84       	ldd	r0, Z+15	; 0x0f
    32f2:	02 c0       	rjmp	.+4      	; 0x32f8 <_ZN14HardwareSerial3endEv+0x30>
    32f4:	88 0f       	add	r24, r24
    32f6:	99 1f       	adc	r25, r25
    32f8:	0a 94       	dec	r0
    32fa:	e2 f7       	brpl	.-8      	; 0x32f4 <_ZN14HardwareSerial3endEv+0x2c>
    32fc:	80 95       	com	r24
    32fe:	84 23       	and	r24, r20
    3300:	8c 93       	st	X, r24
    3302:	a2 85       	ldd	r26, Z+10	; 0x0a
    3304:	b3 85       	ldd	r27, Z+11	; 0x0b
    3306:	8c 91       	ld	r24, X
    3308:	00 88       	ldd	r0, Z+16	; 0x10
    330a:	02 c0       	rjmp	.+4      	; 0x3310 <_ZN14HardwareSerial3endEv+0x48>
    330c:	22 0f       	add	r18, r18
    330e:	33 1f       	adc	r19, r19
    3310:	0a 94       	dec	r0
    3312:	e2 f7       	brpl	.-8      	; 0x330c <_ZN14HardwareSerial3endEv+0x44>
    3314:	20 95       	com	r18
    3316:	28 23       	and	r18, r24
    3318:	2c 93       	st	X, r18
    331a:	08 95       	ret

0000331c <_ZN14HardwareSerial9availableEv>:
    331c:	dc 01       	movw	r26, r24
    331e:	12 96       	adiw	r26, 0x02	; 2
    3320:	ed 91       	ld	r30, X+
    3322:	fc 91       	ld	r31, X
    3324:	13 97       	sbiw	r26, 0x03	; 3
    3326:	e0 58       	subi	r30, 0x80	; 128
    3328:	ff 4f       	sbci	r31, 0xFF	; 255
    332a:	21 91       	ld	r18, Z+
    332c:	31 91       	ld	r19, Z+
    332e:	80 81       	ld	r24, Z
    3330:	91 81       	ldd	r25, Z+1	; 0x01
    3332:	28 1b       	sub	r18, r24
    3334:	39 0b       	sbc	r19, r25
    3336:	2f 77       	andi	r18, 0x7F	; 127
    3338:	30 70       	andi	r19, 0x00	; 0
    333a:	c9 01       	movw	r24, r18
    333c:	08 95       	ret

0000333e <_ZN14HardwareSerial4peekEv>:
    333e:	dc 01       	movw	r26, r24
    3340:	12 96       	adiw	r26, 0x02	; 2
    3342:	ed 91       	ld	r30, X+
    3344:	fc 91       	ld	r31, X
    3346:	13 97       	sbiw	r26, 0x03	; 3
    3348:	ee 57       	subi	r30, 0x7E	; 126
    334a:	ff 4f       	sbci	r31, 0xFF	; 255
    334c:	20 81       	ld	r18, Z
    334e:	31 81       	ldd	r19, Z+1	; 0x01
    3350:	92 91       	ld	r25, -Z
    3352:	82 91       	ld	r24, -Z
    3354:	e0 58       	subi	r30, 0x80	; 128
    3356:	f0 40       	sbci	r31, 0x00	; 0
    3358:	82 17       	cp	r24, r18
    335a:	93 07       	cpc	r25, r19
    335c:	19 f4       	brne	.+6      	; 0x3364 <_ZN14HardwareSerial4peekEv+0x26>
    335e:	2f ef       	ldi	r18, 0xFF	; 255
    3360:	3f ef       	ldi	r19, 0xFF	; 255
    3362:	05 c0       	rjmp	.+10     	; 0x336e <_ZN14HardwareSerial4peekEv+0x30>
    3364:	e2 0f       	add	r30, r18
    3366:	f3 1f       	adc	r31, r19
    3368:	80 81       	ld	r24, Z
    336a:	28 2f       	mov	r18, r24
    336c:	30 e0       	ldi	r19, 0x00	; 0
    336e:	c9 01       	movw	r24, r18
    3370:	08 95       	ret

00003372 <_ZN14HardwareSerial4readEv>:
    3372:	dc 01       	movw	r26, r24
    3374:	12 96       	adiw	r26, 0x02	; 2
    3376:	ed 91       	ld	r30, X+
    3378:	fc 91       	ld	r31, X
    337a:	13 97       	sbiw	r26, 0x03	; 3
    337c:	df 01       	movw	r26, r30
    337e:	ae 57       	subi	r26, 0x7E	; 126
    3380:	bf 4f       	sbci	r27, 0xFF	; 255
    3382:	2d 91       	ld	r18, X+
    3384:	3c 91       	ld	r19, X
    3386:	11 97       	sbiw	r26, 0x01	; 1
    3388:	e0 58       	subi	r30, 0x80	; 128
    338a:	ff 4f       	sbci	r31, 0xFF	; 255
    338c:	80 81       	ld	r24, Z
    338e:	91 81       	ldd	r25, Z+1	; 0x01
    3390:	e0 58       	subi	r30, 0x80	; 128
    3392:	f0 40       	sbci	r31, 0x00	; 0
    3394:	82 17       	cp	r24, r18
    3396:	93 07       	cpc	r25, r19
    3398:	19 f4       	brne	.+6      	; 0x33a0 <_ZN14HardwareSerial4readEv+0x2e>
    339a:	2f ef       	ldi	r18, 0xFF	; 255
    339c:	3f ef       	ldi	r19, 0xFF	; 255
    339e:	0b c0       	rjmp	.+22     	; 0x33b6 <_ZN14HardwareSerial4readEv+0x44>
    33a0:	e2 0f       	add	r30, r18
    33a2:	f3 1f       	adc	r31, r19
    33a4:	80 81       	ld	r24, Z
    33a6:	2f 5f       	subi	r18, 0xFF	; 255
    33a8:	3f 4f       	sbci	r19, 0xFF	; 255
    33aa:	2f 77       	andi	r18, 0x7F	; 127
    33ac:	30 70       	andi	r19, 0x00	; 0
    33ae:	2d 93       	st	X+, r18
    33b0:	3c 93       	st	X, r19
    33b2:	28 2f       	mov	r18, r24
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	c9 01       	movw	r24, r18
    33b8:	08 95       	ret

000033ba <_ZN14HardwareSerial5flushEv>:
    33ba:	dc 01       	movw	r26, r24
    33bc:	12 96       	adiw	r26, 0x02	; 2
    33be:	ed 91       	ld	r30, X+
    33c0:	fc 91       	ld	r31, X
    33c2:	13 97       	sbiw	r26, 0x03	; 3
    33c4:	ee 57       	subi	r30, 0x7E	; 126
    33c6:	ff 4f       	sbci	r31, 0xFF	; 255
    33c8:	80 81       	ld	r24, Z
    33ca:	91 81       	ldd	r25, Z+1	; 0x01
    33cc:	92 93       	st	-Z, r25
    33ce:	82 93       	st	-Z, r24
    33d0:	08 95       	ret

000033d2 <_ZN14HardwareSerial5writeEh>:
    33d2:	fc 01       	movw	r30, r24
    33d4:	a0 85       	ldd	r26, Z+8	; 0x08
    33d6:	b1 85       	ldd	r27, Z+9	; 0x09
    33d8:	21 89       	ldd	r18, Z+17	; 0x11
    33da:	8c 91       	ld	r24, X
    33dc:	90 e0       	ldi	r25, 0x00	; 0
    33de:	02 2e       	mov	r0, r18
    33e0:	02 c0       	rjmp	.+4      	; 0x33e6 <_ZN14HardwareSerial5writeEh+0x14>
    33e2:	95 95       	asr	r25
    33e4:	87 95       	ror	r24
    33e6:	0a 94       	dec	r0
    33e8:	e2 f7       	brpl	.-8      	; 0x33e2 <_ZN14HardwareSerial5writeEh+0x10>
    33ea:	80 ff       	sbrs	r24, 0
    33ec:	f6 cf       	rjmp	.-20     	; 0x33da <_ZN14HardwareSerial5writeEh+0x8>
    33ee:	04 84       	ldd	r0, Z+12	; 0x0c
    33f0:	f5 85       	ldd	r31, Z+13	; 0x0d
    33f2:	e0 2d       	mov	r30, r0
    33f4:	60 83       	st	Z, r22
    33f6:	08 95       	ret

000033f8 <_GLOBAL__I_rx_buffer>:
    33f8:	8b e6       	ldi	r24, 0x6B	; 107
    33fa:	92 e0       	ldi	r25, 0x02	; 2
    33fc:	90 93 c8 03 	sts	0x03C8, r25
    3400:	80 93 c7 03 	sts	0x03C7, r24
    3404:	83 e4       	ldi	r24, 0x43	; 67
    3406:	93 e0       	ldi	r25, 0x03	; 3
    3408:	90 93 ca 03 	sts	0x03CA, r25
    340c:	80 93 c9 03 	sts	0x03C9, r24
    3410:	85 ec       	ldi	r24, 0xC5	; 197
    3412:	90 e0       	ldi	r25, 0x00	; 0
    3414:	90 93 cc 03 	sts	0x03CC, r25
    3418:	80 93 cb 03 	sts	0x03CB, r24
    341c:	84 ec       	ldi	r24, 0xC4	; 196
    341e:	90 e0       	ldi	r25, 0x00	; 0
    3420:	90 93 ce 03 	sts	0x03CE, r25
    3424:	80 93 cd 03 	sts	0x03CD, r24
    3428:	80 ec       	ldi	r24, 0xC0	; 192
    342a:	90 e0       	ldi	r25, 0x00	; 0
    342c:	90 93 d0 03 	sts	0x03D0, r25
    3430:	80 93 cf 03 	sts	0x03CF, r24
    3434:	81 ec       	ldi	r24, 0xC1	; 193
    3436:	90 e0       	ldi	r25, 0x00	; 0
    3438:	90 93 d2 03 	sts	0x03D2, r25
    343c:	80 93 d1 03 	sts	0x03D1, r24
    3440:	86 ec       	ldi	r24, 0xC6	; 198
    3442:	90 e0       	ldi	r25, 0x00	; 0
    3444:	90 93 d4 03 	sts	0x03D4, r25
    3448:	80 93 d3 03 	sts	0x03D3, r24
    344c:	84 e0       	ldi	r24, 0x04	; 4
    344e:	80 93 d5 03 	sts	0x03D5, r24
    3452:	83 e0       	ldi	r24, 0x03	; 3
    3454:	80 93 d6 03 	sts	0x03D6, r24
    3458:	87 e0       	ldi	r24, 0x07	; 7
    345a:	80 93 d7 03 	sts	0x03D7, r24
    345e:	85 e0       	ldi	r24, 0x05	; 5
    3460:	80 93 d8 03 	sts	0x03D8, r24
    3464:	81 e0       	ldi	r24, 0x01	; 1
    3466:	80 93 d9 03 	sts	0x03D9, r24
    346a:	08 95       	ret

0000346c <_ZN5Print5writeEPKc>:
    346c:	0f 93       	push	r16
    346e:	1f 93       	push	r17
    3470:	cf 93       	push	r28
    3472:	df 93       	push	r29
    3474:	8c 01       	movw	r16, r24
    3476:	eb 01       	movw	r28, r22
    3478:	09 c0       	rjmp	.+18     	; 0x348c <_ZN5Print5writeEPKc+0x20>
    347a:	21 96       	adiw	r28, 0x01	; 1
    347c:	d8 01       	movw	r26, r16
    347e:	ed 91       	ld	r30, X+
    3480:	fc 91       	ld	r31, X
    3482:	01 90       	ld	r0, Z+
    3484:	f0 81       	ld	r31, Z
    3486:	e0 2d       	mov	r30, r0
    3488:	c8 01       	movw	r24, r16
    348a:	09 95       	icall
    348c:	68 81       	ld	r22, Y
    348e:	66 23       	and	r22, r22
    3490:	a1 f7       	brne	.-24     	; 0x347a <_ZN5Print5writeEPKc+0xe>
    3492:	df 91       	pop	r29
    3494:	cf 91       	pop	r28
    3496:	1f 91       	pop	r17
    3498:	0f 91       	pop	r16
    349a:	08 95       	ret

0000349c <_ZN5Print5writeEPKhj>:
    349c:	ef 92       	push	r14
    349e:	ff 92       	push	r15
    34a0:	0f 93       	push	r16
    34a2:	1f 93       	push	r17
    34a4:	cf 93       	push	r28
    34a6:	df 93       	push	r29
    34a8:	8c 01       	movw	r16, r24
    34aa:	7b 01       	movw	r14, r22
    34ac:	ea 01       	movw	r28, r20
    34ae:	0c c0       	rjmp	.+24     	; 0x34c8 <_ZN5Print5writeEPKhj+0x2c>
    34b0:	d7 01       	movw	r26, r14
    34b2:	6d 91       	ld	r22, X+
    34b4:	7d 01       	movw	r14, r26
    34b6:	d8 01       	movw	r26, r16
    34b8:	ed 91       	ld	r30, X+
    34ba:	fc 91       	ld	r31, X
    34bc:	01 90       	ld	r0, Z+
    34be:	f0 81       	ld	r31, Z
    34c0:	e0 2d       	mov	r30, r0
    34c2:	c8 01       	movw	r24, r16
    34c4:	09 95       	icall
    34c6:	21 97       	sbiw	r28, 0x01	; 1
    34c8:	20 97       	sbiw	r28, 0x00	; 0
    34ca:	91 f7       	brne	.-28     	; 0x34b0 <_ZN5Print5writeEPKhj+0x14>
    34cc:	df 91       	pop	r29
    34ce:	cf 91       	pop	r28
    34d0:	1f 91       	pop	r17
    34d2:	0f 91       	pop	r16
    34d4:	ff 90       	pop	r15
    34d6:	ef 90       	pop	r14
    34d8:	08 95       	ret

000034da <_ZN5Print5printEPKc>:
    34da:	dc 01       	movw	r26, r24
    34dc:	ed 91       	ld	r30, X+
    34de:	fc 91       	ld	r31, X
    34e0:	02 80       	ldd	r0, Z+2	; 0x02
    34e2:	f3 81       	ldd	r31, Z+3	; 0x03
    34e4:	e0 2d       	mov	r30, r0
    34e6:	09 95       	icall
    34e8:	08 95       	ret

000034ea <_ZN5Print5printERK6String>:
    34ea:	cf 92       	push	r12
    34ec:	df 92       	push	r13
    34ee:	ef 92       	push	r14
    34f0:	ff 92       	push	r15
    34f2:	0f 93       	push	r16
    34f4:	1f 93       	push	r17
    34f6:	cf 93       	push	r28
    34f8:	df 93       	push	r29
    34fa:	6c 01       	movw	r12, r24
    34fc:	7b 01       	movw	r14, r22
    34fe:	c0 e0       	ldi	r28, 0x00	; 0
    3500:	d0 e0       	ldi	r29, 0x00	; 0
    3502:	0e c0       	rjmp	.+28     	; 0x3520 <_ZN5Print5printERK6String+0x36>
    3504:	d6 01       	movw	r26, r12
    3506:	ed 91       	ld	r30, X+
    3508:	fc 91       	ld	r31, X
    350a:	00 81       	ld	r16, Z
    350c:	11 81       	ldd	r17, Z+1	; 0x01
    350e:	c7 01       	movw	r24, r14
    3510:	be 01       	movw	r22, r28
    3512:	0e 94 37 1d 	call	0x3a6e	; 0x3a6e <_ZNK6StringixEj>
    3516:	68 2f       	mov	r22, r24
    3518:	c6 01       	movw	r24, r12
    351a:	f8 01       	movw	r30, r16
    351c:	09 95       	icall
    351e:	21 96       	adiw	r28, 0x01	; 1
    3520:	f7 01       	movw	r30, r14
    3522:	84 81       	ldd	r24, Z+4	; 0x04
    3524:	95 81       	ldd	r25, Z+5	; 0x05
    3526:	c8 17       	cp	r28, r24
    3528:	d9 07       	cpc	r29, r25
    352a:	60 f3       	brcs	.-40     	; 0x3504 <_ZN5Print5printERK6String+0x1a>
    352c:	df 91       	pop	r29
    352e:	cf 91       	pop	r28
    3530:	1f 91       	pop	r17
    3532:	0f 91       	pop	r16
    3534:	ff 90       	pop	r15
    3536:	ef 90       	pop	r14
    3538:	df 90       	pop	r13
    353a:	cf 90       	pop	r12
    353c:	08 95       	ret

0000353e <_ZN5Print11printNumberEmh>:
    353e:	2f 92       	push	r2
    3540:	3f 92       	push	r3
    3542:	4f 92       	push	r4
    3544:	5f 92       	push	r5
    3546:	6f 92       	push	r6
    3548:	7f 92       	push	r7
    354a:	8f 92       	push	r8
    354c:	9f 92       	push	r9
    354e:	af 92       	push	r10
    3550:	bf 92       	push	r11
    3552:	cf 92       	push	r12
    3554:	df 92       	push	r13
    3556:	ef 92       	push	r14
    3558:	ff 92       	push	r15
    355a:	0f 93       	push	r16
    355c:	1f 93       	push	r17
    355e:	df 93       	push	r29
    3560:	cf 93       	push	r28
    3562:	cd b7       	in	r28, 0x3d	; 61
    3564:	de b7       	in	r29, 0x3e	; 62
    3566:	a0 97       	sbiw	r28, 0x20	; 32
    3568:	0f b6       	in	r0, 0x3f	; 63
    356a:	f8 94       	cli
    356c:	de bf       	out	0x3e, r29	; 62
    356e:	0f be       	out	0x3f, r0	; 63
    3570:	cd bf       	out	0x3d, r28	; 61
    3572:	1c 01       	movw	r2, r24
    3574:	6a 01       	movw	r12, r20
    3576:	7b 01       	movw	r14, r22
    3578:	41 15       	cp	r20, r1
    357a:	51 05       	cpc	r21, r1
    357c:	61 05       	cpc	r22, r1
    357e:	71 05       	cpc	r23, r1
    3580:	49 f4       	brne	.+18     	; 0x3594 <_ZN5Print11printNumberEmh+0x56>
    3582:	40 e3       	ldi	r20, 0x30	; 48
    3584:	50 e0       	ldi	r21, 0x00	; 0
    3586:	60 e0       	ldi	r22, 0x00	; 0
    3588:	70 e0       	ldi	r23, 0x00	; 0
    358a:	20 e0       	ldi	r18, 0x00	; 0
    358c:	30 e0       	ldi	r19, 0x00	; 0
    358e:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    3592:	54 c0       	rjmp	.+168    	; 0x363c <_ZN5Print11printNumberEmh+0xfe>
    3594:	88 24       	eor	r8, r8
    3596:	99 24       	eor	r9, r9
    3598:	54 01       	movw	r10, r8
    359a:	42 2e       	mov	r4, r18
    359c:	55 24       	eor	r5, r5
    359e:	66 24       	eor	r6, r6
    35a0:	77 24       	eor	r7, r7
    35a2:	01 e0       	ldi	r16, 0x01	; 1
    35a4:	10 e0       	ldi	r17, 0x00	; 0
    35a6:	0c 0f       	add	r16, r28
    35a8:	1d 1f       	adc	r17, r29
    35aa:	08 0d       	add	r16, r8
    35ac:	19 1d       	adc	r17, r9
    35ae:	c7 01       	movw	r24, r14
    35b0:	b6 01       	movw	r22, r12
    35b2:	a3 01       	movw	r20, r6
    35b4:	92 01       	movw	r18, r4
    35b6:	0e 94 48 25 	call	0x4a90	; 0x4a90 <__udivmodsi4>
    35ba:	f8 01       	movw	r30, r16
    35bc:	60 83       	st	Z, r22
    35be:	08 94       	sec
    35c0:	81 1c       	adc	r8, r1
    35c2:	91 1c       	adc	r9, r1
    35c4:	a1 1c       	adc	r10, r1
    35c6:	b1 1c       	adc	r11, r1
    35c8:	c7 01       	movw	r24, r14
    35ca:	b6 01       	movw	r22, r12
    35cc:	a3 01       	movw	r20, r6
    35ce:	92 01       	movw	r18, r4
    35d0:	0e 94 48 25 	call	0x4a90	; 0x4a90 <__udivmodsi4>
    35d4:	c9 01       	movw	r24, r18
    35d6:	da 01       	movw	r26, r20
    35d8:	6c 01       	movw	r12, r24
    35da:	7d 01       	movw	r14, r26
    35dc:	c1 14       	cp	r12, r1
    35de:	d1 04       	cpc	r13, r1
    35e0:	e1 04       	cpc	r14, r1
    35e2:	f1 04       	cpc	r15, r1
    35e4:	f1 f6       	brne	.-68     	; 0x35a2 <_ZN5Print11printNumberEmh+0x64>
    35e6:	81 e0       	ldi	r24, 0x01	; 1
    35e8:	e8 2e       	mov	r14, r24
    35ea:	f1 2c       	mov	r15, r1
    35ec:	ec 0e       	add	r14, r28
    35ee:	fd 1e       	adc	r15, r29
    35f0:	e8 0c       	add	r14, r8
    35f2:	f9 1c       	adc	r15, r9
    35f4:	3e 01       	movw	r6, r28
    35f6:	08 94       	sec
    35f8:	61 1c       	adc	r6, r1
    35fa:	71 1c       	adc	r7, r1
    35fc:	d5 01       	movw	r26, r10
    35fe:	c4 01       	movw	r24, r8
    3600:	01 97       	sbiw	r24, 0x01	; 1
    3602:	a1 09       	sbc	r26, r1
    3604:	b1 09       	sbc	r27, r1
    3606:	6c 01       	movw	r12, r24
    3608:	c8 18       	sub	r12, r8
    360a:	d9 08       	sbc	r13, r9
    360c:	14 c0       	rjmp	.+40     	; 0x3636 <_ZN5Print11printNumberEmh+0xf8>
    360e:	f6 01       	movw	r30, r12
    3610:	ee 0d       	add	r30, r14
    3612:	ff 1d       	adc	r31, r15
    3614:	40 81       	ld	r20, Z
    3616:	4a 30       	cpi	r20, 0x0A	; 10
    3618:	10 f4       	brcc	.+4      	; 0x361e <_ZN5Print11printNumberEmh+0xe0>
    361a:	40 5d       	subi	r20, 0xD0	; 208
    361c:	01 c0       	rjmp	.+2      	; 0x3620 <_ZN5Print11printNumberEmh+0xe2>
    361e:	49 5c       	subi	r20, 0xC9	; 201
    3620:	50 e0       	ldi	r21, 0x00	; 0
    3622:	60 e0       	ldi	r22, 0x00	; 0
    3624:	70 e0       	ldi	r23, 0x00	; 0
    3626:	c1 01       	movw	r24, r2
    3628:	20 e0       	ldi	r18, 0x00	; 0
    362a:	30 e0       	ldi	r19, 0x00	; 0
    362c:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    3630:	08 94       	sec
    3632:	e1 08       	sbc	r14, r1
    3634:	f1 08       	sbc	r15, r1
    3636:	6e 14       	cp	r6, r14
    3638:	7f 04       	cpc	r7, r15
    363a:	49 f7       	brne	.-46     	; 0x360e <_ZN5Print11printNumberEmh+0xd0>
    363c:	a0 96       	adiw	r28, 0x20	; 32
    363e:	0f b6       	in	r0, 0x3f	; 63
    3640:	f8 94       	cli
    3642:	de bf       	out	0x3e, r29	; 62
    3644:	0f be       	out	0x3f, r0	; 63
    3646:	cd bf       	out	0x3d, r28	; 61
    3648:	cf 91       	pop	r28
    364a:	df 91       	pop	r29
    364c:	1f 91       	pop	r17
    364e:	0f 91       	pop	r16
    3650:	ff 90       	pop	r15
    3652:	ef 90       	pop	r14
    3654:	df 90       	pop	r13
    3656:	cf 90       	pop	r12
    3658:	bf 90       	pop	r11
    365a:	af 90       	pop	r10
    365c:	9f 90       	pop	r9
    365e:	8f 90       	pop	r8
    3660:	7f 90       	pop	r7
    3662:	6f 90       	pop	r6
    3664:	5f 90       	pop	r5
    3666:	4f 90       	pop	r4
    3668:	3f 90       	pop	r3
    366a:	2f 90       	pop	r2
    366c:	08 95       	ret

0000366e <_ZN5Print5printEmi>:
    366e:	dc 01       	movw	r26, r24
    3670:	21 15       	cp	r18, r1
    3672:	31 05       	cpc	r19, r1
    3674:	41 f4       	brne	.+16     	; 0x3686 <_ZN5Print5printEmi+0x18>
    3676:	ed 91       	ld	r30, X+
    3678:	fc 91       	ld	r31, X
    367a:	01 90       	ld	r0, Z+
    367c:	f0 81       	ld	r31, Z
    367e:	e0 2d       	mov	r30, r0
    3680:	64 2f       	mov	r22, r20
    3682:	09 95       	icall
    3684:	08 95       	ret
    3686:	0e 94 9f 1a 	call	0x353e	; 0x353e <_ZN5Print11printNumberEmh>
    368a:	08 95       	ret

0000368c <_ZN5Print5printEji>:
    368c:	ef 92       	push	r14
    368e:	ff 92       	push	r15
    3690:	0f 93       	push	r16
    3692:	1f 93       	push	r17
    3694:	9a 01       	movw	r18, r20
    3696:	7b 01       	movw	r14, r22
    3698:	00 e0       	ldi	r16, 0x00	; 0
    369a:	10 e0       	ldi	r17, 0x00	; 0
    369c:	b8 01       	movw	r22, r16
    369e:	a7 01       	movw	r20, r14
    36a0:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN5Print5printEmi>
    36a4:	1f 91       	pop	r17
    36a6:	0f 91       	pop	r16
    36a8:	ff 90       	pop	r15
    36aa:	ef 90       	pop	r14
    36ac:	08 95       	ret

000036ae <_ZN5Print5printEhi>:
    36ae:	ef 92       	push	r14
    36b0:	ff 92       	push	r15
    36b2:	0f 93       	push	r16
    36b4:	1f 93       	push	r17
    36b6:	9a 01       	movw	r18, r20
    36b8:	e6 2e       	mov	r14, r22
    36ba:	ff 24       	eor	r15, r15
    36bc:	00 e0       	ldi	r16, 0x00	; 0
    36be:	10 e0       	ldi	r17, 0x00	; 0
    36c0:	b8 01       	movw	r22, r16
    36c2:	a7 01       	movw	r20, r14
    36c4:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN5Print5printEmi>
    36c8:	1f 91       	pop	r17
    36ca:	0f 91       	pop	r16
    36cc:	ff 90       	pop	r15
    36ce:	ef 90       	pop	r14
    36d0:	08 95       	ret

000036d2 <_ZN5Print5printEli>:
    36d2:	ef 92       	push	r14
    36d4:	ff 92       	push	r15
    36d6:	0f 93       	push	r16
    36d8:	1f 93       	push	r17
    36da:	cf 93       	push	r28
    36dc:	df 93       	push	r29
    36de:	ec 01       	movw	r28, r24
    36e0:	7a 01       	movw	r14, r20
    36e2:	8b 01       	movw	r16, r22
    36e4:	21 15       	cp	r18, r1
    36e6:	31 05       	cpc	r19, r1
    36e8:	41 f4       	brne	.+16     	; 0x36fa <_ZN5Print5printEli+0x28>
    36ea:	e8 81       	ld	r30, Y
    36ec:	f9 81       	ldd	r31, Y+1	; 0x01
    36ee:	01 90       	ld	r0, Z+
    36f0:	f0 81       	ld	r31, Z
    36f2:	e0 2d       	mov	r30, r0
    36f4:	64 2f       	mov	r22, r20
    36f6:	09 95       	icall
    36f8:	1b c0       	rjmp	.+54     	; 0x3730 <_ZN5Print5printEli+0x5e>
    36fa:	2a 30       	cpi	r18, 0x0A	; 10
    36fc:	31 05       	cpc	r19, r1
    36fe:	b1 f4       	brne	.+44     	; 0x372c <_ZN5Print5printEli+0x5a>
    3700:	77 ff       	sbrs	r23, 7
    3702:	10 c0       	rjmp	.+32     	; 0x3724 <_ZN5Print5printEli+0x52>
    3704:	4d e2       	ldi	r20, 0x2D	; 45
    3706:	50 e0       	ldi	r21, 0x00	; 0
    3708:	60 e0       	ldi	r22, 0x00	; 0
    370a:	70 e0       	ldi	r23, 0x00	; 0
    370c:	20 e0       	ldi	r18, 0x00	; 0
    370e:	30 e0       	ldi	r19, 0x00	; 0
    3710:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    3714:	10 95       	com	r17
    3716:	00 95       	com	r16
    3718:	f0 94       	com	r15
    371a:	e0 94       	com	r14
    371c:	e1 1c       	adc	r14, r1
    371e:	f1 1c       	adc	r15, r1
    3720:	01 1d       	adc	r16, r1
    3722:	11 1d       	adc	r17, r1
    3724:	ce 01       	movw	r24, r28
    3726:	b8 01       	movw	r22, r16
    3728:	a7 01       	movw	r20, r14
    372a:	2a e0       	ldi	r18, 0x0A	; 10
    372c:	0e 94 9f 1a 	call	0x353e	; 0x353e <_ZN5Print11printNumberEmh>
    3730:	df 91       	pop	r29
    3732:	cf 91       	pop	r28
    3734:	1f 91       	pop	r17
    3736:	0f 91       	pop	r16
    3738:	ff 90       	pop	r15
    373a:	ef 90       	pop	r14
    373c:	08 95       	ret

0000373e <_ZN5Print5printEii>:
    373e:	ef 92       	push	r14
    3740:	ff 92       	push	r15
    3742:	0f 93       	push	r16
    3744:	1f 93       	push	r17
    3746:	7b 01       	movw	r14, r22
    3748:	9a 01       	movw	r18, r20
    374a:	00 27       	eor	r16, r16
    374c:	f7 fc       	sbrc	r15, 7
    374e:	00 95       	com	r16
    3750:	10 2f       	mov	r17, r16
    3752:	b8 01       	movw	r22, r16
    3754:	a7 01       	movw	r20, r14
    3756:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    375a:	1f 91       	pop	r17
    375c:	0f 91       	pop	r16
    375e:	ff 90       	pop	r15
    3760:	ef 90       	pop	r14
    3762:	08 95       	ret

00003764 <_ZN5Print5printEci>:
    3764:	ef 92       	push	r14
    3766:	ff 92       	push	r15
    3768:	0f 93       	push	r16
    376a:	1f 93       	push	r17
    376c:	9a 01       	movw	r18, r20
    376e:	e6 2e       	mov	r14, r22
    3770:	ff 24       	eor	r15, r15
    3772:	00 e0       	ldi	r16, 0x00	; 0
    3774:	10 e0       	ldi	r17, 0x00	; 0
    3776:	b8 01       	movw	r22, r16
    3778:	a7 01       	movw	r20, r14
    377a:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    377e:	1f 91       	pop	r17
    3780:	0f 91       	pop	r16
    3782:	ff 90       	pop	r15
    3784:	ef 90       	pop	r14
    3786:	08 95       	ret

00003788 <_ZN5Print7printlnEv>:
    3788:	0f 93       	push	r16
    378a:	1f 93       	push	r17
    378c:	8c 01       	movw	r16, r24
    378e:	4d e0       	ldi	r20, 0x0D	; 13
    3790:	50 e0       	ldi	r21, 0x00	; 0
    3792:	60 e0       	ldi	r22, 0x00	; 0
    3794:	70 e0       	ldi	r23, 0x00	; 0
    3796:	20 e0       	ldi	r18, 0x00	; 0
    3798:	30 e0       	ldi	r19, 0x00	; 0
    379a:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    379e:	c8 01       	movw	r24, r16
    37a0:	4a e0       	ldi	r20, 0x0A	; 10
    37a2:	50 e0       	ldi	r21, 0x00	; 0
    37a4:	60 e0       	ldi	r22, 0x00	; 0
    37a6:	70 e0       	ldi	r23, 0x00	; 0
    37a8:	20 e0       	ldi	r18, 0x00	; 0
    37aa:	30 e0       	ldi	r19, 0x00	; 0
    37ac:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    37b0:	1f 91       	pop	r17
    37b2:	0f 91       	pop	r16
    37b4:	08 95       	ret

000037b6 <_ZN5Print7printlnEmi>:
    37b6:	0f 93       	push	r16
    37b8:	1f 93       	push	r17
    37ba:	8c 01       	movw	r16, r24
    37bc:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN5Print5printEmi>
    37c0:	c8 01       	movw	r24, r16
    37c2:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    37c6:	1f 91       	pop	r17
    37c8:	0f 91       	pop	r16
    37ca:	08 95       	ret

000037cc <_ZN5Print7printlnEji>:
    37cc:	cf 92       	push	r12
    37ce:	df 92       	push	r13
    37d0:	ef 92       	push	r14
    37d2:	ff 92       	push	r15
    37d4:	0f 93       	push	r16
    37d6:	1f 93       	push	r17
    37d8:	8c 01       	movw	r16, r24
    37da:	9a 01       	movw	r18, r20
    37dc:	6b 01       	movw	r12, r22
    37de:	ee 24       	eor	r14, r14
    37e0:	ff 24       	eor	r15, r15
    37e2:	b7 01       	movw	r22, r14
    37e4:	a6 01       	movw	r20, r12
    37e6:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN5Print5printEmi>
    37ea:	c8 01       	movw	r24, r16
    37ec:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    37f0:	1f 91       	pop	r17
    37f2:	0f 91       	pop	r16
    37f4:	ff 90       	pop	r15
    37f6:	ef 90       	pop	r14
    37f8:	df 90       	pop	r13
    37fa:	cf 90       	pop	r12
    37fc:	08 95       	ret

000037fe <_ZN5Print7printlnEhi>:
    37fe:	cf 92       	push	r12
    3800:	df 92       	push	r13
    3802:	ef 92       	push	r14
    3804:	ff 92       	push	r15
    3806:	0f 93       	push	r16
    3808:	1f 93       	push	r17
    380a:	8c 01       	movw	r16, r24
    380c:	9a 01       	movw	r18, r20
    380e:	c6 2e       	mov	r12, r22
    3810:	dd 24       	eor	r13, r13
    3812:	ee 24       	eor	r14, r14
    3814:	ff 24       	eor	r15, r15
    3816:	b7 01       	movw	r22, r14
    3818:	a6 01       	movw	r20, r12
    381a:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN5Print5printEmi>
    381e:	c8 01       	movw	r24, r16
    3820:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    3824:	1f 91       	pop	r17
    3826:	0f 91       	pop	r16
    3828:	ff 90       	pop	r15
    382a:	ef 90       	pop	r14
    382c:	df 90       	pop	r13
    382e:	cf 90       	pop	r12
    3830:	08 95       	ret

00003832 <_ZN5Print7printlnEPKc>:
    3832:	0f 93       	push	r16
    3834:	1f 93       	push	r17
    3836:	8c 01       	movw	r16, r24
    3838:	0e 94 6d 1a 	call	0x34da	; 0x34da <_ZN5Print5printEPKc>
    383c:	c8 01       	movw	r24, r16
    383e:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    3842:	1f 91       	pop	r17
    3844:	0f 91       	pop	r16
    3846:	08 95       	ret

00003848 <_ZN5Print7printlnERK6String>:
    3848:	0f 93       	push	r16
    384a:	1f 93       	push	r17
    384c:	8c 01       	movw	r16, r24
    384e:	0e 94 75 1a 	call	0x34ea	; 0x34ea <_ZN5Print5printERK6String>
    3852:	c8 01       	movw	r24, r16
    3854:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    3858:	1f 91       	pop	r17
    385a:	0f 91       	pop	r16
    385c:	08 95       	ret

0000385e <_ZN5Print7printlnEli>:
    385e:	0f 93       	push	r16
    3860:	1f 93       	push	r17
    3862:	8c 01       	movw	r16, r24
    3864:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    3868:	c8 01       	movw	r24, r16
    386a:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    386e:	1f 91       	pop	r17
    3870:	0f 91       	pop	r16
    3872:	08 95       	ret

00003874 <_ZN5Print7printlnEii>:
    3874:	cf 92       	push	r12
    3876:	df 92       	push	r13
    3878:	ef 92       	push	r14
    387a:	ff 92       	push	r15
    387c:	0f 93       	push	r16
    387e:	1f 93       	push	r17
    3880:	8c 01       	movw	r16, r24
    3882:	6b 01       	movw	r12, r22
    3884:	9a 01       	movw	r18, r20
    3886:	ee 24       	eor	r14, r14
    3888:	d7 fc       	sbrc	r13, 7
    388a:	e0 94       	com	r14
    388c:	fe 2c       	mov	r15, r14
    388e:	b7 01       	movw	r22, r14
    3890:	a6 01       	movw	r20, r12
    3892:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    3896:	c8 01       	movw	r24, r16
    3898:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    389c:	1f 91       	pop	r17
    389e:	0f 91       	pop	r16
    38a0:	ff 90       	pop	r15
    38a2:	ef 90       	pop	r14
    38a4:	df 90       	pop	r13
    38a6:	cf 90       	pop	r12
    38a8:	08 95       	ret

000038aa <_ZN5Print7printlnEci>:
    38aa:	cf 92       	push	r12
    38ac:	df 92       	push	r13
    38ae:	ef 92       	push	r14
    38b0:	ff 92       	push	r15
    38b2:	0f 93       	push	r16
    38b4:	1f 93       	push	r17
    38b6:	8c 01       	movw	r16, r24
    38b8:	9a 01       	movw	r18, r20
    38ba:	c6 2e       	mov	r12, r22
    38bc:	dd 24       	eor	r13, r13
    38be:	ee 24       	eor	r14, r14
    38c0:	ff 24       	eor	r15, r15
    38c2:	b7 01       	movw	r22, r14
    38c4:	a6 01       	movw	r20, r12
    38c6:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    38ca:	c8 01       	movw	r24, r16
    38cc:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    38d0:	1f 91       	pop	r17
    38d2:	0f 91       	pop	r16
    38d4:	ff 90       	pop	r15
    38d6:	ef 90       	pop	r14
    38d8:	df 90       	pop	r13
    38da:	cf 90       	pop	r12
    38dc:	08 95       	ret

000038de <_ZN5Print10printFloatEdh>:
    38de:	9f 92       	push	r9
    38e0:	af 92       	push	r10
    38e2:	bf 92       	push	r11
    38e4:	cf 92       	push	r12
    38e6:	df 92       	push	r13
    38e8:	ef 92       	push	r14
    38ea:	ff 92       	push	r15
    38ec:	0f 93       	push	r16
    38ee:	1f 93       	push	r17
    38f0:	cf 93       	push	r28
    38f2:	df 93       	push	r29
    38f4:	ec 01       	movw	r28, r24
    38f6:	7a 01       	movw	r14, r20
    38f8:	8b 01       	movw	r16, r22
    38fa:	92 2e       	mov	r9, r18
    38fc:	cb 01       	movw	r24, r22
    38fe:	ba 01       	movw	r22, r20
    3900:	20 e0       	ldi	r18, 0x00	; 0
    3902:	30 e0       	ldi	r19, 0x00	; 0
    3904:	40 e0       	ldi	r20, 0x00	; 0
    3906:	50 e0       	ldi	r21, 0x00	; 0
    3908:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__ltsf2>
    390c:	88 23       	and	r24, r24
    390e:	6c f4       	brge	.+26     	; 0x392a <_ZN5Print10printFloatEdh+0x4c>
    3910:	ce 01       	movw	r24, r28
    3912:	4d e2       	ldi	r20, 0x2D	; 45
    3914:	50 e0       	ldi	r21, 0x00	; 0
    3916:	60 e0       	ldi	r22, 0x00	; 0
    3918:	70 e0       	ldi	r23, 0x00	; 0
    391a:	20 e0       	ldi	r18, 0x00	; 0
    391c:	30 e0       	ldi	r19, 0x00	; 0
    391e:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    3922:	17 fb       	bst	r17, 7
    3924:	10 95       	com	r17
    3926:	17 f9       	bld	r17, 7
    3928:	10 95       	com	r17
    392a:	20 e0       	ldi	r18, 0x00	; 0
    392c:	30 e0       	ldi	r19, 0x00	; 0
    392e:	40 e0       	ldi	r20, 0x00	; 0
    3930:	5f e3       	ldi	r21, 0x3F	; 63
    3932:	aa 24       	eor	r10, r10
    3934:	0b c0       	rjmp	.+22     	; 0x394c <_ZN5Print10printFloatEdh+0x6e>
    3936:	ca 01       	movw	r24, r20
    3938:	b9 01       	movw	r22, r18
    393a:	20 e0       	ldi	r18, 0x00	; 0
    393c:	30 e0       	ldi	r19, 0x00	; 0
    393e:	40 e2       	ldi	r20, 0x20	; 32
    3940:	51 e4       	ldi	r21, 0x41	; 65
    3942:	0e 94 1e 14 	call	0x283c	; 0x283c <__divsf3>
    3946:	9b 01       	movw	r18, r22
    3948:	ac 01       	movw	r20, r24
    394a:	a3 94       	inc	r10
    394c:	a9 14       	cp	r10, r9
    394e:	98 f3       	brcs	.-26     	; 0x3936 <_ZN5Print10printFloatEdh+0x58>
    3950:	c8 01       	movw	r24, r16
    3952:	b7 01       	movw	r22, r14
    3954:	0e 94 f7 12 	call	0x25ee	; 0x25ee <__addsf3>
    3958:	5b 01       	movw	r10, r22
    395a:	6c 01       	movw	r12, r24
    395c:	0e 94 4e 11 	call	0x229c	; 0x229c <__fixunssfsi>
    3960:	7b 01       	movw	r14, r22
    3962:	8c 01       	movw	r16, r24
    3964:	ce 01       	movw	r24, r28
    3966:	b8 01       	movw	r22, r16
    3968:	a7 01       	movw	r20, r14
    396a:	2a e0       	ldi	r18, 0x0A	; 10
    396c:	30 e0       	ldi	r19, 0x00	; 0
    396e:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN5Print5printEmi>
    3972:	99 20       	and	r9, r9
    3974:	29 f0       	breq	.+10     	; 0x3980 <_ZN5Print10printFloatEdh+0xa2>
    3976:	ce 01       	movw	r24, r28
    3978:	65 e5       	ldi	r22, 0x55	; 85
    397a:	71 e0       	ldi	r23, 0x01	; 1
    397c:	0e 94 6d 1a 	call	0x34da	; 0x34da <_ZN5Print5printEPKc>
    3980:	c8 01       	movw	r24, r16
    3982:	b7 01       	movw	r22, r14
    3984:	0e 94 0c 16 	call	0x2c18	; 0x2c18 <__floatunsisf>
    3988:	9b 01       	movw	r18, r22
    398a:	ac 01       	movw	r20, r24
    398c:	c6 01       	movw	r24, r12
    398e:	b5 01       	movw	r22, r10
    3990:	0e 94 c6 12 	call	0x258c	; 0x258c <__subsf3>
    3994:	22 c0       	rjmp	.+68     	; 0x39da <_ZN5Print10printFloatEdh+0xfc>
    3996:	20 e0       	ldi	r18, 0x00	; 0
    3998:	30 e0       	ldi	r19, 0x00	; 0
    399a:	40 e2       	ldi	r20, 0x20	; 32
    399c:	51 e4       	ldi	r21, 0x41	; 65
    399e:	0e 94 24 13 	call	0x2648	; 0x2648 <__mulsf3>
    39a2:	7b 01       	movw	r14, r22
    39a4:	8c 01       	movw	r16, r24
    39a6:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <__fixsfsi>
    39aa:	5b 01       	movw	r10, r22
    39ac:	6c 01       	movw	r12, r24
    39ae:	cc 24       	eor	r12, r12
    39b0:	b7 fc       	sbrc	r11, 7
    39b2:	c0 94       	com	r12
    39b4:	dc 2c       	mov	r13, r12
    39b6:	ce 01       	movw	r24, r28
    39b8:	b6 01       	movw	r22, r12
    39ba:	a5 01       	movw	r20, r10
    39bc:	2a e0       	ldi	r18, 0x0A	; 10
    39be:	30 e0       	ldi	r19, 0x00	; 0
    39c0:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <_ZN5Print5printEli>
    39c4:	c6 01       	movw	r24, r12
    39c6:	b5 01       	movw	r22, r10
    39c8:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__floatsisf>
    39cc:	9b 01       	movw	r18, r22
    39ce:	ac 01       	movw	r20, r24
    39d0:	c8 01       	movw	r24, r16
    39d2:	b7 01       	movw	r22, r14
    39d4:	0e 94 c6 12 	call	0x258c	; 0x258c <__subsf3>
    39d8:	9a 94       	dec	r9
    39da:	99 20       	and	r9, r9
    39dc:	e1 f6       	brne	.-72     	; 0x3996 <_ZN5Print10printFloatEdh+0xb8>
    39de:	df 91       	pop	r29
    39e0:	cf 91       	pop	r28
    39e2:	1f 91       	pop	r17
    39e4:	0f 91       	pop	r16
    39e6:	ff 90       	pop	r15
    39e8:	ef 90       	pop	r14
    39ea:	df 90       	pop	r13
    39ec:	cf 90       	pop	r12
    39ee:	bf 90       	pop	r11
    39f0:	af 90       	pop	r10
    39f2:	9f 90       	pop	r9
    39f4:	08 95       	ret

000039f6 <_ZN5Print5printEdi>:
    39f6:	0e 94 6f 1c 	call	0x38de	; 0x38de <_ZN5Print10printFloatEdh>
    39fa:	08 95       	ret

000039fc <_ZN5Print7printlnEdi>:
    39fc:	0f 93       	push	r16
    39fe:	1f 93       	push	r17
    3a00:	8c 01       	movw	r16, r24
    3a02:	0e 94 6f 1c 	call	0x38de	; 0x38de <_ZN5Print10printFloatEdh>
    3a06:	c8 01       	movw	r24, r16
    3a08:	0e 94 c4 1b 	call	0x3788	; 0x3788 <_ZN5Print7printlnEv>
    3a0c:	1f 91       	pop	r17
    3a0e:	0f 91       	pop	r16
    3a10:	08 95       	ret

00003a12 <_ZNK6String6charAtEj>:
    3a12:	fc 01       	movw	r30, r24
    3a14:	01 90       	ld	r0, Z+
    3a16:	f0 81       	ld	r31, Z
    3a18:	e0 2d       	mov	r30, r0
    3a1a:	e6 0f       	add	r30, r22
    3a1c:	f7 1f       	adc	r31, r23
    3a1e:	80 81       	ld	r24, Z
    3a20:	08 95       	ret

00003a22 <_ZN6String9setCharAtEjc>:
    3a22:	dc 01       	movw	r26, r24
    3a24:	ed 91       	ld	r30, X+
    3a26:	fc 91       	ld	r31, X
    3a28:	11 97       	sbiw	r26, 0x01	; 1
    3a2a:	30 97       	sbiw	r30, 0x00	; 0
    3a2c:	51 f0       	breq	.+20     	; 0x3a42 <_ZN6String9setCharAtEjc+0x20>
    3a2e:	14 96       	adiw	r26, 0x04	; 4
    3a30:	8d 91       	ld	r24, X+
    3a32:	9c 91       	ld	r25, X
    3a34:	15 97       	sbiw	r26, 0x05	; 5
    3a36:	68 17       	cp	r22, r24
    3a38:	79 07       	cpc	r23, r25
    3a3a:	18 f4       	brcc	.+6      	; 0x3a42 <_ZN6String9setCharAtEjc+0x20>
    3a3c:	e6 0f       	add	r30, r22
    3a3e:	f7 1f       	adc	r31, r23
    3a40:	40 83       	st	Z, r20
    3a42:	08 95       	ret

00003a44 <_ZN6StringixEj>:
    3a44:	fc 01       	movw	r30, r24
    3a46:	9b 01       	movw	r18, r22
    3a48:	84 81       	ldd	r24, Z+4	; 0x04
    3a4a:	95 81       	ldd	r25, Z+5	; 0x05
    3a4c:	68 17       	cp	r22, r24
    3a4e:	79 07       	cpc	r23, r25
    3a50:	28 f4       	brcc	.+10     	; 0x3a5c <_ZN6StringixEj+0x18>
    3a52:	60 81       	ld	r22, Z
    3a54:	71 81       	ldd	r23, Z+1	; 0x01
    3a56:	61 15       	cp	r22, r1
    3a58:	71 05       	cpc	r23, r1
    3a5a:	29 f4       	brne	.+10     	; 0x3a66 <_ZN6StringixEj+0x22>
    3a5c:	10 92 da 03 	sts	0x03DA, r1
    3a60:	6a ed       	ldi	r22, 0xDA	; 218
    3a62:	73 e0       	ldi	r23, 0x03	; 3
    3a64:	02 c0       	rjmp	.+4      	; 0x3a6a <_ZN6StringixEj+0x26>
    3a66:	62 0f       	add	r22, r18
    3a68:	73 1f       	adc	r23, r19
    3a6a:	cb 01       	movw	r24, r22
    3a6c:	08 95       	ret

00003a6e <_ZNK6StringixEj>:
    3a6e:	fc 01       	movw	r30, r24
    3a70:	01 90       	ld	r0, Z+
    3a72:	f0 81       	ld	r31, Z
    3a74:	e0 2d       	mov	r30, r0
    3a76:	e6 0f       	add	r30, r22
    3a78:	f7 1f       	adc	r31, r23
    3a7a:	80 81       	ld	r24, Z
    3a7c:	08 95       	ret

00003a7e <_ZN6String5toIntEv>:
    3a7e:	fc 01       	movw	r30, r24
    3a80:	80 81       	ld	r24, Z
    3a82:	91 81       	ldd	r25, Z+1	; 0x01
    3a84:	0e 94 51 2a 	call	0x54a2	; 0x54a2 <atol>
    3a88:	08 95       	ret

00003a8a <_ZN6String11toCharArrayEPcj>:
    3a8a:	0f 93       	push	r16
    3a8c:	1f 93       	push	r17
    3a8e:	cf 93       	push	r28
    3a90:	df 93       	push	r29
    3a92:	fc 01       	movw	r30, r24
    3a94:	8b 01       	movw	r16, r22
    3a96:	41 15       	cp	r20, r1
    3a98:	51 05       	cpc	r21, r1
    3a9a:	a1 f0       	breq	.+40     	; 0x3ac4 <_ZN6String11toCharArrayEPcj+0x3a>
    3a9c:	61 15       	cp	r22, r1
    3a9e:	71 05       	cpc	r23, r1
    3aa0:	89 f0       	breq	.+34     	; 0x3ac4 <_ZN6String11toCharArrayEPcj+0x3a>
    3aa2:	84 81       	ldd	r24, Z+4	; 0x04
    3aa4:	95 81       	ldd	r25, Z+5	; 0x05
    3aa6:	ea 01       	movw	r28, r20
    3aa8:	21 97       	sbiw	r28, 0x01	; 1
    3aaa:	8c 17       	cp	r24, r28
    3aac:	9d 07       	cpc	r25, r29
    3aae:	08 f4       	brcc	.+2      	; 0x3ab2 <_ZN6String11toCharArrayEPcj+0x28>
    3ab0:	ec 01       	movw	r28, r24
    3ab2:	60 81       	ld	r22, Z
    3ab4:	71 81       	ldd	r23, Z+1	; 0x01
    3ab6:	c8 01       	movw	r24, r16
    3ab8:	ae 01       	movw	r20, r28
    3aba:	0e 94 cd 2a 	call	0x559a	; 0x559a <strncpy>
    3abe:	c0 0f       	add	r28, r16
    3ac0:	d1 1f       	adc	r29, r17
    3ac2:	18 82       	st	Y, r1
    3ac4:	df 91       	pop	r29
    3ac6:	cf 91       	pop	r28
    3ac8:	1f 91       	pop	r17
    3aca:	0f 91       	pop	r16
    3acc:	08 95       	ret

00003ace <_ZN6String8getBytesEPhj>:
    3ace:	0f 93       	push	r16
    3ad0:	1f 93       	push	r17
    3ad2:	cf 93       	push	r28
    3ad4:	df 93       	push	r29
    3ad6:	fc 01       	movw	r30, r24
    3ad8:	8b 01       	movw	r16, r22
    3ada:	41 15       	cp	r20, r1
    3adc:	51 05       	cpc	r21, r1
    3ade:	a1 f0       	breq	.+40     	; 0x3b08 <_ZN6String8getBytesEPhj+0x3a>
    3ae0:	61 15       	cp	r22, r1
    3ae2:	71 05       	cpc	r23, r1
    3ae4:	89 f0       	breq	.+34     	; 0x3b08 <_ZN6String8getBytesEPhj+0x3a>
    3ae6:	84 81       	ldd	r24, Z+4	; 0x04
    3ae8:	95 81       	ldd	r25, Z+5	; 0x05
    3aea:	ea 01       	movw	r28, r20
    3aec:	21 97       	sbiw	r28, 0x01	; 1
    3aee:	8c 17       	cp	r24, r28
    3af0:	9d 07       	cpc	r25, r29
    3af2:	08 f4       	brcc	.+2      	; 0x3af6 <_ZN6String8getBytesEPhj+0x28>
    3af4:	ec 01       	movw	r28, r24
    3af6:	60 81       	ld	r22, Z
    3af8:	71 81       	ldd	r23, Z+1	; 0x01
    3afa:	c8 01       	movw	r24, r16
    3afc:	ae 01       	movw	r20, r28
    3afe:	0e 94 cd 2a 	call	0x559a	; 0x559a <strncpy>
    3b02:	c0 0f       	add	r28, r16
    3b04:	d1 1f       	adc	r29, r17
    3b06:	18 82       	st	Y, r1
    3b08:	df 91       	pop	r29
    3b0a:	cf 91       	pop	r28
    3b0c:	1f 91       	pop	r17
    3b0e:	0f 91       	pop	r16
    3b10:	08 95       	ret

00003b12 <_ZN6StringD1Ev>:
    3b12:	0f 93       	push	r16
    3b14:	1f 93       	push	r17
    3b16:	8c 01       	movw	r16, r24
    3b18:	fc 01       	movw	r30, r24
    3b1a:	80 81       	ld	r24, Z
    3b1c:	91 81       	ldd	r25, Z+1	; 0x01
    3b1e:	0e 94 2b 29 	call	0x5256	; 0x5256 <free>
    3b22:	f8 01       	movw	r30, r16
    3b24:	13 82       	std	Z+3, r1	; 0x03
    3b26:	12 82       	std	Z+2, r1	; 0x02
    3b28:	15 82       	std	Z+5, r1	; 0x05
    3b2a:	14 82       	std	Z+4, r1	; 0x04
    3b2c:	1f 91       	pop	r17
    3b2e:	0f 91       	pop	r16
    3b30:	08 95       	ret

00003b32 <_ZNK6String10startsWithERKS_j>:
    3b32:	fc 01       	movw	r30, r24
    3b34:	db 01       	movw	r26, r22
    3b36:	14 96       	adiw	r26, 0x04	; 4
    3b38:	2d 91       	ld	r18, X+
    3b3a:	3c 91       	ld	r19, X
    3b3c:	15 97       	sbiw	r26, 0x05	; 5
    3b3e:	84 81       	ldd	r24, Z+4	; 0x04
    3b40:	95 81       	ldd	r25, Z+5	; 0x05
    3b42:	82 1b       	sub	r24, r18
    3b44:	93 0b       	sbc	r25, r19
    3b46:	84 17       	cp	r24, r20
    3b48:	95 07       	cpc	r25, r21
    3b4a:	10 f4       	brcc	.+4      	; 0x3b50 <_ZNK6String10startsWithERKS_j+0x1e>
    3b4c:	80 e0       	ldi	r24, 0x00	; 0
    3b4e:	08 95       	ret
    3b50:	80 81       	ld	r24, Z
    3b52:	91 81       	ldd	r25, Z+1	; 0x01
    3b54:	6d 91       	ld	r22, X+
    3b56:	7c 91       	ld	r23, X
    3b58:	84 0f       	add	r24, r20
    3b5a:	95 1f       	adc	r25, r21
    3b5c:	a9 01       	movw	r20, r18
    3b5e:	0e 94 bf 2a 	call	0x557e	; 0x557e <strncmp>
    3b62:	9c 01       	movw	r18, r24
    3b64:	80 e0       	ldi	r24, 0x00	; 0
    3b66:	23 2b       	or	r18, r19
    3b68:	09 f4       	brne	.+2      	; 0x3b6c <_ZNK6String10startsWithERKS_j+0x3a>
    3b6a:	81 e0       	ldi	r24, 0x01	; 1
    3b6c:	08 95       	ret

00003b6e <_ZNK6String10startsWithERKS_>:
    3b6e:	fc 01       	movw	r30, r24
    3b70:	db 01       	movw	r26, r22
    3b72:	24 81       	ldd	r18, Z+4	; 0x04
    3b74:	35 81       	ldd	r19, Z+5	; 0x05
    3b76:	14 96       	adiw	r26, 0x04	; 4
    3b78:	8d 91       	ld	r24, X+
    3b7a:	9c 91       	ld	r25, X
    3b7c:	15 97       	sbiw	r26, 0x05	; 5
    3b7e:	28 17       	cp	r18, r24
    3b80:	39 07       	cpc	r19, r25
    3b82:	10 f4       	brcc	.+4      	; 0x3b88 <_ZNK6String10startsWithERKS_+0x1a>
    3b84:	80 e0       	ldi	r24, 0x00	; 0
    3b86:	08 95       	ret
    3b88:	cf 01       	movw	r24, r30
    3b8a:	40 e0       	ldi	r20, 0x00	; 0
    3b8c:	50 e0       	ldi	r21, 0x00	; 0
    3b8e:	0e 94 99 1d 	call	0x3b32	; 0x3b32 <_ZNK6String10startsWithERKS_j>
    3b92:	08 95       	ret

00003b94 <_ZNK6String11lastIndexOfEcj>:
    3b94:	df 92       	push	r13
    3b96:	ef 92       	push	r14
    3b98:	ff 92       	push	r15
    3b9a:	0f 93       	push	r16
    3b9c:	1f 93       	push	r17
    3b9e:	cf 93       	push	r28
    3ba0:	df 93       	push	r29
    3ba2:	ec 01       	movw	r28, r24
    3ba4:	8c 81       	ldd	r24, Y+4	; 0x04
    3ba6:	9d 81       	ldd	r25, Y+5	; 0x05
    3ba8:	48 17       	cp	r20, r24
    3baa:	59 07       	cpc	r21, r25
    3bac:	b8 f4       	brcc	.+46     	; 0x3bdc <_ZNK6String11lastIndexOfEcj+0x48>
    3bae:	7a 01       	movw	r14, r20
    3bb0:	08 94       	sec
    3bb2:	e1 1c       	adc	r14, r1
    3bb4:	f1 1c       	adc	r15, r1
    3bb6:	e8 81       	ld	r30, Y
    3bb8:	f9 81       	ldd	r31, Y+1	; 0x01
    3bba:	ee 0d       	add	r30, r14
    3bbc:	ff 1d       	adc	r31, r15
    3bbe:	d0 80       	ld	r13, Z
    3bc0:	10 82       	st	Z, r1
    3bc2:	08 81       	ld	r16, Y
    3bc4:	19 81       	ldd	r17, Y+1	; 0x01
    3bc6:	c8 01       	movw	r24, r16
    3bc8:	70 e0       	ldi	r23, 0x00	; 0
    3bca:	0e 94 dc 2a 	call	0x55b8	; 0x55b8 <strrchr>
    3bce:	9c 01       	movw	r18, r24
    3bd0:	0e 0d       	add	r16, r14
    3bd2:	1f 1d       	adc	r17, r15
    3bd4:	f8 01       	movw	r30, r16
    3bd6:	d0 82       	st	Z, r13
    3bd8:	00 97       	sbiw	r24, 0x00	; 0
    3bda:	19 f4       	brne	.+6      	; 0x3be2 <_ZNK6String11lastIndexOfEcj+0x4e>
    3bdc:	ef ef       	ldi	r30, 0xFF	; 255
    3bde:	ff ef       	ldi	r31, 0xFF	; 255
    3be0:	05 c0       	rjmp	.+10     	; 0x3bec <_ZNK6String11lastIndexOfEcj+0x58>
    3be2:	88 81       	ld	r24, Y
    3be4:	99 81       	ldd	r25, Y+1	; 0x01
    3be6:	f9 01       	movw	r30, r18
    3be8:	e8 1b       	sub	r30, r24
    3bea:	f9 0b       	sbc	r31, r25
    3bec:	cf 01       	movw	r24, r30
    3bee:	df 91       	pop	r29
    3bf0:	cf 91       	pop	r28
    3bf2:	1f 91       	pop	r17
    3bf4:	0f 91       	pop	r16
    3bf6:	ff 90       	pop	r15
    3bf8:	ef 90       	pop	r14
    3bfa:	df 90       	pop	r13
    3bfc:	08 95       	ret

00003bfe <_ZNK6String11lastIndexOfEc>:
    3bfe:	fc 01       	movw	r30, r24
    3c00:	44 81       	ldd	r20, Z+4	; 0x04
    3c02:	55 81       	ldd	r21, Z+5	; 0x05
    3c04:	41 50       	subi	r20, 0x01	; 1
    3c06:	50 40       	sbci	r21, 0x00	; 0
    3c08:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <_ZNK6String11lastIndexOfEcj>
    3c0c:	08 95       	ret

00003c0e <_ZNK6String7indexOfERKS_j>:
    3c0e:	cf 93       	push	r28
    3c10:	df 93       	push	r29
    3c12:	fc 01       	movw	r30, r24
    3c14:	db 01       	movw	r26, r22
    3c16:	84 81       	ldd	r24, Z+4	; 0x04
    3c18:	95 81       	ldd	r25, Z+5	; 0x05
    3c1a:	48 17       	cp	r20, r24
    3c1c:	59 07       	cpc	r21, r25
    3c1e:	60 f4       	brcc	.+24     	; 0x3c38 <_ZNK6String7indexOfERKS_j+0x2a>
    3c20:	c0 81       	ld	r28, Z
    3c22:	d1 81       	ldd	r29, Z+1	; 0x01
    3c24:	6d 91       	ld	r22, X+
    3c26:	7c 91       	ld	r23, X
    3c28:	ce 01       	movw	r24, r28
    3c2a:	84 0f       	add	r24, r20
    3c2c:	95 1f       	adc	r25, r21
    3c2e:	0e 94 e7 2a 	call	0x55ce	; 0x55ce <strstr>
    3c32:	9c 01       	movw	r18, r24
    3c34:	00 97       	sbiw	r24, 0x00	; 0
    3c36:	19 f4       	brne	.+6      	; 0x3c3e <_ZNK6String7indexOfERKS_j+0x30>
    3c38:	2f ef       	ldi	r18, 0xFF	; 255
    3c3a:	3f ef       	ldi	r19, 0xFF	; 255
    3c3c:	02 c0       	rjmp	.+4      	; 0x3c42 <_ZNK6String7indexOfERKS_j+0x34>
    3c3e:	2c 1b       	sub	r18, r28
    3c40:	3d 0b       	sbc	r19, r29
    3c42:	c9 01       	movw	r24, r18
    3c44:	df 91       	pop	r29
    3c46:	cf 91       	pop	r28
    3c48:	08 95       	ret

00003c4a <_ZNK6String7indexOfERKS_>:
    3c4a:	40 e0       	ldi	r20, 0x00	; 0
    3c4c:	50 e0       	ldi	r21, 0x00	; 0
    3c4e:	0e 94 07 1e 	call	0x3c0e	; 0x3c0e <_ZNK6String7indexOfERKS_j>
    3c52:	08 95       	ret

00003c54 <_ZNK6String7indexOfEcj>:
    3c54:	cf 93       	push	r28
    3c56:	df 93       	push	r29
    3c58:	fc 01       	movw	r30, r24
    3c5a:	84 81       	ldd	r24, Z+4	; 0x04
    3c5c:	95 81       	ldd	r25, Z+5	; 0x05
    3c5e:	48 17       	cp	r20, r24
    3c60:	59 07       	cpc	r21, r25
    3c62:	58 f4       	brcc	.+22     	; 0x3c7a <_ZNK6String7indexOfEcj+0x26>
    3c64:	c0 81       	ld	r28, Z
    3c66:	d1 81       	ldd	r29, Z+1	; 0x01
    3c68:	ce 01       	movw	r24, r28
    3c6a:	84 0f       	add	r24, r20
    3c6c:	95 1f       	adc	r25, r21
    3c6e:	70 e0       	ldi	r23, 0x00	; 0
    3c70:	0e 94 a4 2a 	call	0x5548	; 0x5548 <strchr>
    3c74:	9c 01       	movw	r18, r24
    3c76:	00 97       	sbiw	r24, 0x00	; 0
    3c78:	19 f4       	brne	.+6      	; 0x3c80 <_ZNK6String7indexOfEcj+0x2c>
    3c7a:	2f ef       	ldi	r18, 0xFF	; 255
    3c7c:	3f ef       	ldi	r19, 0xFF	; 255
    3c7e:	02 c0       	rjmp	.+4      	; 0x3c84 <_ZNK6String7indexOfEcj+0x30>
    3c80:	2c 1b       	sub	r18, r28
    3c82:	3d 0b       	sbc	r19, r29
    3c84:	c9 01       	movw	r24, r18
    3c86:	df 91       	pop	r29
    3c88:	cf 91       	pop	r28
    3c8a:	08 95       	ret

00003c8c <_ZNK6String7indexOfEc>:
    3c8c:	40 e0       	ldi	r20, 0x00	; 0
    3c8e:	50 e0       	ldi	r21, 0x00	; 0
    3c90:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <_ZNK6String7indexOfEcj>
    3c94:	08 95       	ret

00003c96 <_ZNK6String6equalsERKS_>:
    3c96:	dc 01       	movw	r26, r24
    3c98:	fb 01       	movw	r30, r22
    3c9a:	14 96       	adiw	r26, 0x04	; 4
    3c9c:	2d 91       	ld	r18, X+
    3c9e:	3c 91       	ld	r19, X
    3ca0:	15 97       	sbiw	r26, 0x05	; 5
    3ca2:	84 81       	ldd	r24, Z+4	; 0x04
    3ca4:	95 81       	ldd	r25, Z+5	; 0x05
    3ca6:	28 17       	cp	r18, r24
    3ca8:	39 07       	cpc	r19, r25
    3caa:	11 f0       	breq	.+4      	; 0x3cb0 <_ZNK6String6equalsERKS_+0x1a>
    3cac:	80 e0       	ldi	r24, 0x00	; 0
    3cae:	08 95       	ret
    3cb0:	60 81       	ld	r22, Z
    3cb2:	71 81       	ldd	r23, Z+1	; 0x01
    3cb4:	8d 91       	ld	r24, X+
    3cb6:	9c 91       	ld	r25, X
    3cb8:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3cbc:	9c 01       	movw	r18, r24
    3cbe:	80 e0       	ldi	r24, 0x00	; 0
    3cc0:	23 2b       	or	r18, r19
    3cc2:	09 f4       	brne	.+2      	; 0x3cc6 <_ZNK6String6equalsERKS_+0x30>
    3cc4:	81 e0       	ldi	r24, 0x01	; 1
    3cc6:	08 95       	ret

00003cc8 <_ZNK6String8endsWithERKS_>:
    3cc8:	fc 01       	movw	r30, r24
    3cca:	db 01       	movw	r26, r22
    3ccc:	24 81       	ldd	r18, Z+4	; 0x04
    3cce:	35 81       	ldd	r19, Z+5	; 0x05
    3cd0:	14 96       	adiw	r26, 0x04	; 4
    3cd2:	8d 91       	ld	r24, X+
    3cd4:	9c 91       	ld	r25, X
    3cd6:	15 97       	sbiw	r26, 0x05	; 5
    3cd8:	28 17       	cp	r18, r24
    3cda:	39 07       	cpc	r19, r25
    3cdc:	10 f4       	brcc	.+4      	; 0x3ce2 <_ZNK6String8endsWithERKS_+0x1a>
    3cde:	80 e0       	ldi	r24, 0x00	; 0
    3ce0:	08 95       	ret
    3ce2:	28 1b       	sub	r18, r24
    3ce4:	39 0b       	sbc	r19, r25
    3ce6:	80 81       	ld	r24, Z
    3ce8:	91 81       	ldd	r25, Z+1	; 0x01
    3cea:	6d 91       	ld	r22, X+
    3cec:	7c 91       	ld	r23, X
    3cee:	82 0f       	add	r24, r18
    3cf0:	93 1f       	adc	r25, r19
    3cf2:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3cf6:	9c 01       	movw	r18, r24
    3cf8:	80 e0       	ldi	r24, 0x00	; 0
    3cfa:	23 2b       	or	r18, r19
    3cfc:	09 f4       	brne	.+2      	; 0x3d00 <_ZNK6String8endsWithERKS_+0x38>
    3cfe:	81 e0       	ldi	r24, 0x01	; 1
    3d00:	08 95       	ret

00003d02 <_ZNK6StringgeERKS_>:
    3d02:	dc 01       	movw	r26, r24
    3d04:	fb 01       	movw	r30, r22
    3d06:	60 81       	ld	r22, Z
    3d08:	71 81       	ldd	r23, Z+1	; 0x01
    3d0a:	8d 91       	ld	r24, X+
    3d0c:	9c 91       	ld	r25, X
    3d0e:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3d12:	29 2f       	mov	r18, r25
    3d14:	33 27       	eor	r19, r19
    3d16:	27 fd       	sbrc	r18, 7
    3d18:	30 95       	com	r19
    3d1a:	20 95       	com	r18
    3d1c:	30 95       	com	r19
    3d1e:	22 27       	eor	r18, r18
    3d20:	33 0f       	add	r19, r19
    3d22:	22 1f       	adc	r18, r18
    3d24:	33 27       	eor	r19, r19
    3d26:	c9 01       	movw	r24, r18
    3d28:	08 95       	ret

00003d2a <_ZNK6StringleERKS_>:
    3d2a:	dc 01       	movw	r26, r24
    3d2c:	fb 01       	movw	r30, r22
    3d2e:	60 81       	ld	r22, Z
    3d30:	71 81       	ldd	r23, Z+1	; 0x01
    3d32:	8d 91       	ld	r24, X+
    3d34:	9c 91       	ld	r25, X
    3d36:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3d3a:	40 e0       	ldi	r20, 0x00	; 0
    3d3c:	50 e0       	ldi	r21, 0x00	; 0
    3d3e:	18 16       	cp	r1, r24
    3d40:	19 06       	cpc	r1, r25
    3d42:	14 f0       	brlt	.+4      	; 0x3d48 <_ZNK6StringleERKS_+0x1e>
    3d44:	41 e0       	ldi	r20, 0x01	; 1
    3d46:	50 e0       	ldi	r21, 0x00	; 0
    3d48:	ca 01       	movw	r24, r20
    3d4a:	08 95       	ret

00003d4c <_ZNK6StringgtERKS_>:
    3d4c:	dc 01       	movw	r26, r24
    3d4e:	fb 01       	movw	r30, r22
    3d50:	60 81       	ld	r22, Z
    3d52:	71 81       	ldd	r23, Z+1	; 0x01
    3d54:	8d 91       	ld	r24, X+
    3d56:	9c 91       	ld	r25, X
    3d58:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3d5c:	40 e0       	ldi	r20, 0x00	; 0
    3d5e:	50 e0       	ldi	r21, 0x00	; 0
    3d60:	18 16       	cp	r1, r24
    3d62:	19 06       	cpc	r1, r25
    3d64:	14 f4       	brge	.+4      	; 0x3d6a <_ZNK6StringgtERKS_+0x1e>
    3d66:	41 e0       	ldi	r20, 0x01	; 1
    3d68:	50 e0       	ldi	r21, 0x00	; 0
    3d6a:	ca 01       	movw	r24, r20
    3d6c:	08 95       	ret

00003d6e <_ZNK6StringltERKS_>:
    3d6e:	dc 01       	movw	r26, r24
    3d70:	fb 01       	movw	r30, r22
    3d72:	60 81       	ld	r22, Z
    3d74:	71 81       	ldd	r23, Z+1	; 0x01
    3d76:	8d 91       	ld	r24, X+
    3d78:	9c 91       	ld	r25, X
    3d7a:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3d7e:	29 2f       	mov	r18, r25
    3d80:	33 27       	eor	r19, r19
    3d82:	27 fd       	sbrc	r18, 7
    3d84:	30 95       	com	r19
    3d86:	22 27       	eor	r18, r18
    3d88:	33 0f       	add	r19, r19
    3d8a:	22 1f       	adc	r18, r18
    3d8c:	33 27       	eor	r19, r19
    3d8e:	c9 01       	movw	r24, r18
    3d90:	08 95       	ret

00003d92 <_ZNK6StringneERKS_>:
    3d92:	dc 01       	movw	r26, r24
    3d94:	fb 01       	movw	r30, r22
    3d96:	14 96       	adiw	r26, 0x04	; 4
    3d98:	2d 91       	ld	r18, X+
    3d9a:	3c 91       	ld	r19, X
    3d9c:	15 97       	sbiw	r26, 0x05	; 5
    3d9e:	84 81       	ldd	r24, Z+4	; 0x04
    3da0:	95 81       	ldd	r25, Z+5	; 0x05
    3da2:	28 17       	cp	r18, r24
    3da4:	39 07       	cpc	r19, r25
    3da6:	51 f4       	brne	.+20     	; 0x3dbc <_ZNK6StringneERKS_+0x2a>
    3da8:	60 81       	ld	r22, Z
    3daa:	71 81       	ldd	r23, Z+1	; 0x01
    3dac:	8d 91       	ld	r24, X+
    3dae:	9c 91       	ld	r25, X
    3db0:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3db4:	9c 01       	movw	r18, r24
    3db6:	80 e0       	ldi	r24, 0x00	; 0
    3db8:	23 2b       	or	r18, r19
    3dba:	09 f0       	breq	.+2      	; 0x3dbe <_ZNK6StringneERKS_+0x2c>
    3dbc:	81 e0       	ldi	r24, 0x01	; 1
    3dbe:	90 e0       	ldi	r25, 0x00	; 0
    3dc0:	08 95       	ret

00003dc2 <_ZNK6StringeqERKS_>:
    3dc2:	dc 01       	movw	r26, r24
    3dc4:	fb 01       	movw	r30, r22
    3dc6:	14 96       	adiw	r26, 0x04	; 4
    3dc8:	2d 91       	ld	r18, X+
    3dca:	3c 91       	ld	r19, X
    3dcc:	15 97       	sbiw	r26, 0x05	; 5
    3dce:	84 81       	ldd	r24, Z+4	; 0x04
    3dd0:	95 81       	ldd	r25, Z+5	; 0x05
    3dd2:	28 17       	cp	r18, r24
    3dd4:	39 07       	cpc	r19, r25
    3dd6:	11 f0       	breq	.+4      	; 0x3ddc <_ZNK6StringeqERKS_+0x1a>
    3dd8:	80 e0       	ldi	r24, 0x00	; 0
    3dda:	0b c0       	rjmp	.+22     	; 0x3df2 <_ZNK6StringeqERKS_+0x30>
    3ddc:	60 81       	ld	r22, Z
    3dde:	71 81       	ldd	r23, Z+1	; 0x01
    3de0:	8d 91       	ld	r24, X+
    3de2:	9c 91       	ld	r25, X
    3de4:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3de8:	9c 01       	movw	r18, r24
    3dea:	80 e0       	ldi	r24, 0x00	; 0
    3dec:	23 2b       	or	r18, r19
    3dee:	09 f4       	brne	.+2      	; 0x3df2 <_ZNK6StringeqERKS_+0x30>
    3df0:	81 e0       	ldi	r24, 0x01	; 1
    3df2:	90 e0       	ldi	r25, 0x00	; 0
    3df4:	08 95       	ret

00003df6 <_ZNK6String9compareToERKS_>:
    3df6:	fc 01       	movw	r30, r24
    3df8:	db 01       	movw	r26, r22
    3dfa:	6d 91       	ld	r22, X+
    3dfc:	7c 91       	ld	r23, X
    3dfe:	80 81       	ld	r24, Z
    3e00:	91 81       	ldd	r25, Z+1	; 0x01
    3e02:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    3e06:	08 95       	ret

00003e08 <_ZN6StringpLERKS_>:
    3e08:	0f 93       	push	r16
    3e0a:	1f 93       	push	r17
    3e0c:	cf 93       	push	r28
    3e0e:	df 93       	push	r29
    3e10:	ec 01       	movw	r28, r24
    3e12:	8b 01       	movw	r16, r22
    3e14:	fb 01       	movw	r30, r22
    3e16:	64 81       	ldd	r22, Z+4	; 0x04
    3e18:	75 81       	ldd	r23, Z+5	; 0x05
    3e1a:	8c 81       	ldd	r24, Y+4	; 0x04
    3e1c:	9d 81       	ldd	r25, Y+5	; 0x05
    3e1e:	68 0f       	add	r22, r24
    3e20:	79 1f       	adc	r23, r25
    3e22:	7d 83       	std	Y+5, r23	; 0x05
    3e24:	6c 83       	std	Y+4, r22	; 0x04
    3e26:	8a 81       	ldd	r24, Y+2	; 0x02
    3e28:	9b 81       	ldd	r25, Y+3	; 0x03
    3e2a:	86 17       	cp	r24, r22
    3e2c:	97 07       	cpc	r25, r23
    3e2e:	b8 f4       	brcc	.+46     	; 0x3e5e <_ZN6StringpLERKS_+0x56>
    3e30:	6f 5f       	subi	r22, 0xFF	; 255
    3e32:	7f 4f       	sbci	r23, 0xFF	; 255
    3e34:	88 81       	ld	r24, Y
    3e36:	99 81       	ldd	r25, Y+1	; 0x01
    3e38:	0e 94 83 29 	call	0x5306	; 0x5306 <realloc>
    3e3c:	4c 81       	ldd	r20, Y+4	; 0x04
    3e3e:	5d 81       	ldd	r21, Y+5	; 0x05
    3e40:	00 97       	sbiw	r24, 0x00	; 0
    3e42:	29 f0       	breq	.+10     	; 0x3e4e <_ZN6StringpLERKS_+0x46>
    3e44:	99 83       	std	Y+1, r25	; 0x01
    3e46:	88 83       	st	Y, r24
    3e48:	5b 83       	std	Y+3, r21	; 0x03
    3e4a:	4a 83       	std	Y+2, r20	; 0x02
    3e4c:	08 c0       	rjmp	.+16     	; 0x3e5e <_ZN6StringpLERKS_+0x56>
    3e4e:	f8 01       	movw	r30, r16
    3e50:	84 81       	ldd	r24, Z+4	; 0x04
    3e52:	95 81       	ldd	r25, Z+5	; 0x05
    3e54:	48 1b       	sub	r20, r24
    3e56:	59 0b       	sbc	r21, r25
    3e58:	5d 83       	std	Y+5, r21	; 0x05
    3e5a:	4c 83       	std	Y+4, r20	; 0x04
    3e5c:	07 c0       	rjmp	.+14     	; 0x3e6c <_ZN6StringpLERKS_+0x64>
    3e5e:	f8 01       	movw	r30, r16
    3e60:	60 81       	ld	r22, Z
    3e62:	71 81       	ldd	r23, Z+1	; 0x01
    3e64:	88 81       	ld	r24, Y
    3e66:	99 81       	ldd	r25, Y+1	; 0x01
    3e68:	0e 94 99 2a 	call	0x5532	; 0x5532 <strcat>
    3e6c:	ce 01       	movw	r24, r28
    3e6e:	df 91       	pop	r29
    3e70:	cf 91       	pop	r28
    3e72:	1f 91       	pop	r17
    3e74:	0f 91       	pop	r16
    3e76:	08 95       	ret

00003e78 <_ZN6String6concatERKS_>:
    3e78:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <_ZN6StringpLERKS_>
    3e7c:	08 95       	ret

00003e7e <_ZN6String9getBufferEj>:
    3e7e:	cf 93       	push	r28
    3e80:	df 93       	push	r29
    3e82:	ec 01       	movw	r28, r24
    3e84:	cb 01       	movw	r24, r22
    3e86:	7b 83       	std	Y+3, r23	; 0x03
    3e88:	6a 83       	std	Y+2, r22	; 0x02
    3e8a:	01 96       	adiw	r24, 0x01	; 1
    3e8c:	0e 94 7e 28 	call	0x50fc	; 0x50fc <malloc>
    3e90:	99 83       	std	Y+1, r25	; 0x01
    3e92:	88 83       	st	Y, r24
    3e94:	00 97       	sbiw	r24, 0x00	; 0
    3e96:	21 f4       	brne	.+8      	; 0x3ea0 <_ZN6String9getBufferEj+0x22>
    3e98:	1b 82       	std	Y+3, r1	; 0x03
    3e9a:	1a 82       	std	Y+2, r1	; 0x02
    3e9c:	1d 82       	std	Y+5, r1	; 0x05
    3e9e:	1c 82       	std	Y+4, r1	; 0x04
    3ea0:	df 91       	pop	r29
    3ea2:	cf 91       	pop	r28
    3ea4:	08 95       	ret

00003ea6 <_ZN6StringaSERKS_>:
    3ea6:	0f 93       	push	r16
    3ea8:	1f 93       	push	r17
    3eaa:	cf 93       	push	r28
    3eac:	df 93       	push	r29
    3eae:	ec 01       	movw	r28, r24
    3eb0:	8b 01       	movw	r16, r22
    3eb2:	86 17       	cp	r24, r22
    3eb4:	97 07       	cpc	r25, r23
    3eb6:	09 f1       	breq	.+66     	; 0x3efa <_ZN6StringaSERKS_+0x54>
    3eb8:	fb 01       	movw	r30, r22
    3eba:	24 81       	ldd	r18, Z+4	; 0x04
    3ebc:	35 81       	ldd	r19, Z+5	; 0x05
    3ebe:	8c 81       	ldd	r24, Y+4	; 0x04
    3ec0:	9d 81       	ldd	r25, Y+5	; 0x05
    3ec2:	82 17       	cp	r24, r18
    3ec4:	93 07       	cpc	r25, r19
    3ec6:	50 f4       	brcc	.+20     	; 0x3edc <_ZN6StringaSERKS_+0x36>
    3ec8:	88 81       	ld	r24, Y
    3eca:	99 81       	ldd	r25, Y+1	; 0x01
    3ecc:	0e 94 2b 29 	call	0x5256	; 0x5256 <free>
    3ed0:	f8 01       	movw	r30, r16
    3ed2:	64 81       	ldd	r22, Z+4	; 0x04
    3ed4:	75 81       	ldd	r23, Z+5	; 0x05
    3ed6:	ce 01       	movw	r24, r28
    3ed8:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    3edc:	28 81       	ld	r18, Y
    3ede:	39 81       	ldd	r19, Y+1	; 0x01
    3ee0:	21 15       	cp	r18, r1
    3ee2:	31 05       	cpc	r19, r1
    3ee4:	51 f0       	breq	.+20     	; 0x3efa <_ZN6StringaSERKS_+0x54>
    3ee6:	f8 01       	movw	r30, r16
    3ee8:	84 81       	ldd	r24, Z+4	; 0x04
    3eea:	95 81       	ldd	r25, Z+5	; 0x05
    3eec:	9d 83       	std	Y+5, r25	; 0x05
    3eee:	8c 83       	std	Y+4, r24	; 0x04
    3ef0:	60 81       	ld	r22, Z
    3ef2:	71 81       	ldd	r23, Z+1	; 0x01
    3ef4:	c9 01       	movw	r24, r18
    3ef6:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    3efa:	ce 01       	movw	r24, r28
    3efc:	df 91       	pop	r29
    3efe:	cf 91       	pop	r28
    3f00:	1f 91       	pop	r17
    3f02:	0f 91       	pop	r16
    3f04:	08 95       	ret

00003f06 <_ZN6StringC1Eh>:
    3f06:	1f 93       	push	r17
    3f08:	cf 93       	push	r28
    3f0a:	df 93       	push	r29
    3f0c:	ec 01       	movw	r28, r24
    3f0e:	16 2f       	mov	r17, r22
    3f10:	81 e0       	ldi	r24, 0x01	; 1
    3f12:	90 e0       	ldi	r25, 0x00	; 0
    3f14:	9d 83       	std	Y+5, r25	; 0x05
    3f16:	8c 83       	std	Y+4, r24	; 0x04
    3f18:	ce 01       	movw	r24, r28
    3f1a:	61 e0       	ldi	r22, 0x01	; 1
    3f1c:	70 e0       	ldi	r23, 0x00	; 0
    3f1e:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    3f22:	e8 81       	ld	r30, Y
    3f24:	f9 81       	ldd	r31, Y+1	; 0x01
    3f26:	30 97       	sbiw	r30, 0x00	; 0
    3f28:	21 f0       	breq	.+8      	; 0x3f32 <_ZN6StringC1Eh+0x2c>
    3f2a:	10 83       	st	Z, r17
    3f2c:	e8 81       	ld	r30, Y
    3f2e:	f9 81       	ldd	r31, Y+1	; 0x01
    3f30:	11 82       	std	Z+1, r1	; 0x01
    3f32:	df 91       	pop	r29
    3f34:	cf 91       	pop	r28
    3f36:	1f 91       	pop	r17
    3f38:	08 95       	ret

00003f3a <_ZN6StringC2Eh>:
    3f3a:	1f 93       	push	r17
    3f3c:	cf 93       	push	r28
    3f3e:	df 93       	push	r29
    3f40:	ec 01       	movw	r28, r24
    3f42:	16 2f       	mov	r17, r22
    3f44:	81 e0       	ldi	r24, 0x01	; 1
    3f46:	90 e0       	ldi	r25, 0x00	; 0
    3f48:	9d 83       	std	Y+5, r25	; 0x05
    3f4a:	8c 83       	std	Y+4, r24	; 0x04
    3f4c:	ce 01       	movw	r24, r28
    3f4e:	61 e0       	ldi	r22, 0x01	; 1
    3f50:	70 e0       	ldi	r23, 0x00	; 0
    3f52:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    3f56:	e8 81       	ld	r30, Y
    3f58:	f9 81       	ldd	r31, Y+1	; 0x01
    3f5a:	30 97       	sbiw	r30, 0x00	; 0
    3f5c:	21 f0       	breq	.+8      	; 0x3f66 <_ZN6StringC2Eh+0x2c>
    3f5e:	10 83       	st	Z, r17
    3f60:	e8 81       	ld	r30, Y
    3f62:	f9 81       	ldd	r31, Y+1	; 0x01
    3f64:	11 82       	std	Z+1, r1	; 0x01
    3f66:	df 91       	pop	r29
    3f68:	cf 91       	pop	r28
    3f6a:	1f 91       	pop	r17
    3f6c:	08 95       	ret

00003f6e <_ZN6StringC1Ec>:
    3f6e:	1f 93       	push	r17
    3f70:	cf 93       	push	r28
    3f72:	df 93       	push	r29
    3f74:	ec 01       	movw	r28, r24
    3f76:	16 2f       	mov	r17, r22
    3f78:	81 e0       	ldi	r24, 0x01	; 1
    3f7a:	90 e0       	ldi	r25, 0x00	; 0
    3f7c:	9d 83       	std	Y+5, r25	; 0x05
    3f7e:	8c 83       	std	Y+4, r24	; 0x04
    3f80:	ce 01       	movw	r24, r28
    3f82:	61 e0       	ldi	r22, 0x01	; 1
    3f84:	70 e0       	ldi	r23, 0x00	; 0
    3f86:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    3f8a:	e8 81       	ld	r30, Y
    3f8c:	f9 81       	ldd	r31, Y+1	; 0x01
    3f8e:	30 97       	sbiw	r30, 0x00	; 0
    3f90:	21 f0       	breq	.+8      	; 0x3f9a <_ZN6StringC1Ec+0x2c>
    3f92:	10 83       	st	Z, r17
    3f94:	e8 81       	ld	r30, Y
    3f96:	f9 81       	ldd	r31, Y+1	; 0x01
    3f98:	11 82       	std	Z+1, r1	; 0x01
    3f9a:	df 91       	pop	r29
    3f9c:	cf 91       	pop	r28
    3f9e:	1f 91       	pop	r17
    3fa0:	08 95       	ret

00003fa2 <_ZN6StringC2Ec>:
    3fa2:	1f 93       	push	r17
    3fa4:	cf 93       	push	r28
    3fa6:	df 93       	push	r29
    3fa8:	ec 01       	movw	r28, r24
    3faa:	16 2f       	mov	r17, r22
    3fac:	81 e0       	ldi	r24, 0x01	; 1
    3fae:	90 e0       	ldi	r25, 0x00	; 0
    3fb0:	9d 83       	std	Y+5, r25	; 0x05
    3fb2:	8c 83       	std	Y+4, r24	; 0x04
    3fb4:	ce 01       	movw	r24, r28
    3fb6:	61 e0       	ldi	r22, 0x01	; 1
    3fb8:	70 e0       	ldi	r23, 0x00	; 0
    3fba:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    3fbe:	e8 81       	ld	r30, Y
    3fc0:	f9 81       	ldd	r31, Y+1	; 0x01
    3fc2:	30 97       	sbiw	r30, 0x00	; 0
    3fc4:	21 f0       	breq	.+8      	; 0x3fce <_ZN6StringC2Ec+0x2c>
    3fc6:	10 83       	st	Z, r17
    3fc8:	e8 81       	ld	r30, Y
    3fca:	f9 81       	ldd	r31, Y+1	; 0x01
    3fcc:	11 82       	std	Z+1, r1	; 0x01
    3fce:	df 91       	pop	r29
    3fd0:	cf 91       	pop	r28
    3fd2:	1f 91       	pop	r17
    3fd4:	08 95       	ret

00003fd6 <_ZN6StringC1ERKS_>:
    3fd6:	0f 93       	push	r16
    3fd8:	1f 93       	push	r17
    3fda:	cf 93       	push	r28
    3fdc:	df 93       	push	r29
    3fde:	8c 01       	movw	r16, r24
    3fe0:	eb 01       	movw	r28, r22
    3fe2:	6c 81       	ldd	r22, Y+4	; 0x04
    3fe4:	7d 81       	ldd	r23, Y+5	; 0x05
    3fe6:	fc 01       	movw	r30, r24
    3fe8:	75 83       	std	Z+5, r23	; 0x05
    3fea:	64 83       	std	Z+4, r22	; 0x04
    3fec:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    3ff0:	f8 01       	movw	r30, r16
    3ff2:	80 81       	ld	r24, Z
    3ff4:	91 81       	ldd	r25, Z+1	; 0x01
    3ff6:	00 97       	sbiw	r24, 0x00	; 0
    3ff8:	21 f0       	breq	.+8      	; 0x4002 <_ZN6StringC1ERKS_+0x2c>
    3ffa:	68 81       	ld	r22, Y
    3ffc:	79 81       	ldd	r23, Y+1	; 0x01
    3ffe:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    4002:	df 91       	pop	r29
    4004:	cf 91       	pop	r28
    4006:	1f 91       	pop	r17
    4008:	0f 91       	pop	r16
    400a:	08 95       	ret

0000400c <_ZN6StringC2ERKS_>:
    400c:	0f 93       	push	r16
    400e:	1f 93       	push	r17
    4010:	cf 93       	push	r28
    4012:	df 93       	push	r29
    4014:	8c 01       	movw	r16, r24
    4016:	eb 01       	movw	r28, r22
    4018:	6c 81       	ldd	r22, Y+4	; 0x04
    401a:	7d 81       	ldd	r23, Y+5	; 0x05
    401c:	fc 01       	movw	r30, r24
    401e:	75 83       	std	Z+5, r23	; 0x05
    4020:	64 83       	std	Z+4, r22	; 0x04
    4022:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    4026:	f8 01       	movw	r30, r16
    4028:	80 81       	ld	r24, Z
    402a:	91 81       	ldd	r25, Z+1	; 0x01
    402c:	00 97       	sbiw	r24, 0x00	; 0
    402e:	21 f0       	breq	.+8      	; 0x4038 <_ZN6StringC2ERKS_+0x2c>
    4030:	68 81       	ld	r22, Y
    4032:	79 81       	ldd	r23, Y+1	; 0x01
    4034:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    4038:	df 91       	pop	r29
    403a:	cf 91       	pop	r28
    403c:	1f 91       	pop	r17
    403e:	0f 91       	pop	r16
    4040:	08 95       	ret

00004042 <_ZN6StringC1Emi>:
    4042:	ef 92       	push	r14
    4044:	ff 92       	push	r15
    4046:	0f 93       	push	r16
    4048:	1f 93       	push	r17
    404a:	df 93       	push	r29
    404c:	cf 93       	push	r28
    404e:	cd b7       	in	r28, 0x3d	; 61
    4050:	de b7       	in	r29, 0x3e	; 62
    4052:	a1 97       	sbiw	r28, 0x21	; 33
    4054:	0f b6       	in	r0, 0x3f	; 63
    4056:	f8 94       	cli
    4058:	de bf       	out	0x3e, r29	; 62
    405a:	0f be       	out	0x3f, r0	; 63
    405c:	cd bf       	out	0x3d, r28	; 61
    405e:	8c 01       	movw	r16, r24
    4060:	cb 01       	movw	r24, r22
    4062:	ba 01       	movw	r22, r20
    4064:	7e 01       	movw	r14, r28
    4066:	08 94       	sec
    4068:	e1 1c       	adc	r14, r1
    406a:	f1 1c       	adc	r15, r1
    406c:	a7 01       	movw	r20, r14
    406e:	2a e0       	ldi	r18, 0x0A	; 10
    4070:	30 e0       	ldi	r19, 0x00	; 0
    4072:	0e 94 6b 2b 	call	0x56d6	; 0x56d6 <ultoa>
    4076:	f7 01       	movw	r30, r14
    4078:	01 90       	ld	r0, Z+
    407a:	00 20       	and	r0, r0
    407c:	e9 f7       	brne	.-6      	; 0x4078 <_ZN6StringC1Emi+0x36>
    407e:	31 97       	sbiw	r30, 0x01	; 1
    4080:	ee 19       	sub	r30, r14
    4082:	ff 09       	sbc	r31, r15
    4084:	d8 01       	movw	r26, r16
    4086:	15 96       	adiw	r26, 0x05	; 5
    4088:	fc 93       	st	X, r31
    408a:	ee 93       	st	-X, r30
    408c:	14 97       	sbiw	r26, 0x04	; 4
    408e:	c8 01       	movw	r24, r16
    4090:	bf 01       	movw	r22, r30
    4092:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    4096:	f8 01       	movw	r30, r16
    4098:	80 81       	ld	r24, Z
    409a:	91 81       	ldd	r25, Z+1	; 0x01
    409c:	00 97       	sbiw	r24, 0x00	; 0
    409e:	19 f0       	breq	.+6      	; 0x40a6 <_ZN6StringC1Emi+0x64>
    40a0:	b7 01       	movw	r22, r14
    40a2:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    40a6:	a1 96       	adiw	r28, 0x21	; 33
    40a8:	0f b6       	in	r0, 0x3f	; 63
    40aa:	f8 94       	cli
    40ac:	de bf       	out	0x3e, r29	; 62
    40ae:	0f be       	out	0x3f, r0	; 63
    40b0:	cd bf       	out	0x3d, r28	; 61
    40b2:	cf 91       	pop	r28
    40b4:	df 91       	pop	r29
    40b6:	1f 91       	pop	r17
    40b8:	0f 91       	pop	r16
    40ba:	ff 90       	pop	r15
    40bc:	ef 90       	pop	r14
    40be:	08 95       	ret

000040c0 <_ZN6StringC2Emi>:
    40c0:	ef 92       	push	r14
    40c2:	ff 92       	push	r15
    40c4:	0f 93       	push	r16
    40c6:	1f 93       	push	r17
    40c8:	df 93       	push	r29
    40ca:	cf 93       	push	r28
    40cc:	cd b7       	in	r28, 0x3d	; 61
    40ce:	de b7       	in	r29, 0x3e	; 62
    40d0:	a1 97       	sbiw	r28, 0x21	; 33
    40d2:	0f b6       	in	r0, 0x3f	; 63
    40d4:	f8 94       	cli
    40d6:	de bf       	out	0x3e, r29	; 62
    40d8:	0f be       	out	0x3f, r0	; 63
    40da:	cd bf       	out	0x3d, r28	; 61
    40dc:	8c 01       	movw	r16, r24
    40de:	cb 01       	movw	r24, r22
    40e0:	ba 01       	movw	r22, r20
    40e2:	7e 01       	movw	r14, r28
    40e4:	08 94       	sec
    40e6:	e1 1c       	adc	r14, r1
    40e8:	f1 1c       	adc	r15, r1
    40ea:	a7 01       	movw	r20, r14
    40ec:	2a e0       	ldi	r18, 0x0A	; 10
    40ee:	30 e0       	ldi	r19, 0x00	; 0
    40f0:	0e 94 6b 2b 	call	0x56d6	; 0x56d6 <ultoa>
    40f4:	f7 01       	movw	r30, r14
    40f6:	01 90       	ld	r0, Z+
    40f8:	00 20       	and	r0, r0
    40fa:	e9 f7       	brne	.-6      	; 0x40f6 <_ZN6StringC2Emi+0x36>
    40fc:	31 97       	sbiw	r30, 0x01	; 1
    40fe:	ee 19       	sub	r30, r14
    4100:	ff 09       	sbc	r31, r15
    4102:	d8 01       	movw	r26, r16
    4104:	15 96       	adiw	r26, 0x05	; 5
    4106:	fc 93       	st	X, r31
    4108:	ee 93       	st	-X, r30
    410a:	14 97       	sbiw	r26, 0x04	; 4
    410c:	c8 01       	movw	r24, r16
    410e:	bf 01       	movw	r22, r30
    4110:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    4114:	f8 01       	movw	r30, r16
    4116:	80 81       	ld	r24, Z
    4118:	91 81       	ldd	r25, Z+1	; 0x01
    411a:	00 97       	sbiw	r24, 0x00	; 0
    411c:	19 f0       	breq	.+6      	; 0x4124 <_ZN6StringC2Emi+0x64>
    411e:	b7 01       	movw	r22, r14
    4120:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    4124:	a1 96       	adiw	r28, 0x21	; 33
    4126:	0f b6       	in	r0, 0x3f	; 63
    4128:	f8 94       	cli
    412a:	de bf       	out	0x3e, r29	; 62
    412c:	0f be       	out	0x3f, r0	; 63
    412e:	cd bf       	out	0x3d, r28	; 61
    4130:	cf 91       	pop	r28
    4132:	df 91       	pop	r29
    4134:	1f 91       	pop	r17
    4136:	0f 91       	pop	r16
    4138:	ff 90       	pop	r15
    413a:	ef 90       	pop	r14
    413c:	08 95       	ret

0000413e <_ZN6StringC1Eji>:
    413e:	ef 92       	push	r14
    4140:	ff 92       	push	r15
    4142:	0f 93       	push	r16
    4144:	1f 93       	push	r17
    4146:	df 93       	push	r29
    4148:	cf 93       	push	r28
    414a:	cd b7       	in	r28, 0x3d	; 61
    414c:	de b7       	in	r29, 0x3e	; 62
    414e:	a1 97       	sbiw	r28, 0x21	; 33
    4150:	0f b6       	in	r0, 0x3f	; 63
    4152:	f8 94       	cli
    4154:	de bf       	out	0x3e, r29	; 62
    4156:	0f be       	out	0x3f, r0	; 63
    4158:	cd bf       	out	0x3d, r28	; 61
    415a:	8c 01       	movw	r16, r24
    415c:	9a 01       	movw	r18, r20
    415e:	80 e0       	ldi	r24, 0x00	; 0
    4160:	90 e0       	ldi	r25, 0x00	; 0
    4162:	7e 01       	movw	r14, r28
    4164:	08 94       	sec
    4166:	e1 1c       	adc	r14, r1
    4168:	f1 1c       	adc	r15, r1
    416a:	a7 01       	movw	r20, r14
    416c:	0e 94 6b 2b 	call	0x56d6	; 0x56d6 <ultoa>
    4170:	f7 01       	movw	r30, r14
    4172:	01 90       	ld	r0, Z+
    4174:	00 20       	and	r0, r0
    4176:	e9 f7       	brne	.-6      	; 0x4172 <_ZN6StringC1Eji+0x34>
    4178:	31 97       	sbiw	r30, 0x01	; 1
    417a:	ee 19       	sub	r30, r14
    417c:	ff 09       	sbc	r31, r15
    417e:	d8 01       	movw	r26, r16
    4180:	15 96       	adiw	r26, 0x05	; 5
    4182:	fc 93       	st	X, r31
    4184:	ee 93       	st	-X, r30
    4186:	14 97       	sbiw	r26, 0x04	; 4
    4188:	c8 01       	movw	r24, r16
    418a:	bf 01       	movw	r22, r30
    418c:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    4190:	f8 01       	movw	r30, r16
    4192:	80 81       	ld	r24, Z
    4194:	91 81       	ldd	r25, Z+1	; 0x01
    4196:	00 97       	sbiw	r24, 0x00	; 0
    4198:	19 f0       	breq	.+6      	; 0x41a0 <_ZN6StringC1Eji+0x62>
    419a:	b7 01       	movw	r22, r14
    419c:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    41a0:	a1 96       	adiw	r28, 0x21	; 33
    41a2:	0f b6       	in	r0, 0x3f	; 63
    41a4:	f8 94       	cli
    41a6:	de bf       	out	0x3e, r29	; 62
    41a8:	0f be       	out	0x3f, r0	; 63
    41aa:	cd bf       	out	0x3d, r28	; 61
    41ac:	cf 91       	pop	r28
    41ae:	df 91       	pop	r29
    41b0:	1f 91       	pop	r17
    41b2:	0f 91       	pop	r16
    41b4:	ff 90       	pop	r15
    41b6:	ef 90       	pop	r14
    41b8:	08 95       	ret

000041ba <_ZN6StringC2Eji>:
    41ba:	ef 92       	push	r14
    41bc:	ff 92       	push	r15
    41be:	0f 93       	push	r16
    41c0:	1f 93       	push	r17
    41c2:	df 93       	push	r29
    41c4:	cf 93       	push	r28
    41c6:	cd b7       	in	r28, 0x3d	; 61
    41c8:	de b7       	in	r29, 0x3e	; 62
    41ca:	a1 97       	sbiw	r28, 0x21	; 33
    41cc:	0f b6       	in	r0, 0x3f	; 63
    41ce:	f8 94       	cli
    41d0:	de bf       	out	0x3e, r29	; 62
    41d2:	0f be       	out	0x3f, r0	; 63
    41d4:	cd bf       	out	0x3d, r28	; 61
    41d6:	8c 01       	movw	r16, r24
    41d8:	9a 01       	movw	r18, r20
    41da:	80 e0       	ldi	r24, 0x00	; 0
    41dc:	90 e0       	ldi	r25, 0x00	; 0
    41de:	7e 01       	movw	r14, r28
    41e0:	08 94       	sec
    41e2:	e1 1c       	adc	r14, r1
    41e4:	f1 1c       	adc	r15, r1
    41e6:	a7 01       	movw	r20, r14
    41e8:	0e 94 6b 2b 	call	0x56d6	; 0x56d6 <ultoa>
    41ec:	f7 01       	movw	r30, r14
    41ee:	01 90       	ld	r0, Z+
    41f0:	00 20       	and	r0, r0
    41f2:	e9 f7       	brne	.-6      	; 0x41ee <_ZN6StringC2Eji+0x34>
    41f4:	31 97       	sbiw	r30, 0x01	; 1
    41f6:	ee 19       	sub	r30, r14
    41f8:	ff 09       	sbc	r31, r15
    41fa:	d8 01       	movw	r26, r16
    41fc:	15 96       	adiw	r26, 0x05	; 5
    41fe:	fc 93       	st	X, r31
    4200:	ee 93       	st	-X, r30
    4202:	14 97       	sbiw	r26, 0x04	; 4
    4204:	c8 01       	movw	r24, r16
    4206:	bf 01       	movw	r22, r30
    4208:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    420c:	f8 01       	movw	r30, r16
    420e:	80 81       	ld	r24, Z
    4210:	91 81       	ldd	r25, Z+1	; 0x01
    4212:	00 97       	sbiw	r24, 0x00	; 0
    4214:	19 f0       	breq	.+6      	; 0x421c <_ZN6StringC2Eji+0x62>
    4216:	b7 01       	movw	r22, r14
    4218:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    421c:	a1 96       	adiw	r28, 0x21	; 33
    421e:	0f b6       	in	r0, 0x3f	; 63
    4220:	f8 94       	cli
    4222:	de bf       	out	0x3e, r29	; 62
    4224:	0f be       	out	0x3f, r0	; 63
    4226:	cd bf       	out	0x3d, r28	; 61
    4228:	cf 91       	pop	r28
    422a:	df 91       	pop	r29
    422c:	1f 91       	pop	r17
    422e:	0f 91       	pop	r16
    4230:	ff 90       	pop	r15
    4232:	ef 90       	pop	r14
    4234:	08 95       	ret

00004236 <_ZN6StringC1EPKc>:
    4236:	0f 93       	push	r16
    4238:	1f 93       	push	r17
    423a:	cf 93       	push	r28
    423c:	df 93       	push	r29
    423e:	8c 01       	movw	r16, r24
    4240:	eb 01       	movw	r28, r22
    4242:	61 15       	cp	r22, r1
    4244:	71 05       	cpc	r23, r1
    4246:	11 f4       	brne	.+4      	; 0x424c <_ZN6StringC1EPKc+0x16>
    4248:	c7 e5       	ldi	r28, 0x57	; 87
    424a:	d1 e0       	ldi	r29, 0x01	; 1
    424c:	fe 01       	movw	r30, r28
    424e:	01 90       	ld	r0, Z+
    4250:	00 20       	and	r0, r0
    4252:	e9 f7       	brne	.-6      	; 0x424e <_ZN6StringC1EPKc+0x18>
    4254:	31 97       	sbiw	r30, 0x01	; 1
    4256:	ec 1b       	sub	r30, r28
    4258:	fd 0b       	sbc	r31, r29
    425a:	d8 01       	movw	r26, r16
    425c:	15 96       	adiw	r26, 0x05	; 5
    425e:	fc 93       	st	X, r31
    4260:	ee 93       	st	-X, r30
    4262:	14 97       	sbiw	r26, 0x04	; 4
    4264:	c8 01       	movw	r24, r16
    4266:	bf 01       	movw	r22, r30
    4268:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    426c:	f8 01       	movw	r30, r16
    426e:	80 81       	ld	r24, Z
    4270:	91 81       	ldd	r25, Z+1	; 0x01
    4272:	00 97       	sbiw	r24, 0x00	; 0
    4274:	19 f0       	breq	.+6      	; 0x427c <_ZN6StringC1EPKc+0x46>
    4276:	be 01       	movw	r22, r28
    4278:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    427c:	df 91       	pop	r29
    427e:	cf 91       	pop	r28
    4280:	1f 91       	pop	r17
    4282:	0f 91       	pop	r16
    4284:	08 95       	ret

00004286 <_ZNK6String11toUpperCaseEv>:
    4286:	af 92       	push	r10
    4288:	bf 92       	push	r11
    428a:	cf 92       	push	r12
    428c:	df 92       	push	r13
    428e:	ef 92       	push	r14
    4290:	ff 92       	push	r15
    4292:	0f 93       	push	r16
    4294:	1f 93       	push	r17
    4296:	cf 93       	push	r28
    4298:	df 93       	push	r29
    429a:	b8 2e       	mov	r11, r24
    429c:	a9 2e       	mov	r10, r25
    429e:	6b 01       	movw	r12, r22
    42a0:	c8 2f       	mov	r28, r24
    42a2:	d9 2f       	mov	r29, r25
    42a4:	fb 01       	movw	r30, r22
    42a6:	60 81       	ld	r22, Z
    42a8:	71 81       	ldd	r23, Z+1	; 0x01
    42aa:	ce 01       	movw	r24, r28
    42ac:	0e 94 1b 21 	call	0x4236	; 0x4236 <_ZN6StringC1EPKc>
    42b0:	ee 24       	eor	r14, r14
    42b2:	ff 24       	eor	r15, r15
    42b4:	0e c0       	rjmp	.+28     	; 0x42d2 <_ZNK6String11toUpperCaseEv+0x4c>
    42b6:	08 81       	ld	r16, Y
    42b8:	19 81       	ldd	r17, Y+1	; 0x01
    42ba:	0e 0d       	add	r16, r14
    42bc:	1f 1d       	adc	r17, r15
    42be:	f8 01       	movw	r30, r16
    42c0:	80 81       	ld	r24, Z
    42c2:	90 e0       	ldi	r25, 0x00	; 0
    42c4:	0e 94 88 2a 	call	0x5510	; 0x5510 <toupper>
    42c8:	f8 01       	movw	r30, r16
    42ca:	80 83       	st	Z, r24
    42cc:	08 94       	sec
    42ce:	e1 1c       	adc	r14, r1
    42d0:	f1 1c       	adc	r15, r1
    42d2:	f6 01       	movw	r30, r12
    42d4:	84 81       	ldd	r24, Z+4	; 0x04
    42d6:	95 81       	ldd	r25, Z+5	; 0x05
    42d8:	e8 16       	cp	r14, r24
    42da:	f9 06       	cpc	r15, r25
    42dc:	60 f3       	brcs	.-40     	; 0x42b6 <_ZNK6String11toUpperCaseEv+0x30>
    42de:	8b 2d       	mov	r24, r11
    42e0:	9a 2d       	mov	r25, r10
    42e2:	df 91       	pop	r29
    42e4:	cf 91       	pop	r28
    42e6:	1f 91       	pop	r17
    42e8:	0f 91       	pop	r16
    42ea:	ff 90       	pop	r15
    42ec:	ef 90       	pop	r14
    42ee:	df 90       	pop	r13
    42f0:	cf 90       	pop	r12
    42f2:	bf 90       	pop	r11
    42f4:	af 90       	pop	r10
    42f6:	08 95       	ret

000042f8 <_ZNK6String11toLowerCaseEv>:
    42f8:	af 92       	push	r10
    42fa:	bf 92       	push	r11
    42fc:	cf 92       	push	r12
    42fe:	df 92       	push	r13
    4300:	ef 92       	push	r14
    4302:	ff 92       	push	r15
    4304:	0f 93       	push	r16
    4306:	1f 93       	push	r17
    4308:	cf 93       	push	r28
    430a:	df 93       	push	r29
    430c:	b8 2e       	mov	r11, r24
    430e:	a9 2e       	mov	r10, r25
    4310:	6b 01       	movw	r12, r22
    4312:	c8 2f       	mov	r28, r24
    4314:	d9 2f       	mov	r29, r25
    4316:	fb 01       	movw	r30, r22
    4318:	60 81       	ld	r22, Z
    431a:	71 81       	ldd	r23, Z+1	; 0x01
    431c:	ce 01       	movw	r24, r28
    431e:	0e 94 1b 21 	call	0x4236	; 0x4236 <_ZN6StringC1EPKc>
    4322:	ee 24       	eor	r14, r14
    4324:	ff 24       	eor	r15, r15
    4326:	0e c0       	rjmp	.+28     	; 0x4344 <_ZNK6String11toLowerCaseEv+0x4c>
    4328:	08 81       	ld	r16, Y
    432a:	19 81       	ldd	r17, Y+1	; 0x01
    432c:	0e 0d       	add	r16, r14
    432e:	1f 1d       	adc	r17, r15
    4330:	f8 01       	movw	r30, r16
    4332:	80 81       	ld	r24, Z
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	0e 94 80 2a 	call	0x5500	; 0x5500 <tolower>
    433a:	f8 01       	movw	r30, r16
    433c:	80 83       	st	Z, r24
    433e:	08 94       	sec
    4340:	e1 1c       	adc	r14, r1
    4342:	f1 1c       	adc	r15, r1
    4344:	f6 01       	movw	r30, r12
    4346:	84 81       	ldd	r24, Z+4	; 0x04
    4348:	95 81       	ldd	r25, Z+5	; 0x05
    434a:	e8 16       	cp	r14, r24
    434c:	f9 06       	cpc	r15, r25
    434e:	60 f3       	brcs	.-40     	; 0x4328 <_ZNK6String11toLowerCaseEv+0x30>
    4350:	8b 2d       	mov	r24, r11
    4352:	9a 2d       	mov	r25, r10
    4354:	df 91       	pop	r29
    4356:	cf 91       	pop	r28
    4358:	1f 91       	pop	r17
    435a:	0f 91       	pop	r16
    435c:	ff 90       	pop	r15
    435e:	ef 90       	pop	r14
    4360:	df 90       	pop	r13
    4362:	cf 90       	pop	r12
    4364:	bf 90       	pop	r11
    4366:	af 90       	pop	r10
    4368:	08 95       	ret

0000436a <_ZNK6String16equalsIgnoreCaseERKS_>:
    436a:	ef 92       	push	r14
    436c:	ff 92       	push	r15
    436e:	0f 93       	push	r16
    4370:	1f 93       	push	r17
    4372:	df 93       	push	r29
    4374:	cf 93       	push	r28
    4376:	cd b7       	in	r28, 0x3d	; 61
    4378:	de b7       	in	r29, 0x3e	; 62
    437a:	2c 97       	sbiw	r28, 0x0c	; 12
    437c:	0f b6       	in	r0, 0x3f	; 63
    437e:	f8 94       	cli
    4380:	de bf       	out	0x3e, r29	; 62
    4382:	0f be       	out	0x3f, r0	; 63
    4384:	cd bf       	out	0x3d, r28	; 61
    4386:	fc 01       	movw	r30, r24
    4388:	7b 01       	movw	r14, r22
    438a:	86 17       	cp	r24, r22
    438c:	97 07       	cpc	r25, r23
    438e:	11 f4       	brne	.+4      	; 0x4394 <_ZNK6String16equalsIgnoreCaseERKS_+0x2a>
    4390:	01 e0       	ldi	r16, 0x01	; 1
    4392:	29 c0       	rjmp	.+82     	; 0x43e6 <_ZNK6String16equalsIgnoreCaseERKS_+0x7c>
    4394:	24 81       	ldd	r18, Z+4	; 0x04
    4396:	35 81       	ldd	r19, Z+5	; 0x05
    4398:	db 01       	movw	r26, r22
    439a:	14 96       	adiw	r26, 0x04	; 4
    439c:	8d 91       	ld	r24, X+
    439e:	9c 91       	ld	r25, X
    43a0:	15 97       	sbiw	r26, 0x05	; 5
    43a2:	28 17       	cp	r18, r24
    43a4:	39 07       	cpc	r19, r25
    43a6:	11 f0       	breq	.+4      	; 0x43ac <_ZNK6String16equalsIgnoreCaseERKS_+0x42>
    43a8:	00 e0       	ldi	r16, 0x00	; 0
    43aa:	1d c0       	rjmp	.+58     	; 0x43e6 <_ZNK6String16equalsIgnoreCaseERKS_+0x7c>
    43ac:	ce 01       	movw	r24, r28
    43ae:	01 96       	adiw	r24, 0x01	; 1
    43b0:	bf 01       	movw	r22, r30
    43b2:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <_ZNK6String11toLowerCaseEv>
    43b6:	09 81       	ldd	r16, Y+1	; 0x01
    43b8:	1a 81       	ldd	r17, Y+2	; 0x02
    43ba:	ce 01       	movw	r24, r28
    43bc:	07 96       	adiw	r24, 0x07	; 7
    43be:	b7 01       	movw	r22, r14
    43c0:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <_ZNK6String11toLowerCaseEv>
    43c4:	6f 81       	ldd	r22, Y+7	; 0x07
    43c6:	78 85       	ldd	r23, Y+8	; 0x08
    43c8:	c8 01       	movw	r24, r16
    43ca:	0e 94 af 2a 	call	0x555e	; 0x555e <strcmp>
    43ce:	00 e0       	ldi	r16, 0x00	; 0
    43d0:	00 97       	sbiw	r24, 0x00	; 0
    43d2:	09 f4       	brne	.+2      	; 0x43d6 <_ZNK6String16equalsIgnoreCaseERKS_+0x6c>
    43d4:	01 e0       	ldi	r16, 0x01	; 1
    43d6:	ce 01       	movw	r24, r28
    43d8:	07 96       	adiw	r24, 0x07	; 7
    43da:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    43de:	ce 01       	movw	r24, r28
    43e0:	01 96       	adiw	r24, 0x01	; 1
    43e2:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    43e6:	80 2f       	mov	r24, r16
    43e8:	2c 96       	adiw	r28, 0x0c	; 12
    43ea:	0f b6       	in	r0, 0x3f	; 63
    43ec:	f8 94       	cli
    43ee:	de bf       	out	0x3e, r29	; 62
    43f0:	0f be       	out	0x3f, r0	; 63
    43f2:	cd bf       	out	0x3d, r28	; 61
    43f4:	cf 91       	pop	r28
    43f6:	df 91       	pop	r29
    43f8:	1f 91       	pop	r17
    43fa:	0f 91       	pop	r16
    43fc:	ff 90       	pop	r15
    43fe:	ef 90       	pop	r14
    4400:	08 95       	ret

00004402 <_ZNK6String9substringEjj>:
    4402:	cf 92       	push	r12
    4404:	df 92       	push	r13
    4406:	ef 92       	push	r14
    4408:	ff 92       	push	r15
    440a:	1f 93       	push	r17
    440c:	cf 93       	push	r28
    440e:	df 93       	push	r29
    4410:	6c 01       	movw	r12, r24
    4412:	7b 01       	movw	r14, r22
    4414:	b9 01       	movw	r22, r18
    4416:	24 17       	cp	r18, r20
    4418:	35 07       	cpc	r19, r21
    441a:	10 f4       	brcc	.+4      	; 0x4420 <_ZNK6String9substringEjj+0x1e>
    441c:	ba 01       	movw	r22, r20
    441e:	a9 01       	movw	r20, r18
    4420:	d7 01       	movw	r26, r14
    4422:	14 96       	adiw	r26, 0x04	; 4
    4424:	8d 91       	ld	r24, X+
    4426:	9c 91       	ld	r25, X
    4428:	15 97       	sbiw	r26, 0x05	; 5
    442a:	eb 01       	movw	r28, r22
    442c:	86 17       	cp	r24, r22
    442e:	97 07       	cpc	r25, r23
    4430:	08 f4       	brcc	.+2      	; 0x4434 <_ZNK6String9substringEjj+0x32>
    4432:	ec 01       	movw	r28, r24
    4434:	d7 01       	movw	r26, r14
    4436:	ed 91       	ld	r30, X+
    4438:	fc 91       	ld	r31, X
    443a:	11 97       	sbiw	r26, 0x01	; 1
    443c:	ec 0f       	add	r30, r28
    443e:	fd 1f       	adc	r31, r29
    4440:	10 81       	ld	r17, Z
    4442:	10 82       	st	Z, r1
    4444:	6d 91       	ld	r22, X+
    4446:	7c 91       	ld	r23, X
    4448:	64 0f       	add	r22, r20
    444a:	75 1f       	adc	r23, r21
    444c:	c6 01       	movw	r24, r12
    444e:	0e 94 1b 21 	call	0x4236	; 0x4236 <_ZN6StringC1EPKc>
    4452:	d7 01       	movw	r26, r14
    4454:	ed 91       	ld	r30, X+
    4456:	fc 91       	ld	r31, X
    4458:	ec 0f       	add	r30, r28
    445a:	fd 1f       	adc	r31, r29
    445c:	10 83       	st	Z, r17
    445e:	c6 01       	movw	r24, r12
    4460:	df 91       	pop	r29
    4462:	cf 91       	pop	r28
    4464:	1f 91       	pop	r17
    4466:	ff 90       	pop	r15
    4468:	ef 90       	pop	r14
    446a:	df 90       	pop	r13
    446c:	cf 90       	pop	r12
    446e:	08 95       	ret

00004470 <_ZNK6String9substringEj>:
    4470:	0f 93       	push	r16
    4472:	1f 93       	push	r17
    4474:	8c 01       	movw	r16, r24
    4476:	fb 01       	movw	r30, r22
    4478:	24 81       	ldd	r18, Z+4	; 0x04
    447a:	35 81       	ldd	r19, Z+5	; 0x05
    447c:	0e 94 01 22 	call	0x4402	; 0x4402 <_ZNK6String9substringEjj>
    4480:	c8 01       	movw	r24, r16
    4482:	1f 91       	pop	r17
    4484:	0f 91       	pop	r16
    4486:	08 95       	ret

00004488 <_ZNK6String11lastIndexOfERKS_j>:
    4488:	8f 92       	push	r8
    448a:	9f 92       	push	r9
    448c:	af 92       	push	r10
    448e:	bf 92       	push	r11
    4490:	cf 92       	push	r12
    4492:	df 92       	push	r13
    4494:	ef 92       	push	r14
    4496:	ff 92       	push	r15
    4498:	0f 93       	push	r16
    449a:	1f 93       	push	r17
    449c:	df 93       	push	r29
    449e:	cf 93       	push	r28
    44a0:	00 d0       	rcall	.+0      	; 0x44a2 <_ZNK6String11lastIndexOfERKS_j+0x1a>
    44a2:	00 d0       	rcall	.+0      	; 0x44a4 <_ZNK6String11lastIndexOfERKS_j+0x1c>
    44a4:	00 d0       	rcall	.+0      	; 0x44a6 <_ZNK6String11lastIndexOfERKS_j+0x1e>
    44a6:	cd b7       	in	r28, 0x3d	; 61
    44a8:	de b7       	in	r29, 0x3e	; 62
    44aa:	5c 01       	movw	r10, r24
    44ac:	6b 01       	movw	r12, r22
    44ae:	db 01       	movw	r26, r22
    44b0:	14 96       	adiw	r26, 0x04	; 4
    44b2:	8d 91       	ld	r24, X+
    44b4:	9c 91       	ld	r25, X
    44b6:	15 97       	sbiw	r26, 0x05	; 5
    44b8:	00 97       	sbiw	r24, 0x00	; 0
    44ba:	a1 f1       	breq	.+104    	; 0x4524 <_ZNK6String11lastIndexOfERKS_j+0x9c>
    44bc:	01 97       	sbiw	r24, 0x01	; 1
    44be:	48 17       	cp	r20, r24
    44c0:	59 07       	cpc	r21, r25
    44c2:	80 f1       	brcs	.+96     	; 0x4524 <_ZNK6String11lastIndexOfERKS_j+0x9c>
    44c4:	f5 01       	movw	r30, r10
    44c6:	84 81       	ldd	r24, Z+4	; 0x04
    44c8:	95 81       	ldd	r25, Z+5	; 0x05
    44ca:	48 17       	cp	r20, r24
    44cc:	59 07       	cpc	r21, r25
    44ce:	50 f5       	brcc	.+84     	; 0x4524 <_ZNK6String11lastIndexOfERKS_j+0x9c>
    44d0:	ed 91       	ld	r30, X+
    44d2:	fc 91       	ld	r31, X
    44d4:	00 81       	ld	r16, Z
    44d6:	7a 01       	movw	r14, r20
    44d8:	4e 01       	movw	r8, r28
    44da:	08 94       	sec
    44dc:	81 1c       	adc	r8, r1
    44de:	91 1c       	adc	r9, r1
    44e0:	1f c0       	rjmp	.+62     	; 0x4520 <_ZNK6String11lastIndexOfERKS_j+0x98>
    44e2:	d5 01       	movw	r26, r10
    44e4:	ed 91       	ld	r30, X+
    44e6:	fc 91       	ld	r31, X
    44e8:	ee 0d       	add	r30, r14
    44ea:	ff 1d       	adc	r31, r15
    44ec:	80 81       	ld	r24, Z
    44ee:	80 17       	cp	r24, r16
    44f0:	a1 f4       	brne	.+40     	; 0x451a <_ZNK6String11lastIndexOfERKS_j+0x92>
    44f2:	f6 01       	movw	r30, r12
    44f4:	24 81       	ldd	r18, Z+4	; 0x04
    44f6:	35 81       	ldd	r19, Z+5	; 0x05
    44f8:	2e 0d       	add	r18, r14
    44fa:	3f 1d       	adc	r19, r15
    44fc:	c4 01       	movw	r24, r8
    44fe:	b5 01       	movw	r22, r10
    4500:	a7 01       	movw	r20, r14
    4502:	0e 94 01 22 	call	0x4402	; 0x4402 <_ZNK6String9substringEjj>
    4506:	c4 01       	movw	r24, r8
    4508:	b6 01       	movw	r22, r12
    450a:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <_ZNK6String6equalsERKS_>
    450e:	18 2f       	mov	r17, r24
    4510:	c4 01       	movw	r24, r8
    4512:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    4516:	11 23       	and	r17, r17
    4518:	41 f4       	brne	.+16     	; 0x452a <_ZNK6String11lastIndexOfERKS_j+0xa2>
    451a:	08 94       	sec
    451c:	e1 08       	sbc	r14, r1
    451e:	f1 08       	sbc	r15, r1
    4520:	f7 fe       	sbrs	r15, 7
    4522:	df cf       	rjmp	.-66     	; 0x44e2 <_ZNK6String11lastIndexOfERKS_j+0x5a>
    4524:	ee 24       	eor	r14, r14
    4526:	ea 94       	dec	r14
    4528:	fe 2c       	mov	r15, r14
    452a:	c7 01       	movw	r24, r14
    452c:	26 96       	adiw	r28, 0x06	; 6
    452e:	0f b6       	in	r0, 0x3f	; 63
    4530:	f8 94       	cli
    4532:	de bf       	out	0x3e, r29	; 62
    4534:	0f be       	out	0x3f, r0	; 63
    4536:	cd bf       	out	0x3d, r28	; 61
    4538:	cf 91       	pop	r28
    453a:	df 91       	pop	r29
    453c:	1f 91       	pop	r17
    453e:	0f 91       	pop	r16
    4540:	ff 90       	pop	r15
    4542:	ef 90       	pop	r14
    4544:	df 90       	pop	r13
    4546:	cf 90       	pop	r12
    4548:	bf 90       	pop	r11
    454a:	af 90       	pop	r10
    454c:	9f 90       	pop	r9
    454e:	8f 90       	pop	r8
    4550:	08 95       	ret

00004552 <_ZNK6String11lastIndexOfERKS_>:
    4552:	fc 01       	movw	r30, r24
    4554:	db 01       	movw	r26, r22
    4556:	44 81       	ldd	r20, Z+4	; 0x04
    4558:	55 81       	ldd	r21, Z+5	; 0x05
    455a:	14 96       	adiw	r26, 0x04	; 4
    455c:	8d 91       	ld	r24, X+
    455e:	9c 91       	ld	r25, X
    4560:	15 97       	sbiw	r26, 0x05	; 5
    4562:	48 1b       	sub	r20, r24
    4564:	59 0b       	sbc	r21, r25
    4566:	cf 01       	movw	r24, r30
    4568:	0e 94 44 22 	call	0x4488	; 0x4488 <_ZNK6String11lastIndexOfERKS_j>
    456c:	08 95       	ret

0000456e <_ZNK6String4trimEv>:
    456e:	af 92       	push	r10
    4570:	bf 92       	push	r11
    4572:	cf 92       	push	r12
    4574:	df 92       	push	r13
    4576:	ef 92       	push	r14
    4578:	ff 92       	push	r15
    457a:	0f 93       	push	r16
    457c:	1f 93       	push	r17
    457e:	df 93       	push	r29
    4580:	cf 93       	push	r28
    4582:	00 d0       	rcall	.+0      	; 0x4584 <_ZNK6String4trimEv+0x16>
    4584:	00 d0       	rcall	.+0      	; 0x4586 <_ZNK6String4trimEv+0x18>
    4586:	00 d0       	rcall	.+0      	; 0x4588 <_ZNK6String4trimEv+0x1a>
    4588:	cd b7       	in	r28, 0x3d	; 61
    458a:	de b7       	in	r29, 0x3e	; 62
    458c:	5c 01       	movw	r10, r24
    458e:	8b 01       	movw	r16, r22
    4590:	db 01       	movw	r26, r22
    4592:	6d 91       	ld	r22, X+
    4594:	7c 91       	ld	r23, X
    4596:	61 15       	cp	r22, r1
    4598:	71 05       	cpc	r23, r1
    459a:	21 f4       	brne	.+8      	; 0x45a4 <_ZNK6String4trimEv+0x36>
    459c:	b8 01       	movw	r22, r16
    459e:	0e 94 eb 1f 	call	0x3fd6	; 0x3fd6 <_ZN6StringC1ERKS_>
    45a2:	3e c0       	rjmp	.+124    	; 0x4620 <_ZNK6String4trimEv+0xb2>
    45a4:	ce 01       	movw	r24, r28
    45a6:	01 96       	adiw	r24, 0x01	; 1
    45a8:	0e 94 1b 21 	call	0x4236	; 0x4236 <_ZN6StringC1EPKc>
    45ac:	f8 01       	movw	r30, r16
    45ae:	e4 80       	ldd	r14, Z+4	; 0x04
    45b0:	f5 80       	ldd	r15, Z+5	; 0x05
    45b2:	cc 24       	eor	r12, r12
    45b4:	dd 24       	eor	r13, r13
    45b6:	0e c0       	rjmp	.+28     	; 0x45d4 <_ZNK6String4trimEv+0x66>
    45b8:	d8 01       	movw	r26, r16
    45ba:	ed 91       	ld	r30, X+
    45bc:	fc 91       	ld	r31, X
    45be:	ec 0d       	add	r30, r12
    45c0:	fd 1d       	adc	r31, r13
    45c2:	80 81       	ld	r24, Z
    45c4:	90 e0       	ldi	r25, 0x00	; 0
    45c6:	0e 94 78 2a 	call	0x54f0	; 0x54f0 <isspace>
    45ca:	89 2b       	or	r24, r25
    45cc:	31 f0       	breq	.+12     	; 0x45da <_ZNK6String4trimEv+0x6c>
    45ce:	08 94       	sec
    45d0:	c1 1c       	adc	r12, r1
    45d2:	d1 1c       	adc	r13, r1
    45d4:	ce 14       	cp	r12, r14
    45d6:	df 04       	cpc	r13, r15
    45d8:	78 f3       	brcs	.-34     	; 0x45b8 <_ZNK6String4trimEv+0x4a>
    45da:	ed 80       	ldd	r14, Y+5	; 0x05
    45dc:	fe 80       	ldd	r15, Y+6	; 0x06
    45de:	0b c0       	rjmp	.+22     	; 0x45f6 <_ZNK6String4trimEv+0x88>
    45e0:	d8 01       	movw	r26, r16
    45e2:	ed 91       	ld	r30, X+
    45e4:	fc 91       	ld	r31, X
    45e6:	ee 0d       	add	r30, r14
    45e8:	ff 1d       	adc	r31, r15
    45ea:	80 81       	ld	r24, Z
    45ec:	90 e0       	ldi	r25, 0x00	; 0
    45ee:	0e 94 78 2a 	call	0x54f0	; 0x54f0 <isspace>
    45f2:	89 2b       	or	r24, r25
    45f4:	31 f0       	breq	.+12     	; 0x4602 <_ZNK6String4trimEv+0x94>
    45f6:	08 94       	sec
    45f8:	e1 08       	sbc	r14, r1
    45fa:	f1 08       	sbc	r15, r1
    45fc:	ce 14       	cp	r12, r14
    45fe:	df 04       	cpc	r13, r15
    4600:	78 f3       	brcs	.-34     	; 0x45e0 <_ZNK6String4trimEv+0x72>
    4602:	08 94       	sec
    4604:	e1 1c       	adc	r14, r1
    4606:	f1 1c       	adc	r15, r1
    4608:	c5 01       	movw	r24, r10
    460a:	8e 01       	movw	r16, r28
    460c:	0f 5f       	subi	r16, 0xFF	; 255
    460e:	1f 4f       	sbci	r17, 0xFF	; 255
    4610:	b8 01       	movw	r22, r16
    4612:	a6 01       	movw	r20, r12
    4614:	97 01       	movw	r18, r14
    4616:	0e 94 01 22 	call	0x4402	; 0x4402 <_ZNK6String9substringEjj>
    461a:	c8 01       	movw	r24, r16
    461c:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    4620:	c5 01       	movw	r24, r10
    4622:	26 96       	adiw	r28, 0x06	; 6
    4624:	0f b6       	in	r0, 0x3f	; 63
    4626:	f8 94       	cli
    4628:	de bf       	out	0x3e, r29	; 62
    462a:	0f be       	out	0x3f, r0	; 63
    462c:	cd bf       	out	0x3d, r28	; 61
    462e:	cf 91       	pop	r28
    4630:	df 91       	pop	r29
    4632:	1f 91       	pop	r17
    4634:	0f 91       	pop	r16
    4636:	ff 90       	pop	r15
    4638:	ef 90       	pop	r14
    463a:	df 90       	pop	r13
    463c:	cf 90       	pop	r12
    463e:	bf 90       	pop	r11
    4640:	af 90       	pop	r10
    4642:	08 95       	ret

00004644 <_ZN6String7replaceERKS_S1_>:
    4644:	2f 92       	push	r2
    4646:	3f 92       	push	r3
    4648:	4f 92       	push	r4
    464a:	5f 92       	push	r5
    464c:	6f 92       	push	r6
    464e:	7f 92       	push	r7
    4650:	8f 92       	push	r8
    4652:	9f 92       	push	r9
    4654:	af 92       	push	r10
    4656:	bf 92       	push	r11
    4658:	cf 92       	push	r12
    465a:	df 92       	push	r13
    465c:	ef 92       	push	r14
    465e:	ff 92       	push	r15
    4660:	0f 93       	push	r16
    4662:	1f 93       	push	r17
    4664:	df 93       	push	r29
    4666:	cf 93       	push	r28
    4668:	cd b7       	in	r28, 0x3d	; 61
    466a:	de b7       	in	r29, 0x3e	; 62
    466c:	68 97       	sbiw	r28, 0x18	; 24
    466e:	0f b6       	in	r0, 0x3f	; 63
    4670:	f8 94       	cli
    4672:	de bf       	out	0x3e, r29	; 62
    4674:	0f be       	out	0x3f, r0	; 63
    4676:	cd bf       	out	0x3d, r28	; 61
    4678:	3c 01       	movw	r6, r24
    467a:	fb 01       	movw	r30, r22
    467c:	2a 01       	movw	r4, r20
    467e:	19 01       	movw	r2, r18
    4680:	60 81       	ld	r22, Z
    4682:	71 81       	ldd	r23, Z+1	; 0x01
    4684:	61 15       	cp	r22, r1
    4686:	71 05       	cpc	r23, r1
    4688:	21 f4       	brne	.+8      	; 0x4692 <_ZN6String7replaceERKS_S1_+0x4e>
    468a:	bf 01       	movw	r22, r30
    468c:	0e 94 eb 1f 	call	0x3fd6	; 0x3fd6 <_ZN6StringC1ERKS_>
    4690:	5a c0       	rjmp	.+180    	; 0x4746 <_ZN6String7replaceERKS_S1_+0x102>
    4692:	7e 01       	movw	r14, r28
    4694:	08 94       	sec
    4696:	e1 1c       	adc	r14, r1
    4698:	f1 1c       	adc	r15, r1
    469a:	c7 01       	movw	r24, r14
    469c:	0e 94 1b 21 	call	0x4236	; 0x4236 <_ZN6StringC1EPKc>
    46a0:	8e 01       	movw	r16, r28
    46a2:	09 5f       	subi	r16, 0xF9	; 249
    46a4:	1f 4f       	sbci	r17, 0xFF	; 255
    46a6:	c8 01       	movw	r24, r16
    46a8:	67 e5       	ldi	r22, 0x57	; 87
    46aa:	71 e0       	ldi	r23, 0x01	; 1
    46ac:	0e 94 1b 21 	call	0x4236	; 0x4236 <_ZN6StringC1EPKc>
    46b0:	d0 2e       	mov	r13, r16
    46b2:	c1 2e       	mov	r12, r17
    46b4:	3d e0       	ldi	r19, 0x0D	; 13
    46b6:	83 2e       	mov	r8, r19
    46b8:	91 2c       	mov	r9, r1
    46ba:	8c 0e       	add	r8, r28
    46bc:	9d 1e       	adc	r9, r29
    46be:	23 e1       	ldi	r18, 0x13	; 19
    46c0:	a2 2e       	mov	r10, r18
    46c2:	b1 2c       	mov	r11, r1
    46c4:	ac 0e       	add	r10, r28
    46c6:	bd 1e       	adc	r11, r29
    46c8:	24 c0       	rjmp	.+72     	; 0x4712 <_ZN6String7replaceERKS_S1_+0xce>
    46ca:	c4 01       	movw	r24, r8
    46cc:	b7 01       	movw	r22, r14
    46ce:	40 e0       	ldi	r20, 0x00	; 0
    46d0:	50 e0       	ldi	r21, 0x00	; 0
    46d2:	98 01       	movw	r18, r16
    46d4:	0e 94 01 22 	call	0x4402	; 0x4402 <_ZNK6String9substringEjj>
    46d8:	8d 2d       	mov	r24, r13
    46da:	9c 2d       	mov	r25, r12
    46dc:	b4 01       	movw	r22, r8
    46de:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <_ZN6StringpLERKS_>
    46e2:	c4 01       	movw	r24, r8
    46e4:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    46e8:	8d 2d       	mov	r24, r13
    46ea:	9c 2d       	mov	r25, r12
    46ec:	b1 01       	movw	r22, r2
    46ee:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <_ZN6StringpLERKS_>
    46f2:	f2 01       	movw	r30, r4
    46f4:	44 81       	ldd	r20, Z+4	; 0x04
    46f6:	55 81       	ldd	r21, Z+5	; 0x05
    46f8:	40 0f       	add	r20, r16
    46fa:	51 1f       	adc	r21, r17
    46fc:	c5 01       	movw	r24, r10
    46fe:	b7 01       	movw	r22, r14
    4700:	0e 94 38 22 	call	0x4470	; 0x4470 <_ZNK6String9substringEj>
    4704:	c7 01       	movw	r24, r14
    4706:	b5 01       	movw	r22, r10
    4708:	0e 94 53 1f 	call	0x3ea6	; 0x3ea6 <_ZN6StringaSERKS_>
    470c:	c5 01       	movw	r24, r10
    470e:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    4712:	c7 01       	movw	r24, r14
    4714:	b2 01       	movw	r22, r4
    4716:	0e 94 25 1e 	call	0x3c4a	; 0x3c4a <_ZNK6String7indexOfERKS_>
    471a:	8c 01       	movw	r16, r24
    471c:	ff ef       	ldi	r31, 0xFF	; 255
    471e:	8f 3f       	cpi	r24, 0xFF	; 255
    4720:	9f 07       	cpc	r25, r31
    4722:	99 f6       	brne	.-90     	; 0x46ca <_ZN6String7replaceERKS_S1_+0x86>
    4724:	8d 2d       	mov	r24, r13
    4726:	9c 2d       	mov	r25, r12
    4728:	b7 01       	movw	r22, r14
    472a:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <_ZN6StringpLERKS_>
    472e:	c3 01       	movw	r24, r6
    4730:	6d 2d       	mov	r22, r13
    4732:	7c 2d       	mov	r23, r12
    4734:	0e 94 eb 1f 	call	0x3fd6	; 0x3fd6 <_ZN6StringC1ERKS_>
    4738:	8d 2d       	mov	r24, r13
    473a:	9c 2d       	mov	r25, r12
    473c:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    4740:	c7 01       	movw	r24, r14
    4742:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    4746:	c3 01       	movw	r24, r6
    4748:	68 96       	adiw	r28, 0x18	; 24
    474a:	0f b6       	in	r0, 0x3f	; 63
    474c:	f8 94       	cli
    474e:	de bf       	out	0x3e, r29	; 62
    4750:	0f be       	out	0x3f, r0	; 63
    4752:	cd bf       	out	0x3d, r28	; 61
    4754:	cf 91       	pop	r28
    4756:	df 91       	pop	r29
    4758:	1f 91       	pop	r17
    475a:	0f 91       	pop	r16
    475c:	ff 90       	pop	r15
    475e:	ef 90       	pop	r14
    4760:	df 90       	pop	r13
    4762:	cf 90       	pop	r12
    4764:	bf 90       	pop	r11
    4766:	af 90       	pop	r10
    4768:	9f 90       	pop	r9
    476a:	8f 90       	pop	r8
    476c:	7f 90       	pop	r7
    476e:	6f 90       	pop	r6
    4770:	5f 90       	pop	r5
    4772:	4f 90       	pop	r4
    4774:	3f 90       	pop	r3
    4776:	2f 90       	pop	r2
    4778:	08 95       	ret

0000477a <_ZN6String7replaceEcc>:
    477a:	ef 92       	push	r14
    477c:	ff 92       	push	r15
    477e:	0f 93       	push	r16
    4780:	1f 93       	push	r17
    4782:	df 93       	push	r29
    4784:	cf 93       	push	r28
    4786:	00 d0       	rcall	.+0      	; 0x4788 <_ZN6String7replaceEcc+0xe>
    4788:	00 d0       	rcall	.+0      	; 0x478a <_ZN6String7replaceEcc+0x10>
    478a:	00 d0       	rcall	.+0      	; 0x478c <_ZN6String7replaceEcc+0x12>
    478c:	cd b7       	in	r28, 0x3d	; 61
    478e:	de b7       	in	r29, 0x3e	; 62
    4790:	7c 01       	movw	r14, r24
    4792:	fb 01       	movw	r30, r22
    4794:	14 2f       	mov	r17, r20
    4796:	02 2f       	mov	r16, r18
    4798:	60 81       	ld	r22, Z
    479a:	71 81       	ldd	r23, Z+1	; 0x01
    479c:	61 15       	cp	r22, r1
    479e:	71 05       	cpc	r23, r1
    47a0:	21 f4       	brne	.+8      	; 0x47aa <_ZN6String7replaceEcc+0x30>
    47a2:	bf 01       	movw	r22, r30
    47a4:	0e 94 eb 1f 	call	0x3fd6	; 0x3fd6 <_ZN6StringC1ERKS_>
    47a8:	19 c0       	rjmp	.+50     	; 0x47dc <_ZN6String7replaceEcc+0x62>
    47aa:	ce 01       	movw	r24, r28
    47ac:	01 96       	adiw	r24, 0x01	; 1
    47ae:	0e 94 1b 21 	call	0x4236	; 0x4236 <_ZN6StringC1EPKc>
    47b2:	89 81       	ldd	r24, Y+1	; 0x01
    47b4:	9a 81       	ldd	r25, Y+2	; 0x02
    47b6:	01 c0       	rjmp	.+2      	; 0x47ba <_ZN6String7replaceEcc+0x40>
    47b8:	00 83       	st	Z, r16
    47ba:	61 2f       	mov	r22, r17
    47bc:	70 e0       	ldi	r23, 0x00	; 0
    47be:	0e 94 a4 2a 	call	0x5548	; 0x5548 <strchr>
    47c2:	fc 01       	movw	r30, r24
    47c4:	00 97       	sbiw	r24, 0x00	; 0
    47c6:	c1 f7       	brne	.-16     	; 0x47b8 <_ZN6String7replaceEcc+0x3e>
    47c8:	c7 01       	movw	r24, r14
    47ca:	8e 01       	movw	r16, r28
    47cc:	0f 5f       	subi	r16, 0xFF	; 255
    47ce:	1f 4f       	sbci	r17, 0xFF	; 255
    47d0:	b8 01       	movw	r22, r16
    47d2:	0e 94 eb 1f 	call	0x3fd6	; 0x3fd6 <_ZN6StringC1ERKS_>
    47d6:	c8 01       	movw	r24, r16
    47d8:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <_ZN6StringD1Ev>
    47dc:	c7 01       	movw	r24, r14
    47de:	26 96       	adiw	r28, 0x06	; 6
    47e0:	0f b6       	in	r0, 0x3f	; 63
    47e2:	f8 94       	cli
    47e4:	de bf       	out	0x3e, r29	; 62
    47e6:	0f be       	out	0x3f, r0	; 63
    47e8:	cd bf       	out	0x3d, r28	; 61
    47ea:	cf 91       	pop	r28
    47ec:	df 91       	pop	r29
    47ee:	1f 91       	pop	r17
    47f0:	0f 91       	pop	r16
    47f2:	ff 90       	pop	r15
    47f4:	ef 90       	pop	r14
    47f6:	08 95       	ret

000047f8 <_ZN6StringC2EPKc>:
    47f8:	0f 93       	push	r16
    47fa:	1f 93       	push	r17
    47fc:	cf 93       	push	r28
    47fe:	df 93       	push	r29
    4800:	8c 01       	movw	r16, r24
    4802:	eb 01       	movw	r28, r22
    4804:	61 15       	cp	r22, r1
    4806:	71 05       	cpc	r23, r1
    4808:	11 f4       	brne	.+4      	; 0x480e <_ZN6StringC2EPKc+0x16>
    480a:	c7 e5       	ldi	r28, 0x57	; 87
    480c:	d1 e0       	ldi	r29, 0x01	; 1
    480e:	fe 01       	movw	r30, r28
    4810:	01 90       	ld	r0, Z+
    4812:	00 20       	and	r0, r0
    4814:	e9 f7       	brne	.-6      	; 0x4810 <_ZN6StringC2EPKc+0x18>
    4816:	31 97       	sbiw	r30, 0x01	; 1
    4818:	ec 1b       	sub	r30, r28
    481a:	fd 0b       	sbc	r31, r29
    481c:	d8 01       	movw	r26, r16
    481e:	15 96       	adiw	r26, 0x05	; 5
    4820:	fc 93       	st	X, r31
    4822:	ee 93       	st	-X, r30
    4824:	14 97       	sbiw	r26, 0x04	; 4
    4826:	c8 01       	movw	r24, r16
    4828:	bf 01       	movw	r22, r30
    482a:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    482e:	f8 01       	movw	r30, r16
    4830:	80 81       	ld	r24, Z
    4832:	91 81       	ldd	r25, Z+1	; 0x01
    4834:	00 97       	sbiw	r24, 0x00	; 0
    4836:	19 f0       	breq	.+6      	; 0x483e <_ZN6StringC2EPKc+0x46>
    4838:	be 01       	movw	r22, r28
    483a:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    483e:	df 91       	pop	r29
    4840:	cf 91       	pop	r28
    4842:	1f 91       	pop	r17
    4844:	0f 91       	pop	r16
    4846:	08 95       	ret

00004848 <_ZN6StringC1Eli>:
    4848:	ef 92       	push	r14
    484a:	ff 92       	push	r15
    484c:	0f 93       	push	r16
    484e:	1f 93       	push	r17
    4850:	df 93       	push	r29
    4852:	cf 93       	push	r28
    4854:	cd b7       	in	r28, 0x3d	; 61
    4856:	de b7       	in	r29, 0x3e	; 62
    4858:	a1 97       	sbiw	r28, 0x21	; 33
    485a:	0f b6       	in	r0, 0x3f	; 63
    485c:	f8 94       	cli
    485e:	de bf       	out	0x3e, r29	; 62
    4860:	0f be       	out	0x3f, r0	; 63
    4862:	cd bf       	out	0x3d, r28	; 61
    4864:	8c 01       	movw	r16, r24
    4866:	cb 01       	movw	r24, r22
    4868:	ba 01       	movw	r22, r20
    486a:	7e 01       	movw	r14, r28
    486c:	08 94       	sec
    486e:	e1 1c       	adc	r14, r1
    4870:	f1 1c       	adc	r15, r1
    4872:	a7 01       	movw	r20, r14
    4874:	0e 94 22 2b 	call	0x5644	; 0x5644 <ltoa>
    4878:	f7 01       	movw	r30, r14
    487a:	01 90       	ld	r0, Z+
    487c:	00 20       	and	r0, r0
    487e:	e9 f7       	brne	.-6      	; 0x487a <_ZN6StringC1Eli+0x32>
    4880:	31 97       	sbiw	r30, 0x01	; 1
    4882:	ee 19       	sub	r30, r14
    4884:	ff 09       	sbc	r31, r15
    4886:	d8 01       	movw	r26, r16
    4888:	15 96       	adiw	r26, 0x05	; 5
    488a:	fc 93       	st	X, r31
    488c:	ee 93       	st	-X, r30
    488e:	14 97       	sbiw	r26, 0x04	; 4
    4890:	c8 01       	movw	r24, r16
    4892:	bf 01       	movw	r22, r30
    4894:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    4898:	f8 01       	movw	r30, r16
    489a:	80 81       	ld	r24, Z
    489c:	91 81       	ldd	r25, Z+1	; 0x01
    489e:	00 97       	sbiw	r24, 0x00	; 0
    48a0:	19 f0       	breq	.+6      	; 0x48a8 <_ZN6StringC1Eli+0x60>
    48a2:	b7 01       	movw	r22, r14
    48a4:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    48a8:	a1 96       	adiw	r28, 0x21	; 33
    48aa:	0f b6       	in	r0, 0x3f	; 63
    48ac:	f8 94       	cli
    48ae:	de bf       	out	0x3e, r29	; 62
    48b0:	0f be       	out	0x3f, r0	; 63
    48b2:	cd bf       	out	0x3d, r28	; 61
    48b4:	cf 91       	pop	r28
    48b6:	df 91       	pop	r29
    48b8:	1f 91       	pop	r17
    48ba:	0f 91       	pop	r16
    48bc:	ff 90       	pop	r15
    48be:	ef 90       	pop	r14
    48c0:	08 95       	ret

000048c2 <_ZN6StringC2Eli>:
    48c2:	ef 92       	push	r14
    48c4:	ff 92       	push	r15
    48c6:	0f 93       	push	r16
    48c8:	1f 93       	push	r17
    48ca:	df 93       	push	r29
    48cc:	cf 93       	push	r28
    48ce:	cd b7       	in	r28, 0x3d	; 61
    48d0:	de b7       	in	r29, 0x3e	; 62
    48d2:	a1 97       	sbiw	r28, 0x21	; 33
    48d4:	0f b6       	in	r0, 0x3f	; 63
    48d6:	f8 94       	cli
    48d8:	de bf       	out	0x3e, r29	; 62
    48da:	0f be       	out	0x3f, r0	; 63
    48dc:	cd bf       	out	0x3d, r28	; 61
    48de:	8c 01       	movw	r16, r24
    48e0:	cb 01       	movw	r24, r22
    48e2:	ba 01       	movw	r22, r20
    48e4:	7e 01       	movw	r14, r28
    48e6:	08 94       	sec
    48e8:	e1 1c       	adc	r14, r1
    48ea:	f1 1c       	adc	r15, r1
    48ec:	a7 01       	movw	r20, r14
    48ee:	0e 94 22 2b 	call	0x5644	; 0x5644 <ltoa>
    48f2:	f7 01       	movw	r30, r14
    48f4:	01 90       	ld	r0, Z+
    48f6:	00 20       	and	r0, r0
    48f8:	e9 f7       	brne	.-6      	; 0x48f4 <_ZN6StringC2Eli+0x32>
    48fa:	31 97       	sbiw	r30, 0x01	; 1
    48fc:	ee 19       	sub	r30, r14
    48fe:	ff 09       	sbc	r31, r15
    4900:	d8 01       	movw	r26, r16
    4902:	15 96       	adiw	r26, 0x05	; 5
    4904:	fc 93       	st	X, r31
    4906:	ee 93       	st	-X, r30
    4908:	14 97       	sbiw	r26, 0x04	; 4
    490a:	c8 01       	movw	r24, r16
    490c:	bf 01       	movw	r22, r30
    490e:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    4912:	f8 01       	movw	r30, r16
    4914:	80 81       	ld	r24, Z
    4916:	91 81       	ldd	r25, Z+1	; 0x01
    4918:	00 97       	sbiw	r24, 0x00	; 0
    491a:	19 f0       	breq	.+6      	; 0x4922 <_ZN6StringC2Eli+0x60>
    491c:	b7 01       	movw	r22, r14
    491e:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    4922:	a1 96       	adiw	r28, 0x21	; 33
    4924:	0f b6       	in	r0, 0x3f	; 63
    4926:	f8 94       	cli
    4928:	de bf       	out	0x3e, r29	; 62
    492a:	0f be       	out	0x3f, r0	; 63
    492c:	cd bf       	out	0x3d, r28	; 61
    492e:	cf 91       	pop	r28
    4930:	df 91       	pop	r29
    4932:	1f 91       	pop	r17
    4934:	0f 91       	pop	r16
    4936:	ff 90       	pop	r15
    4938:	ef 90       	pop	r14
    493a:	08 95       	ret

0000493c <_ZN6StringC1Eii>:
    493c:	ef 92       	push	r14
    493e:	ff 92       	push	r15
    4940:	0f 93       	push	r16
    4942:	1f 93       	push	r17
    4944:	df 93       	push	r29
    4946:	cf 93       	push	r28
    4948:	cd b7       	in	r28, 0x3d	; 61
    494a:	de b7       	in	r29, 0x3e	; 62
    494c:	a1 97       	sbiw	r28, 0x21	; 33
    494e:	0f b6       	in	r0, 0x3f	; 63
    4950:	f8 94       	cli
    4952:	de bf       	out	0x3e, r29	; 62
    4954:	0f be       	out	0x3f, r0	; 63
    4956:	cd bf       	out	0x3d, r28	; 61
    4958:	8c 01       	movw	r16, r24
    495a:	cb 01       	movw	r24, r22
    495c:	7e 01       	movw	r14, r28
    495e:	08 94       	sec
    4960:	e1 1c       	adc	r14, r1
    4962:	f1 1c       	adc	r15, r1
    4964:	b7 01       	movw	r22, r14
    4966:	0e 94 01 2b 	call	0x5602	; 0x5602 <itoa>
    496a:	f7 01       	movw	r30, r14
    496c:	01 90       	ld	r0, Z+
    496e:	00 20       	and	r0, r0
    4970:	e9 f7       	brne	.-6      	; 0x496c <_ZN6StringC1Eii+0x30>
    4972:	31 97       	sbiw	r30, 0x01	; 1
    4974:	ee 19       	sub	r30, r14
    4976:	ff 09       	sbc	r31, r15
    4978:	d8 01       	movw	r26, r16
    497a:	15 96       	adiw	r26, 0x05	; 5
    497c:	fc 93       	st	X, r31
    497e:	ee 93       	st	-X, r30
    4980:	14 97       	sbiw	r26, 0x04	; 4
    4982:	c8 01       	movw	r24, r16
    4984:	bf 01       	movw	r22, r30
    4986:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    498a:	f8 01       	movw	r30, r16
    498c:	80 81       	ld	r24, Z
    498e:	91 81       	ldd	r25, Z+1	; 0x01
    4990:	00 97       	sbiw	r24, 0x00	; 0
    4992:	19 f0       	breq	.+6      	; 0x499a <_ZN6StringC1Eii+0x5e>
    4994:	b7 01       	movw	r22, r14
    4996:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    499a:	a1 96       	adiw	r28, 0x21	; 33
    499c:	0f b6       	in	r0, 0x3f	; 63
    499e:	f8 94       	cli
    49a0:	de bf       	out	0x3e, r29	; 62
    49a2:	0f be       	out	0x3f, r0	; 63
    49a4:	cd bf       	out	0x3d, r28	; 61
    49a6:	cf 91       	pop	r28
    49a8:	df 91       	pop	r29
    49aa:	1f 91       	pop	r17
    49ac:	0f 91       	pop	r16
    49ae:	ff 90       	pop	r15
    49b0:	ef 90       	pop	r14
    49b2:	08 95       	ret

000049b4 <_ZN6StringC2Eii>:
    49b4:	ef 92       	push	r14
    49b6:	ff 92       	push	r15
    49b8:	0f 93       	push	r16
    49ba:	1f 93       	push	r17
    49bc:	df 93       	push	r29
    49be:	cf 93       	push	r28
    49c0:	cd b7       	in	r28, 0x3d	; 61
    49c2:	de b7       	in	r29, 0x3e	; 62
    49c4:	a1 97       	sbiw	r28, 0x21	; 33
    49c6:	0f b6       	in	r0, 0x3f	; 63
    49c8:	f8 94       	cli
    49ca:	de bf       	out	0x3e, r29	; 62
    49cc:	0f be       	out	0x3f, r0	; 63
    49ce:	cd bf       	out	0x3d, r28	; 61
    49d0:	8c 01       	movw	r16, r24
    49d2:	cb 01       	movw	r24, r22
    49d4:	7e 01       	movw	r14, r28
    49d6:	08 94       	sec
    49d8:	e1 1c       	adc	r14, r1
    49da:	f1 1c       	adc	r15, r1
    49dc:	b7 01       	movw	r22, r14
    49de:	0e 94 01 2b 	call	0x5602	; 0x5602 <itoa>
    49e2:	f7 01       	movw	r30, r14
    49e4:	01 90       	ld	r0, Z+
    49e6:	00 20       	and	r0, r0
    49e8:	e9 f7       	brne	.-6      	; 0x49e4 <_ZN6StringC2Eii+0x30>
    49ea:	31 97       	sbiw	r30, 0x01	; 1
    49ec:	ee 19       	sub	r30, r14
    49ee:	ff 09       	sbc	r31, r15
    49f0:	d8 01       	movw	r26, r16
    49f2:	15 96       	adiw	r26, 0x05	; 5
    49f4:	fc 93       	st	X, r31
    49f6:	ee 93       	st	-X, r30
    49f8:	14 97       	sbiw	r26, 0x04	; 4
    49fa:	c8 01       	movw	r24, r16
    49fc:	bf 01       	movw	r22, r30
    49fe:	0e 94 3f 1f 	call	0x3e7e	; 0x3e7e <_ZN6String9getBufferEj>
    4a02:	f8 01       	movw	r30, r16
    4a04:	80 81       	ld	r24, Z
    4a06:	91 81       	ldd	r25, Z+1	; 0x01
    4a08:	00 97       	sbiw	r24, 0x00	; 0
    4a0a:	19 f0       	breq	.+6      	; 0x4a12 <_ZN6StringC2Eii+0x5e>
    4a0c:	b7 01       	movw	r22, r14
    4a0e:	0e 94 b8 2a 	call	0x5570	; 0x5570 <strcpy>
    4a12:	a1 96       	adiw	r28, 0x21	; 33
    4a14:	0f b6       	in	r0, 0x3f	; 63
    4a16:	f8 94       	cli
    4a18:	de bf       	out	0x3e, r29	; 62
    4a1a:	0f be       	out	0x3f, r0	; 63
    4a1c:	cd bf       	out	0x3d, r28	; 61
    4a1e:	cf 91       	pop	r28
    4a20:	df 91       	pop	r29
    4a22:	1f 91       	pop	r17
    4a24:	0f 91       	pop	r16
    4a26:	ff 90       	pop	r15
    4a28:	ef 90       	pop	r14
    4a2a:	08 95       	ret

00004a2c <__mulsi3>:
    4a2c:	62 9f       	mul	r22, r18
    4a2e:	d0 01       	movw	r26, r0
    4a30:	73 9f       	mul	r23, r19
    4a32:	f0 01       	movw	r30, r0
    4a34:	82 9f       	mul	r24, r18
    4a36:	e0 0d       	add	r30, r0
    4a38:	f1 1d       	adc	r31, r1
    4a3a:	64 9f       	mul	r22, r20
    4a3c:	e0 0d       	add	r30, r0
    4a3e:	f1 1d       	adc	r31, r1
    4a40:	92 9f       	mul	r25, r18
    4a42:	f0 0d       	add	r31, r0
    4a44:	83 9f       	mul	r24, r19
    4a46:	f0 0d       	add	r31, r0
    4a48:	74 9f       	mul	r23, r20
    4a4a:	f0 0d       	add	r31, r0
    4a4c:	65 9f       	mul	r22, r21
    4a4e:	f0 0d       	add	r31, r0
    4a50:	99 27       	eor	r25, r25
    4a52:	72 9f       	mul	r23, r18
    4a54:	b0 0d       	add	r27, r0
    4a56:	e1 1d       	adc	r30, r1
    4a58:	f9 1f       	adc	r31, r25
    4a5a:	63 9f       	mul	r22, r19
    4a5c:	b0 0d       	add	r27, r0
    4a5e:	e1 1d       	adc	r30, r1
    4a60:	f9 1f       	adc	r31, r25
    4a62:	bd 01       	movw	r22, r26
    4a64:	cf 01       	movw	r24, r30
    4a66:	11 24       	eor	r1, r1
    4a68:	08 95       	ret

00004a6a <__divmodhi4>:
    4a6a:	97 fb       	bst	r25, 7
    4a6c:	09 2e       	mov	r0, r25
    4a6e:	07 26       	eor	r0, r23
    4a70:	0a d0       	rcall	.+20     	; 0x4a86 <__divmodhi4_neg1>
    4a72:	77 fd       	sbrc	r23, 7
    4a74:	04 d0       	rcall	.+8      	; 0x4a7e <__divmodhi4_neg2>
    4a76:	49 d0       	rcall	.+146    	; 0x4b0a <__udivmodhi4>
    4a78:	06 d0       	rcall	.+12     	; 0x4a86 <__divmodhi4_neg1>
    4a7a:	00 20       	and	r0, r0
    4a7c:	1a f4       	brpl	.+6      	; 0x4a84 <__divmodhi4_exit>

00004a7e <__divmodhi4_neg2>:
    4a7e:	70 95       	com	r23
    4a80:	61 95       	neg	r22
    4a82:	7f 4f       	sbci	r23, 0xFF	; 255

00004a84 <__divmodhi4_exit>:
    4a84:	08 95       	ret

00004a86 <__divmodhi4_neg1>:
    4a86:	f6 f7       	brtc	.-4      	; 0x4a84 <__divmodhi4_exit>
    4a88:	90 95       	com	r25
    4a8a:	81 95       	neg	r24
    4a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    4a8e:	08 95       	ret

00004a90 <__udivmodsi4>:
    4a90:	a1 e2       	ldi	r26, 0x21	; 33
    4a92:	1a 2e       	mov	r1, r26
    4a94:	aa 1b       	sub	r26, r26
    4a96:	bb 1b       	sub	r27, r27
    4a98:	fd 01       	movw	r30, r26
    4a9a:	0d c0       	rjmp	.+26     	; 0x4ab6 <__udivmodsi4_ep>

00004a9c <__udivmodsi4_loop>:
    4a9c:	aa 1f       	adc	r26, r26
    4a9e:	bb 1f       	adc	r27, r27
    4aa0:	ee 1f       	adc	r30, r30
    4aa2:	ff 1f       	adc	r31, r31
    4aa4:	a2 17       	cp	r26, r18
    4aa6:	b3 07       	cpc	r27, r19
    4aa8:	e4 07       	cpc	r30, r20
    4aaa:	f5 07       	cpc	r31, r21
    4aac:	20 f0       	brcs	.+8      	; 0x4ab6 <__udivmodsi4_ep>
    4aae:	a2 1b       	sub	r26, r18
    4ab0:	b3 0b       	sbc	r27, r19
    4ab2:	e4 0b       	sbc	r30, r20
    4ab4:	f5 0b       	sbc	r31, r21

00004ab6 <__udivmodsi4_ep>:
    4ab6:	66 1f       	adc	r22, r22
    4ab8:	77 1f       	adc	r23, r23
    4aba:	88 1f       	adc	r24, r24
    4abc:	99 1f       	adc	r25, r25
    4abe:	1a 94       	dec	r1
    4ac0:	69 f7       	brne	.-38     	; 0x4a9c <__udivmodsi4_loop>
    4ac2:	60 95       	com	r22
    4ac4:	70 95       	com	r23
    4ac6:	80 95       	com	r24
    4ac8:	90 95       	com	r25
    4aca:	9b 01       	movw	r18, r22
    4acc:	ac 01       	movw	r20, r24
    4ace:	bd 01       	movw	r22, r26
    4ad0:	cf 01       	movw	r24, r30
    4ad2:	08 95       	ret

00004ad4 <__divmodsi4>:
    4ad4:	97 fb       	bst	r25, 7
    4ad6:	09 2e       	mov	r0, r25
    4ad8:	05 26       	eor	r0, r21
    4ada:	0e d0       	rcall	.+28     	; 0x4af8 <__divmodsi4_neg1>
    4adc:	57 fd       	sbrc	r21, 7
    4ade:	04 d0       	rcall	.+8      	; 0x4ae8 <__divmodsi4_neg2>
    4ae0:	d7 df       	rcall	.-82     	; 0x4a90 <__udivmodsi4>
    4ae2:	0a d0       	rcall	.+20     	; 0x4af8 <__divmodsi4_neg1>
    4ae4:	00 1c       	adc	r0, r0
    4ae6:	38 f4       	brcc	.+14     	; 0x4af6 <__divmodsi4_exit>

00004ae8 <__divmodsi4_neg2>:
    4ae8:	50 95       	com	r21
    4aea:	40 95       	com	r20
    4aec:	30 95       	com	r19
    4aee:	21 95       	neg	r18
    4af0:	3f 4f       	sbci	r19, 0xFF	; 255
    4af2:	4f 4f       	sbci	r20, 0xFF	; 255
    4af4:	5f 4f       	sbci	r21, 0xFF	; 255

00004af6 <__divmodsi4_exit>:
    4af6:	08 95       	ret

00004af8 <__divmodsi4_neg1>:
    4af8:	f6 f7       	brtc	.-4      	; 0x4af6 <__divmodsi4_exit>
    4afa:	90 95       	com	r25
    4afc:	80 95       	com	r24
    4afe:	70 95       	com	r23
    4b00:	61 95       	neg	r22
    4b02:	7f 4f       	sbci	r23, 0xFF	; 255
    4b04:	8f 4f       	sbci	r24, 0xFF	; 255
    4b06:	9f 4f       	sbci	r25, 0xFF	; 255
    4b08:	08 95       	ret

00004b0a <__udivmodhi4>:
    4b0a:	aa 1b       	sub	r26, r26
    4b0c:	bb 1b       	sub	r27, r27
    4b0e:	51 e1       	ldi	r21, 0x11	; 17
    4b10:	07 c0       	rjmp	.+14     	; 0x4b20 <__udivmodhi4_ep>

00004b12 <__udivmodhi4_loop>:
    4b12:	aa 1f       	adc	r26, r26
    4b14:	bb 1f       	adc	r27, r27
    4b16:	a6 17       	cp	r26, r22
    4b18:	b7 07       	cpc	r27, r23
    4b1a:	10 f0       	brcs	.+4      	; 0x4b20 <__udivmodhi4_ep>
    4b1c:	a6 1b       	sub	r26, r22
    4b1e:	b7 0b       	sbc	r27, r23

00004b20 <__udivmodhi4_ep>:
    4b20:	88 1f       	adc	r24, r24
    4b22:	99 1f       	adc	r25, r25
    4b24:	5a 95       	dec	r21
    4b26:	a9 f7       	brne	.-22     	; 0x4b12 <__udivmodhi4_loop>
    4b28:	80 95       	com	r24
    4b2a:	90 95       	com	r25
    4b2c:	bc 01       	movw	r22, r24
    4b2e:	cd 01       	movw	r24, r26
    4b30:	08 95       	ret

00004b32 <__prologue_saves__>:
    4b32:	2f 92       	push	r2
    4b34:	3f 92       	push	r3
    4b36:	4f 92       	push	r4
    4b38:	5f 92       	push	r5
    4b3a:	6f 92       	push	r6
    4b3c:	7f 92       	push	r7
    4b3e:	8f 92       	push	r8
    4b40:	9f 92       	push	r9
    4b42:	af 92       	push	r10
    4b44:	bf 92       	push	r11
    4b46:	cf 92       	push	r12
    4b48:	df 92       	push	r13
    4b4a:	ef 92       	push	r14
    4b4c:	ff 92       	push	r15
    4b4e:	0f 93       	push	r16
    4b50:	1f 93       	push	r17
    4b52:	cf 93       	push	r28
    4b54:	df 93       	push	r29
    4b56:	cd b7       	in	r28, 0x3d	; 61
    4b58:	de b7       	in	r29, 0x3e	; 62
    4b5a:	ca 1b       	sub	r28, r26
    4b5c:	db 0b       	sbc	r29, r27
    4b5e:	0f b6       	in	r0, 0x3f	; 63
    4b60:	f8 94       	cli
    4b62:	de bf       	out	0x3e, r29	; 62
    4b64:	0f be       	out	0x3f, r0	; 63
    4b66:	cd bf       	out	0x3d, r28	; 61
    4b68:	09 94       	ijmp

00004b6a <__epilogue_restores__>:
    4b6a:	2a 88       	ldd	r2, Y+18	; 0x12
    4b6c:	39 88       	ldd	r3, Y+17	; 0x11
    4b6e:	48 88       	ldd	r4, Y+16	; 0x10
    4b70:	5f 84       	ldd	r5, Y+15	; 0x0f
    4b72:	6e 84       	ldd	r6, Y+14	; 0x0e
    4b74:	7d 84       	ldd	r7, Y+13	; 0x0d
    4b76:	8c 84       	ldd	r8, Y+12	; 0x0c
    4b78:	9b 84       	ldd	r9, Y+11	; 0x0b
    4b7a:	aa 84       	ldd	r10, Y+10	; 0x0a
    4b7c:	b9 84       	ldd	r11, Y+9	; 0x09
    4b7e:	c8 84       	ldd	r12, Y+8	; 0x08
    4b80:	df 80       	ldd	r13, Y+7	; 0x07
    4b82:	ee 80       	ldd	r14, Y+6	; 0x06
    4b84:	fd 80       	ldd	r15, Y+5	; 0x05
    4b86:	0c 81       	ldd	r16, Y+4	; 0x04
    4b88:	1b 81       	ldd	r17, Y+3	; 0x03
    4b8a:	aa 81       	ldd	r26, Y+2	; 0x02
    4b8c:	b9 81       	ldd	r27, Y+1	; 0x01
    4b8e:	ce 0f       	add	r28, r30
    4b90:	d1 1d       	adc	r29, r1
    4b92:	0f b6       	in	r0, 0x3f	; 63
    4b94:	f8 94       	cli
    4b96:	de bf       	out	0x3e, r29	; 62
    4b98:	0f be       	out	0x3f, r0	; 63
    4b9a:	cd bf       	out	0x3d, r28	; 61
    4b9c:	ed 01       	movw	r28, r26
    4b9e:	08 95       	ret

00004ba0 <__tablejump2__>:
    4ba0:	ee 0f       	add	r30, r30
    4ba2:	ff 1f       	adc	r31, r31

00004ba4 <__tablejump__>:
    4ba4:	05 90       	lpm	r0, Z+
    4ba6:	f4 91       	lpm	r31, Z+
    4ba8:	e0 2d       	mov	r30, r0
    4baa:	09 94       	ijmp

00004bac <pow>:
    4bac:	e4 2f       	mov	r30, r20
    4bae:	f5 2f       	mov	r31, r21
    4bb0:	ee 0f       	add	r30, r30
    4bb2:	ff 1f       	adc	r31, r31
    4bb4:	30 96       	adiw	r30, 0x00	; 0
    4bb6:	21 05       	cpc	r18, r1
    4bb8:	31 05       	cpc	r19, r1
    4bba:	a1 f1       	breq	.+104    	; 0x4c24 <pow+0x78>
    4bbc:	61 15       	cp	r22, r1
    4bbe:	71 05       	cpc	r23, r1
    4bc0:	61 f4       	brne	.+24     	; 0x4bda <pow+0x2e>
    4bc2:	80 38       	cpi	r24, 0x80	; 128
    4bc4:	bf e3       	ldi	r27, 0x3F	; 63
    4bc6:	9b 07       	cpc	r25, r27
    4bc8:	51 f1       	breq	.+84     	; 0x4c1e <pow+0x72>
    4bca:	68 94       	set
    4bcc:	90 38       	cpi	r25, 0x80	; 128
    4bce:	81 05       	cpc	r24, r1
    4bd0:	61 f0       	breq	.+24     	; 0x4bea <pow+0x3e>
    4bd2:	80 38       	cpi	r24, 0x80	; 128
    4bd4:	bf ef       	ldi	r27, 0xFF	; 255
    4bd6:	9b 07       	cpc	r25, r27
    4bd8:	41 f0       	breq	.+16     	; 0x4bea <pow+0x3e>
    4bda:	99 23       	and	r25, r25
    4bdc:	4a f5       	brpl	.+82     	; 0x4c30 <pow+0x84>
    4bde:	ff 3f       	cpi	r31, 0xFF	; 255
    4be0:	e1 05       	cpc	r30, r1
    4be2:	31 05       	cpc	r19, r1
    4be4:	21 05       	cpc	r18, r1
    4be6:	19 f1       	breq	.+70     	; 0x4c2e <pow+0x82>
    4be8:	e8 94       	clt
    4bea:	08 94       	sec
    4bec:	e7 95       	ror	r30
    4bee:	a2 2f       	mov	r26, r18
    4bf0:	b3 2f       	mov	r27, r19
    4bf2:	aa 23       	and	r26, r26
    4bf4:	29 f4       	brne	.+10     	; 0x4c00 <pow+0x54>
    4bf6:	ab 2f       	mov	r26, r27
    4bf8:	be 2f       	mov	r27, r30
    4bfa:	f8 5f       	subi	r31, 0xF8	; 248
    4bfc:	d0 f3       	brcs	.-12     	; 0x4bf2 <pow+0x46>
    4bfe:	10 c0       	rjmp	.+32     	; 0x4c20 <pow+0x74>
    4c00:	ff 5f       	subi	r31, 0xFF	; 255
    4c02:	70 f4       	brcc	.+28     	; 0x4c20 <pow+0x74>
    4c04:	a6 95       	lsr	r26
    4c06:	e0 f7       	brcc	.-8      	; 0x4c00 <pow+0x54>
    4c08:	f7 39       	cpi	r31, 0x97	; 151
    4c0a:	50 f0       	brcs	.+20     	; 0x4c20 <pow+0x74>
    4c0c:	19 f0       	breq	.+6      	; 0x4c14 <pow+0x68>
    4c0e:	ff 3a       	cpi	r31, 0xAF	; 175
    4c10:	38 f4       	brcc	.+14     	; 0x4c20 <pow+0x74>
    4c12:	9f 77       	andi	r25, 0x7F	; 127
    4c14:	9f 93       	push	r25
    4c16:	0c d0       	rcall	.+24     	; 0x4c30 <pow+0x84>
    4c18:	0f 90       	pop	r0
    4c1a:	07 fc       	sbrc	r0, 7
    4c1c:	90 58       	subi	r25, 0x80	; 128
    4c1e:	08 95       	ret
    4c20:	3e f0       	brts	.+14     	; 0x4c30 <pow+0x84>
    4c22:	49 c0       	rjmp	.+146    	; 0x4cb6 <__fp_nan>
    4c24:	60 e0       	ldi	r22, 0x00	; 0
    4c26:	70 e0       	ldi	r23, 0x00	; 0
    4c28:	80 e8       	ldi	r24, 0x80	; 128
    4c2a:	9f e3       	ldi	r25, 0x3F	; 63
    4c2c:	08 95       	ret
    4c2e:	4f e7       	ldi	r20, 0x7F	; 127
    4c30:	9f 77       	andi	r25, 0x7F	; 127
    4c32:	5f 93       	push	r21
    4c34:	4f 93       	push	r20
    4c36:	3f 93       	push	r19
    4c38:	2f 93       	push	r18
    4c3a:	e5 d0       	rcall	.+458    	; 0x4e06 <log>
    4c3c:	2f 91       	pop	r18
    4c3e:	3f 91       	pop	r19
    4c40:	4f 91       	pop	r20
    4c42:	5f 91       	pop	r21
    4c44:	01 dd       	rcall	.-1534   	; 0x4648 <_ZN6String7replaceERKS_S1_+0x4>
    4c46:	05 c0       	rjmp	.+10     	; 0x4c52 <exp>
    4c48:	19 f4       	brne	.+6      	; 0x4c50 <pow+0xa4>
    4c4a:	0e f0       	brts	.+2      	; 0x4c4e <pow+0xa2>
    4c4c:	2e c0       	rjmp	.+92     	; 0x4caa <__fp_inf>
    4c4e:	8f c0       	rjmp	.+286    	; 0x4d6e <__fp_zero>
    4c50:	32 c0       	rjmp	.+100    	; 0x4cb6 <__fp_nan>

00004c52 <exp>:
    4c52:	73 d0       	rcall	.+230    	; 0x4d3a <__fp_splitA>
    4c54:	c8 f3       	brcs	.-14     	; 0x4c48 <pow+0x9c>
    4c56:	96 38       	cpi	r25, 0x86	; 134
    4c58:	c0 f7       	brcc	.-16     	; 0x4c4a <pow+0x9e>
    4c5a:	07 f8       	bld	r0, 7
    4c5c:	0f 92       	push	r0
    4c5e:	e8 94       	clt
    4c60:	2b e3       	ldi	r18, 0x3B	; 59
    4c62:	3a ea       	ldi	r19, 0xAA	; 170
    4c64:	48 eb       	ldi	r20, 0xB8	; 184
    4c66:	5f e7       	ldi	r21, 0x7F	; 127
    4c68:	57 d1       	rcall	.+686    	; 0x4f18 <__mulsf3_pse>
    4c6a:	0f 92       	push	r0
    4c6c:	0f 92       	push	r0
    4c6e:	0f 92       	push	r0
    4c70:	4d b7       	in	r20, 0x3d	; 61
    4c72:	5e b7       	in	r21, 0x3e	; 62
    4c74:	0f 92       	push	r0
    4c76:	0c d1       	rcall	.+536    	; 0x4e90 <modf>
    4c78:	e8 e6       	ldi	r30, 0x68	; 104
    4c7a:	f0 e0       	ldi	r31, 0x00	; 0
    4c7c:	1f d0       	rcall	.+62     	; 0x4cbc <__fp_powser>
    4c7e:	4f 91       	pop	r20
    4c80:	5f 91       	pop	r21
    4c82:	ef 91       	pop	r30
    4c84:	ff 91       	pop	r31
    4c86:	e5 95       	asr	r30
    4c88:	ee 1f       	adc	r30, r30
    4c8a:	ff 1f       	adc	r31, r31
    4c8c:	49 f0       	breq	.+18     	; 0x4ca0 <exp+0x4e>
    4c8e:	fe 57       	subi	r31, 0x7E	; 126
    4c90:	e0 68       	ori	r30, 0x80	; 128
    4c92:	44 27       	eor	r20, r20
    4c94:	ee 0f       	add	r30, r30
    4c96:	44 1f       	adc	r20, r20
    4c98:	fa 95       	dec	r31
    4c9a:	e1 f7       	brne	.-8      	; 0x4c94 <exp+0x42>
    4c9c:	41 95       	neg	r20
    4c9e:	55 0b       	sbc	r21, r21
    4ca0:	79 d0       	rcall	.+242    	; 0x4d94 <ldexp>
    4ca2:	0f 90       	pop	r0
    4ca4:	07 fe       	sbrs	r0, 7
    4ca6:	6b c0       	rjmp	.+214    	; 0x4d7e <inverse>
    4ca8:	08 95       	ret

00004caa <__fp_inf>:
    4caa:	97 f9       	bld	r25, 7
    4cac:	9f 67       	ori	r25, 0x7F	; 127
    4cae:	80 e8       	ldi	r24, 0x80	; 128
    4cb0:	70 e0       	ldi	r23, 0x00	; 0
    4cb2:	60 e0       	ldi	r22, 0x00	; 0
    4cb4:	08 95       	ret

00004cb6 <__fp_nan>:
    4cb6:	9f ef       	ldi	r25, 0xFF	; 255
    4cb8:	80 ec       	ldi	r24, 0xC0	; 192
    4cba:	08 95       	ret

00004cbc <__fp_powser>:
    4cbc:	df 93       	push	r29
    4cbe:	cf 93       	push	r28
    4cc0:	1f 93       	push	r17
    4cc2:	0f 93       	push	r16
    4cc4:	ff 92       	push	r15
    4cc6:	ef 92       	push	r14
    4cc8:	df 92       	push	r13
    4cca:	e6 2e       	mov	r14, r22
    4ccc:	f7 2e       	mov	r15, r23
    4cce:	08 2f       	mov	r16, r24
    4cd0:	19 2f       	mov	r17, r25
    4cd2:	68 94       	set
    4cd4:	07 c0       	rjmp	.+14     	; 0x4ce4 <__fp_powser+0x28>
    4cd6:	da 2e       	mov	r13, r26
    4cd8:	ce 2f       	mov	r28, r30
    4cda:	df 2f       	mov	r29, r31
    4cdc:	1b d1       	rcall	.+566    	; 0x4f14 <__mulsf3x>
    4cde:	ec 2f       	mov	r30, r28
    4ce0:	fd 2f       	mov	r31, r29
    4ce2:	e8 94       	clt
    4ce4:	c8 95       	lpm
    4ce6:	a0 2d       	mov	r26, r0
    4ce8:	31 96       	adiw	r30, 0x01	; 1
    4cea:	c8 95       	lpm
    4cec:	20 2d       	mov	r18, r0
    4cee:	31 96       	adiw	r30, 0x01	; 1
    4cf0:	c8 95       	lpm
    4cf2:	30 2d       	mov	r19, r0
    4cf4:	31 96       	adiw	r30, 0x01	; 1
    4cf6:	c8 95       	lpm
    4cf8:	40 2d       	mov	r20, r0
    4cfa:	31 96       	adiw	r30, 0x01	; 1
    4cfc:	c8 95       	lpm
    4cfe:	50 2d       	mov	r21, r0
    4d00:	31 96       	adiw	r30, 0x01	; 1
    4d02:	4e f3       	brts	.-46     	; 0x4cd6 <__fp_powser+0x1a>
    4d04:	ce 2f       	mov	r28, r30
    4d06:	df 2f       	mov	r29, r31
    4d08:	72 d1       	rcall	.+740    	; 0x4fee <__addsf3x>
    4d0a:	ec 2f       	mov	r30, r28
    4d0c:	fd 2f       	mov	r31, r29
    4d0e:	2e 2d       	mov	r18, r14
    4d10:	3f 2d       	mov	r19, r15
    4d12:	40 2f       	mov	r20, r16
    4d14:	51 2f       	mov	r21, r17
    4d16:	da 94       	dec	r13
    4d18:	f9 f6       	brne	.-66     	; 0x4cd8 <__fp_powser+0x1c>
    4d1a:	df 90       	pop	r13
    4d1c:	ef 90       	pop	r14
    4d1e:	ff 90       	pop	r15
    4d20:	0f 91       	pop	r16
    4d22:	1f 91       	pop	r17
    4d24:	cf 91       	pop	r28
    4d26:	df 91       	pop	r29
    4d28:	08 95       	ret

00004d2a <__fp_split3>:
    4d2a:	57 fd       	sbrc	r21, 7
    4d2c:	90 58       	subi	r25, 0x80	; 128
    4d2e:	44 0f       	add	r20, r20
    4d30:	55 1f       	adc	r21, r21
    4d32:	59 f0       	breq	.+22     	; 0x4d4a <__fp_splitA+0x10>
    4d34:	5f 3f       	cpi	r21, 0xFF	; 255
    4d36:	71 f0       	breq	.+28     	; 0x4d54 <__fp_splitA+0x1a>
    4d38:	47 95       	ror	r20

00004d3a <__fp_splitA>:
    4d3a:	88 0f       	add	r24, r24
    4d3c:	97 fb       	bst	r25, 7
    4d3e:	99 1f       	adc	r25, r25
    4d40:	61 f0       	breq	.+24     	; 0x4d5a <__fp_splitA+0x20>
    4d42:	9f 3f       	cpi	r25, 0xFF	; 255
    4d44:	79 f0       	breq	.+30     	; 0x4d64 <__fp_splitA+0x2a>
    4d46:	87 95       	ror	r24
    4d48:	08 95       	ret
    4d4a:	12 16       	cp	r1, r18
    4d4c:	13 06       	cpc	r1, r19
    4d4e:	14 06       	cpc	r1, r20
    4d50:	55 1f       	adc	r21, r21
    4d52:	f2 cf       	rjmp	.-28     	; 0x4d38 <__fp_split3+0xe>
    4d54:	46 95       	lsr	r20
    4d56:	f1 df       	rcall	.-30     	; 0x4d3a <__fp_splitA>
    4d58:	08 c0       	rjmp	.+16     	; 0x4d6a <__fp_splitA+0x30>
    4d5a:	16 16       	cp	r1, r22
    4d5c:	17 06       	cpc	r1, r23
    4d5e:	18 06       	cpc	r1, r24
    4d60:	99 1f       	adc	r25, r25
    4d62:	f1 cf       	rjmp	.-30     	; 0x4d46 <__fp_splitA+0xc>
    4d64:	86 95       	lsr	r24
    4d66:	71 05       	cpc	r23, r1
    4d68:	61 05       	cpc	r22, r1
    4d6a:	08 94       	sec
    4d6c:	08 95       	ret

00004d6e <__fp_zero>:
    4d6e:	e8 94       	clt

00004d70 <__fp_szero>:
    4d70:	bb 27       	eor	r27, r27
    4d72:	66 27       	eor	r22, r22
    4d74:	77 27       	eor	r23, r23
    4d76:	86 2f       	mov	r24, r22
    4d78:	97 2f       	mov	r25, r23
    4d7a:	97 f9       	bld	r25, 7
    4d7c:	08 95       	ret

00004d7e <inverse>:
    4d7e:	26 2f       	mov	r18, r22
    4d80:	37 2f       	mov	r19, r23
    4d82:	48 2f       	mov	r20, r24
    4d84:	59 2f       	mov	r21, r25
    4d86:	60 e0       	ldi	r22, 0x00	; 0
    4d88:	70 e0       	ldi	r23, 0x00	; 0
    4d8a:	80 e8       	ldi	r24, 0x80	; 128
    4d8c:	9f e3       	ldi	r25, 0x3F	; 63
    4d8e:	56 cd       	rjmp	.-1364   	; 0x483c <_ZN6StringC2EPKc+0x44>
    4d90:	8c cf       	rjmp	.-232    	; 0x4caa <__fp_inf>
    4d92:	85 c1       	rjmp	.+778    	; 0x509e <__fp_mpack>

00004d94 <ldexp>:
    4d94:	d2 df       	rcall	.-92     	; 0x4d3a <__fp_splitA>
    4d96:	e8 f3       	brcs	.-6      	; 0x4d92 <inverse+0x14>
    4d98:	99 23       	and	r25, r25
    4d9a:	d9 f3       	breq	.-10     	; 0x4d92 <inverse+0x14>
    4d9c:	94 0f       	add	r25, r20
    4d9e:	51 1d       	adc	r21, r1
    4da0:	bb f3       	brvs	.-18     	; 0x4d90 <inverse+0x12>
    4da2:	91 50       	subi	r25, 0x01	; 1
    4da4:	50 40       	sbci	r21, 0x00	; 0
    4da6:	94 f0       	brlt	.+36     	; 0x4dcc <ldexp+0x38>
    4da8:	59 f0       	breq	.+22     	; 0x4dc0 <ldexp+0x2c>
    4daa:	88 23       	and	r24, r24
    4dac:	32 f0       	brmi	.+12     	; 0x4dba <ldexp+0x26>
    4dae:	66 0f       	add	r22, r22
    4db0:	77 1f       	adc	r23, r23
    4db2:	88 1f       	adc	r24, r24
    4db4:	91 50       	subi	r25, 0x01	; 1
    4db6:	50 40       	sbci	r21, 0x00	; 0
    4db8:	c1 f7       	brne	.-16     	; 0x4daa <ldexp+0x16>
    4dba:	9e 3f       	cpi	r25, 0xFE	; 254
    4dbc:	51 05       	cpc	r21, r1
    4dbe:	44 f7       	brge	.-48     	; 0x4d90 <inverse+0x12>
    4dc0:	88 0f       	add	r24, r24
    4dc2:	91 1d       	adc	r25, r1
    4dc4:	96 95       	lsr	r25
    4dc6:	87 95       	ror	r24
    4dc8:	97 f9       	bld	r25, 7
    4dca:	08 95       	ret
    4dcc:	5f 3f       	cpi	r21, 0xFF	; 255
    4dce:	ac f0       	brlt	.+42     	; 0x4dfa <ldexp+0x66>
    4dd0:	98 3e       	cpi	r25, 0xE8	; 232
    4dd2:	9c f0       	brlt	.+38     	; 0x4dfa <ldexp+0x66>
    4dd4:	bb 27       	eor	r27, r27
    4dd6:	86 95       	lsr	r24
    4dd8:	77 95       	ror	r23
    4dda:	67 95       	ror	r22
    4ddc:	b7 95       	ror	r27
    4dde:	08 f4       	brcc	.+2      	; 0x4de2 <ldexp+0x4e>
    4de0:	b1 60       	ori	r27, 0x01	; 1
    4de2:	93 95       	inc	r25
    4de4:	c1 f7       	brne	.-16     	; 0x4dd6 <ldexp+0x42>
    4de6:	bb 0f       	add	r27, r27
    4de8:	58 f7       	brcc	.-42     	; 0x4dc0 <ldexp+0x2c>
    4dea:	11 f4       	brne	.+4      	; 0x4df0 <ldexp+0x5c>
    4dec:	60 ff       	sbrs	r22, 0
    4dee:	e8 cf       	rjmp	.-48     	; 0x4dc0 <ldexp+0x2c>
    4df0:	6f 5f       	subi	r22, 0xFF	; 255
    4df2:	7f 4f       	sbci	r23, 0xFF	; 255
    4df4:	8f 4f       	sbci	r24, 0xFF	; 255
    4df6:	9f 4f       	sbci	r25, 0xFF	; 255
    4df8:	e3 cf       	rjmp	.-58     	; 0x4dc0 <ldexp+0x2c>
    4dfa:	ba cf       	rjmp	.-140    	; 0x4d70 <__fp_szero>
    4dfc:	0e f0       	brts	.+2      	; 0x4e00 <ldexp+0x6c>
    4dfe:	4f c1       	rjmp	.+670    	; 0x509e <__fp_mpack>
    4e00:	5a cf       	rjmp	.-332    	; 0x4cb6 <__fp_nan>
    4e02:	68 94       	set
    4e04:	52 cf       	rjmp	.-348    	; 0x4caa <__fp_inf>

00004e06 <log>:
    4e06:	99 df       	rcall	.-206    	; 0x4d3a <__fp_splitA>
    4e08:	c8 f3       	brcs	.-14     	; 0x4dfc <ldexp+0x68>
    4e0a:	99 23       	and	r25, r25
    4e0c:	d1 f3       	breq	.-12     	; 0x4e02 <ldexp+0x6e>
    4e0e:	c6 f3       	brts	.-16     	; 0x4e00 <ldexp+0x6c>
    4e10:	df 93       	push	r29
    4e12:	cf 93       	push	r28
    4e14:	1f 93       	push	r17
    4e16:	0f 93       	push	r16
    4e18:	ff 92       	push	r15
    4e1a:	c9 2f       	mov	r28, r25
    4e1c:	dd 27       	eor	r29, r29
    4e1e:	88 23       	and	r24, r24
    4e20:	2a f0       	brmi	.+10     	; 0x4e2c <log+0x26>
    4e22:	21 97       	sbiw	r28, 0x01	; 1
    4e24:	66 0f       	add	r22, r22
    4e26:	77 1f       	adc	r23, r23
    4e28:	88 1f       	adc	r24, r24
    4e2a:	da f7       	brpl	.-10     	; 0x4e22 <log+0x1c>
    4e2c:	20 e0       	ldi	r18, 0x00	; 0
    4e2e:	30 e0       	ldi	r19, 0x00	; 0
    4e30:	40 e8       	ldi	r20, 0x80	; 128
    4e32:	5f eb       	ldi	r21, 0xBF	; 191
    4e34:	9f e3       	ldi	r25, 0x3F	; 63
    4e36:	88 39       	cpi	r24, 0x98	; 152
    4e38:	20 f0       	brcs	.+8      	; 0x4e42 <log+0x3c>
    4e3a:	80 3e       	cpi	r24, 0xE0	; 224
    4e3c:	30 f0       	brcs	.+12     	; 0x4e4a <log+0x44>
    4e3e:	21 96       	adiw	r28, 0x01	; 1
    4e40:	8f 77       	andi	r24, 0x7F	; 127
    4e42:	d5 db       	rcall	.-2134   	; 0x45ee <_ZNK6String4trimEv+0x80>
    4e44:	e0 e9       	ldi	r30, 0x90	; 144
    4e46:	f0 e0       	ldi	r31, 0x00	; 0
    4e48:	03 c0       	rjmp	.+6      	; 0x4e50 <log+0x4a>
    4e4a:	d1 db       	rcall	.-2142   	; 0x45ee <_ZNK6String4trimEv+0x80>
    4e4c:	ed eb       	ldi	r30, 0xBD	; 189
    4e4e:	f0 e0       	ldi	r31, 0x00	; 0
    4e50:	35 df       	rcall	.-406    	; 0x4cbc <__fp_powser>
    4e52:	06 2f       	mov	r16, r22
    4e54:	17 2f       	mov	r17, r23
    4e56:	6c 2f       	mov	r22, r28
    4e58:	7d 2f       	mov	r23, r29
    4e5a:	c8 2f       	mov	r28, r24
    4e5c:	d9 2f       	mov	r29, r25
    4e5e:	fb 2e       	mov	r15, r27
    4e60:	6f 57       	subi	r22, 0x7F	; 127
    4e62:	71 09       	sbc	r23, r1
    4e64:	75 95       	asr	r23
    4e66:	77 1f       	adc	r23, r23
    4e68:	88 0b       	sbc	r24, r24
    4e6a:	99 0b       	sbc	r25, r25
    4e6c:	23 de       	rcall	.-954    	; 0x4ab4 <__udivmodsi4_loop+0x18>
    4e6e:	28 e1       	ldi	r18, 0x18	; 24
    4e70:	32 e7       	ldi	r19, 0x72	; 114
    4e72:	41 e3       	ldi	r20, 0x31	; 49
    4e74:	5f e3       	ldi	r21, 0x3F	; 63
    4e76:	4e d0       	rcall	.+156    	; 0x4f14 <__mulsf3x>
    4e78:	af 2d       	mov	r26, r15
    4e7a:	20 2f       	mov	r18, r16
    4e7c:	31 2f       	mov	r19, r17
    4e7e:	4c 2f       	mov	r20, r28
    4e80:	5d 2f       	mov	r21, r29
    4e82:	ff 90       	pop	r15
    4e84:	0f 91       	pop	r16
    4e86:	1f 91       	pop	r17
    4e88:	cf 91       	pop	r28
    4e8a:	df 91       	pop	r29
    4e8c:	b0 d0       	rcall	.+352    	; 0x4fee <__addsf3x>
    4e8e:	25 c1       	rjmp	.+586    	; 0x50da <__fp_round>

00004e90 <modf>:
    4e90:	e4 2f       	mov	r30, r20
    4e92:	f5 2f       	mov	r31, r21
    4e94:	a8 2f       	mov	r26, r24
    4e96:	b9 2f       	mov	r27, r25
    4e98:	aa 0f       	add	r26, r26
    4e9a:	bb 1f       	adc	r27, r27
    4e9c:	26 2f       	mov	r18, r22
    4e9e:	37 2f       	mov	r19, r23
    4ea0:	48 2f       	mov	r20, r24
    4ea2:	59 2f       	mov	r21, r25
    4ea4:	bf 57       	subi	r27, 0x7F	; 127
    4ea6:	28 f4       	brcc	.+10     	; 0x4eb2 <modf+0x22>
    4ea8:	22 27       	eor	r18, r18
    4eaa:	33 27       	eor	r19, r19
    4eac:	44 27       	eor	r20, r20
    4eae:	50 78       	andi	r21, 0x80	; 128
    4eb0:	21 c0       	rjmp	.+66     	; 0x4ef4 <modf+0x64>
    4eb2:	b7 51       	subi	r27, 0x17	; 23
    4eb4:	88 f4       	brcc	.+34     	; 0x4ed8 <modf+0x48>
    4eb6:	ab 2f       	mov	r26, r27
    4eb8:	00 24       	eor	r0, r0
    4eba:	46 95       	lsr	r20
    4ebc:	37 95       	ror	r19
    4ebe:	27 95       	ror	r18
    4ec0:	01 1c       	adc	r0, r1
    4ec2:	a3 95       	inc	r26
    4ec4:	d2 f3       	brmi	.-12     	; 0x4eba <modf+0x2a>
    4ec6:	00 20       	and	r0, r0
    4ec8:	69 f0       	breq	.+26     	; 0x4ee4 <modf+0x54>
    4eca:	22 0f       	add	r18, r18
    4ecc:	33 1f       	adc	r19, r19
    4ece:	44 1f       	adc	r20, r20
    4ed0:	b3 95       	inc	r27
    4ed2:	da f3       	brmi	.-10     	; 0x4eca <modf+0x3a>
    4ed4:	0f d0       	rcall	.+30     	; 0x4ef4 <modf+0x64>
    4ed6:	5a cb       	rjmp	.-2380   	; 0x458c <_ZNK6String4trimEv+0x1e>
    4ed8:	61 30       	cpi	r22, 0x01	; 1
    4eda:	71 05       	cpc	r23, r1
    4edc:	a0 e8       	ldi	r26, 0x80	; 128
    4ede:	8a 07       	cpc	r24, r26
    4ee0:	b9 46       	sbci	r27, 0x69	; 105
    4ee2:	40 f4       	brcc	.+16     	; 0x4ef4 <modf+0x64>
    4ee4:	26 2f       	mov	r18, r22
    4ee6:	37 2f       	mov	r19, r23
    4ee8:	48 2f       	mov	r20, r24
    4eea:	59 2f       	mov	r21, r25
    4eec:	66 27       	eor	r22, r22
    4eee:	77 27       	eor	r23, r23
    4ef0:	88 27       	eor	r24, r24
    4ef2:	90 78       	andi	r25, 0x80	; 128
    4ef4:	30 96       	adiw	r30, 0x00	; 0
    4ef6:	21 f0       	breq	.+8      	; 0x4f00 <modf+0x70>
    4ef8:	20 83       	st	Z, r18
    4efa:	31 83       	std	Z+1, r19	; 0x01
    4efc:	42 83       	std	Z+2, r20	; 0x02
    4efe:	53 83       	std	Z+3, r21	; 0x03
    4f00:	08 95       	ret
    4f02:	dd d0       	rcall	.+442    	; 0x50be <__fp_pscA>
    4f04:	28 f0       	brcs	.+10     	; 0x4f10 <modf+0x80>
    4f06:	e2 d0       	rcall	.+452    	; 0x50cc <__fp_pscB>
    4f08:	18 f0       	brcs	.+6      	; 0x4f10 <modf+0x80>
    4f0a:	95 23       	and	r25, r21
    4f0c:	09 f0       	breq	.+2      	; 0x4f10 <modf+0x80>
    4f0e:	cd ce       	rjmp	.-614    	; 0x4caa <__fp_inf>
    4f10:	d2 ce       	rjmp	.-604    	; 0x4cb6 <__fp_nan>
    4f12:	2e cf       	rjmp	.-420    	; 0x4d70 <__fp_szero>

00004f14 <__mulsf3x>:
    4f14:	0a df       	rcall	.-492    	; 0x4d2a <__fp_split3>
    4f16:	a8 f3       	brcs	.-22     	; 0x4f02 <modf+0x72>

00004f18 <__mulsf3_pse>:
    4f18:	99 23       	and	r25, r25
    4f1a:	d9 f3       	breq	.-10     	; 0x4f12 <modf+0x82>
    4f1c:	55 23       	and	r21, r21
    4f1e:	c9 f3       	breq	.-14     	; 0x4f12 <modf+0x82>
    4f20:	95 0f       	add	r25, r21
    4f22:	50 e0       	ldi	r21, 0x00	; 0
    4f24:	55 1f       	adc	r21, r21
    4f26:	aa 27       	eor	r26, r26
    4f28:	ee 27       	eor	r30, r30
    4f2a:	ff 27       	eor	r31, r31
    4f2c:	bb 27       	eor	r27, r27
    4f2e:	00 24       	eor	r0, r0
    4f30:	08 94       	sec
    4f32:	67 95       	ror	r22
    4f34:	20 f4       	brcc	.+8      	; 0x4f3e <__mulsf3_pse+0x26>
    4f36:	e2 0f       	add	r30, r18
    4f38:	f3 1f       	adc	r31, r19
    4f3a:	b4 1f       	adc	r27, r20
    4f3c:	0a 1e       	adc	r0, r26
    4f3e:	22 0f       	add	r18, r18
    4f40:	33 1f       	adc	r19, r19
    4f42:	44 1f       	adc	r20, r20
    4f44:	aa 1f       	adc	r26, r26
    4f46:	66 95       	lsr	r22
    4f48:	a9 f7       	brne	.-22     	; 0x4f34 <__mulsf3_pse+0x1c>
    4f4a:	77 95       	ror	r23
    4f4c:	30 f4       	brcc	.+12     	; 0x4f5a <__mulsf3_pse+0x42>
    4f4e:	f3 0f       	add	r31, r19
    4f50:	b4 1f       	adc	r27, r20
    4f52:	0a 1e       	adc	r0, r26
    4f54:	12 1e       	adc	r1, r18
    4f56:	08 f4       	brcc	.+2      	; 0x4f5a <__mulsf3_pse+0x42>
    4f58:	63 95       	inc	r22
    4f5a:	33 0f       	add	r19, r19
    4f5c:	44 1f       	adc	r20, r20
    4f5e:	aa 1f       	adc	r26, r26
    4f60:	22 1f       	adc	r18, r18
    4f62:	76 95       	lsr	r23
    4f64:	99 f7       	brne	.-26     	; 0x4f4c <__mulsf3_pse+0x34>
    4f66:	87 95       	ror	r24
    4f68:	20 f4       	brcc	.+8      	; 0x4f72 <__mulsf3_pse+0x5a>
    4f6a:	b4 0f       	add	r27, r20
    4f6c:	0a 1e       	adc	r0, r26
    4f6e:	12 1e       	adc	r1, r18
    4f70:	63 1f       	adc	r22, r19
    4f72:	44 0f       	add	r20, r20
    4f74:	aa 1f       	adc	r26, r26
    4f76:	22 1f       	adc	r18, r18
    4f78:	33 1f       	adc	r19, r19
    4f7a:	86 95       	lsr	r24
    4f7c:	a9 f7       	brne	.-22     	; 0x4f68 <__mulsf3_pse+0x50>
    4f7e:	86 2f       	mov	r24, r22
    4f80:	71 2d       	mov	r23, r1
    4f82:	60 2d       	mov	r22, r0
    4f84:	11 24       	eor	r1, r1
    4f86:	9f 57       	subi	r25, 0x7F	; 127
    4f88:	50 40       	sbci	r21, 0x00	; 0
    4f8a:	8a f0       	brmi	.+34     	; 0x4fae <__mulsf3_pse+0x96>
    4f8c:	e1 f0       	breq	.+56     	; 0x4fc6 <__mulsf3_pse+0xae>
    4f8e:	88 23       	and	r24, r24
    4f90:	4a f0       	brmi	.+18     	; 0x4fa4 <__mulsf3_pse+0x8c>
    4f92:	ee 0f       	add	r30, r30
    4f94:	ff 1f       	adc	r31, r31
    4f96:	bb 1f       	adc	r27, r27
    4f98:	66 1f       	adc	r22, r22
    4f9a:	77 1f       	adc	r23, r23
    4f9c:	88 1f       	adc	r24, r24
    4f9e:	91 50       	subi	r25, 0x01	; 1
    4fa0:	50 40       	sbci	r21, 0x00	; 0
    4fa2:	a9 f7       	brne	.-22     	; 0x4f8e <__mulsf3_pse+0x76>
    4fa4:	9e 3f       	cpi	r25, 0xFE	; 254
    4fa6:	51 05       	cpc	r21, r1
    4fa8:	70 f0       	brcs	.+28     	; 0x4fc6 <__mulsf3_pse+0xae>
    4faa:	7f ce       	rjmp	.-770    	; 0x4caa <__fp_inf>
    4fac:	e1 ce       	rjmp	.-574    	; 0x4d70 <__fp_szero>
    4fae:	5f 3f       	cpi	r21, 0xFF	; 255
    4fb0:	ec f3       	brlt	.-6      	; 0x4fac <__mulsf3_pse+0x94>
    4fb2:	98 3e       	cpi	r25, 0xE8	; 232
    4fb4:	dc f3       	brlt	.-10     	; 0x4fac <__mulsf3_pse+0x94>
    4fb6:	86 95       	lsr	r24
    4fb8:	77 95       	ror	r23
    4fba:	67 95       	ror	r22
    4fbc:	b7 95       	ror	r27
    4fbe:	f7 95       	ror	r31
    4fc0:	e7 95       	ror	r30
    4fc2:	9f 5f       	subi	r25, 0xFF	; 255
    4fc4:	c1 f7       	brne	.-16     	; 0x4fb6 <__mulsf3_pse+0x9e>
    4fc6:	fe 2b       	or	r31, r30
    4fc8:	88 0f       	add	r24, r24
    4fca:	91 1d       	adc	r25, r1
    4fcc:	96 95       	lsr	r25
    4fce:	87 95       	ror	r24
    4fd0:	97 f9       	bld	r25, 7
    4fd2:	08 95       	ret
    4fd4:	74 d0       	rcall	.+232    	; 0x50be <__fp_pscA>
    4fd6:	30 f0       	brcs	.+12     	; 0x4fe4 <__mulsf3_pse+0xcc>
    4fd8:	79 d0       	rcall	.+242    	; 0x50cc <__fp_pscB>
    4fda:	20 f0       	brcs	.+8      	; 0x4fe4 <__mulsf3_pse+0xcc>
    4fdc:	31 f4       	brne	.+12     	; 0x4fea <__mulsf3_pse+0xd2>
    4fde:	9f 3f       	cpi	r25, 0xFF	; 255
    4fe0:	11 f4       	brne	.+4      	; 0x4fe6 <__mulsf3_pse+0xce>
    4fe2:	1e f4       	brtc	.+6      	; 0x4fea <__mulsf3_pse+0xd2>
    4fe4:	68 ce       	rjmp	.-816    	; 0x4cb6 <__fp_nan>
    4fe6:	0e f4       	brtc	.+2      	; 0x4fea <__mulsf3_pse+0xd2>
    4fe8:	e0 95       	com	r30
    4fea:	e7 fb       	bst	r30, 7
    4fec:	5e ce       	rjmp	.-836    	; 0x4caa <__fp_inf>

00004fee <__addsf3x>:
    4fee:	e9 2f       	mov	r30, r25
    4ff0:	9c de       	rcall	.-712    	; 0x4d2a <__fp_split3>
    4ff2:	80 f3       	brcs	.-32     	; 0x4fd4 <__mulsf3_pse+0xbc>
    4ff4:	ba 17       	cp	r27, r26
    4ff6:	62 07       	cpc	r22, r18
    4ff8:	73 07       	cpc	r23, r19
    4ffa:	84 07       	cpc	r24, r20
    4ffc:	95 07       	cpc	r25, r21
    4ffe:	18 f0       	brcs	.+6      	; 0x5006 <__addsf3x+0x18>
    5000:	99 f4       	brne	.+38     	; 0x5028 <__addsf3x+0x3a>
    5002:	c6 f5       	brtc	.+112    	; 0x5074 <__addsf3x+0x86>
    5004:	b4 ce       	rjmp	.-664    	; 0x4d6e <__fp_zero>
    5006:	0e f4       	brtc	.+2      	; 0x500a <__addsf3x+0x1c>
    5008:	e0 95       	com	r30
    500a:	0b 2e       	mov	r0, r27
    500c:	ba 2f       	mov	r27, r26
    500e:	a0 2d       	mov	r26, r0
    5010:	06 2e       	mov	r0, r22
    5012:	62 2f       	mov	r22, r18
    5014:	20 2d       	mov	r18, r0
    5016:	07 2e       	mov	r0, r23
    5018:	73 2f       	mov	r23, r19
    501a:	30 2d       	mov	r19, r0
    501c:	08 2e       	mov	r0, r24
    501e:	84 2f       	mov	r24, r20
    5020:	40 2d       	mov	r20, r0
    5022:	09 2e       	mov	r0, r25
    5024:	95 2f       	mov	r25, r21
    5026:	50 2d       	mov	r21, r0
    5028:	ff 27       	eor	r31, r31
    502a:	59 1b       	sub	r21, r25
    502c:	99 f0       	breq	.+38     	; 0x5054 <__addsf3x+0x66>
    502e:	59 3f       	cpi	r21, 0xF9	; 249
    5030:	50 f4       	brcc	.+20     	; 0x5046 <__addsf3x+0x58>
    5032:	50 3e       	cpi	r21, 0xE0	; 224
    5034:	68 f1       	brcs	.+90     	; 0x5090 <__addsf3x+0xa2>
    5036:	1a 16       	cp	r1, r26
    5038:	f0 40       	sbci	r31, 0x00	; 0
    503a:	a2 2f       	mov	r26, r18
    503c:	23 2f       	mov	r18, r19
    503e:	34 2f       	mov	r19, r20
    5040:	44 27       	eor	r20, r20
    5042:	58 5f       	subi	r21, 0xF8	; 248
    5044:	f3 cf       	rjmp	.-26     	; 0x502c <__addsf3x+0x3e>
    5046:	46 95       	lsr	r20
    5048:	37 95       	ror	r19
    504a:	27 95       	ror	r18
    504c:	a7 95       	ror	r26
    504e:	f0 40       	sbci	r31, 0x00	; 0
    5050:	53 95       	inc	r21
    5052:	c9 f7       	brne	.-14     	; 0x5046 <__addsf3x+0x58>
    5054:	7e f4       	brtc	.+30     	; 0x5074 <__addsf3x+0x86>
    5056:	1f 16       	cp	r1, r31
    5058:	ba 0b       	sbc	r27, r26
    505a:	62 0b       	sbc	r22, r18
    505c:	73 0b       	sbc	r23, r19
    505e:	84 0b       	sbc	r24, r20
    5060:	ba f0       	brmi	.+46     	; 0x5090 <__addsf3x+0xa2>
    5062:	91 50       	subi	r25, 0x01	; 1
    5064:	a1 f0       	breq	.+40     	; 0x508e <__addsf3x+0xa0>
    5066:	ff 0f       	add	r31, r31
    5068:	bb 1f       	adc	r27, r27
    506a:	66 1f       	adc	r22, r22
    506c:	77 1f       	adc	r23, r23
    506e:	88 1f       	adc	r24, r24
    5070:	c2 f7       	brpl	.-16     	; 0x5062 <__addsf3x+0x74>
    5072:	0e c0       	rjmp	.+28     	; 0x5090 <__addsf3x+0xa2>
    5074:	ba 0f       	add	r27, r26
    5076:	62 1f       	adc	r22, r18
    5078:	73 1f       	adc	r23, r19
    507a:	84 1f       	adc	r24, r20
    507c:	48 f4       	brcc	.+18     	; 0x5090 <__addsf3x+0xa2>
    507e:	87 95       	ror	r24
    5080:	77 95       	ror	r23
    5082:	67 95       	ror	r22
    5084:	b7 95       	ror	r27
    5086:	f7 95       	ror	r31
    5088:	9e 3f       	cpi	r25, 0xFE	; 254
    508a:	08 f0       	brcs	.+2      	; 0x508e <__addsf3x+0xa0>
    508c:	ae cf       	rjmp	.-164    	; 0x4fea <__mulsf3_pse+0xd2>
    508e:	93 95       	inc	r25
    5090:	88 0f       	add	r24, r24
    5092:	08 f0       	brcs	.+2      	; 0x5096 <__addsf3x+0xa8>
    5094:	99 27       	eor	r25, r25
    5096:	ee 0f       	add	r30, r30
    5098:	97 95       	ror	r25
    509a:	87 95       	ror	r24
    509c:	08 95       	ret

0000509e <__fp_mpack>:
    509e:	9f 3f       	cpi	r25, 0xFF	; 255
    50a0:	49 f0       	breq	.+18     	; 0x50b4 <__fp_mpack+0x16>
    50a2:	91 50       	subi	r25, 0x01	; 1
    50a4:	28 f4       	brcc	.+10     	; 0x50b0 <__fp_mpack+0x12>
    50a6:	86 95       	lsr	r24
    50a8:	77 95       	ror	r23
    50aa:	67 95       	ror	r22
    50ac:	b7 95       	ror	r27
    50ae:	9f 5f       	subi	r25, 0xFF	; 255
    50b0:	80 38       	cpi	r24, 0x80	; 128
    50b2:	9f 4f       	sbci	r25, 0xFF	; 255
    50b4:	88 0f       	add	r24, r24
    50b6:	96 95       	lsr	r25
    50b8:	87 95       	ror	r24
    50ba:	97 f9       	bld	r25, 7
    50bc:	08 95       	ret

000050be <__fp_pscA>:
    50be:	00 24       	eor	r0, r0
    50c0:	0a 94       	dec	r0
    50c2:	16 16       	cp	r1, r22
    50c4:	17 06       	cpc	r1, r23
    50c6:	18 06       	cpc	r1, r24
    50c8:	09 06       	cpc	r0, r25
    50ca:	08 95       	ret

000050cc <__fp_pscB>:
    50cc:	00 24       	eor	r0, r0
    50ce:	0a 94       	dec	r0
    50d0:	12 16       	cp	r1, r18
    50d2:	13 06       	cpc	r1, r19
    50d4:	14 06       	cpc	r1, r20
    50d6:	05 06       	cpc	r0, r21
    50d8:	08 95       	ret

000050da <__fp_round>:
    50da:	09 2e       	mov	r0, r25
    50dc:	03 94       	inc	r0
    50de:	00 0c       	add	r0, r0
    50e0:	11 f4       	brne	.+4      	; 0x50e6 <__fp_round+0xc>
    50e2:	88 23       	and	r24, r24
    50e4:	52 f0       	brmi	.+20     	; 0x50fa <__fp_round+0x20>
    50e6:	bb 0f       	add	r27, r27
    50e8:	40 f4       	brcc	.+16     	; 0x50fa <__fp_round+0x20>
    50ea:	bf 2b       	or	r27, r31
    50ec:	11 f4       	brne	.+4      	; 0x50f2 <__fp_round+0x18>
    50ee:	60 ff       	sbrs	r22, 0
    50f0:	04 c0       	rjmp	.+8      	; 0x50fa <__fp_round+0x20>
    50f2:	6f 5f       	subi	r22, 0xFF	; 255
    50f4:	7f 4f       	sbci	r23, 0xFF	; 255
    50f6:	8f 4f       	sbci	r24, 0xFF	; 255
    50f8:	9f 4f       	sbci	r25, 0xFF	; 255
    50fa:	08 95       	ret

000050fc <malloc>:
    50fc:	cf 93       	push	r28
    50fe:	df 93       	push	r29
    5100:	bc 01       	movw	r22, r24
    5102:	82 30       	cpi	r24, 0x02	; 2
    5104:	91 05       	cpc	r25, r1
    5106:	10 f4       	brcc	.+4      	; 0x510c <malloc+0x10>
    5108:	62 e0       	ldi	r22, 0x02	; 2
    510a:	70 e0       	ldi	r23, 0x00	; 0
    510c:	a0 91 dd 03 	lds	r26, 0x03DD
    5110:	b0 91 de 03 	lds	r27, 0x03DE
    5114:	ed 01       	movw	r28, r26
    5116:	e0 e0       	ldi	r30, 0x00	; 0
    5118:	f0 e0       	ldi	r31, 0x00	; 0
    511a:	40 e0       	ldi	r20, 0x00	; 0
    511c:	50 e0       	ldi	r21, 0x00	; 0
    511e:	21 c0       	rjmp	.+66     	; 0x5162 <malloc+0x66>
    5120:	88 81       	ld	r24, Y
    5122:	99 81       	ldd	r25, Y+1	; 0x01
    5124:	86 17       	cp	r24, r22
    5126:	97 07       	cpc	r25, r23
    5128:	69 f4       	brne	.+26     	; 0x5144 <malloc+0x48>
    512a:	8a 81       	ldd	r24, Y+2	; 0x02
    512c:	9b 81       	ldd	r25, Y+3	; 0x03
    512e:	30 97       	sbiw	r30, 0x00	; 0
    5130:	19 f0       	breq	.+6      	; 0x5138 <malloc+0x3c>
    5132:	93 83       	std	Z+3, r25	; 0x03
    5134:	82 83       	std	Z+2, r24	; 0x02
    5136:	04 c0       	rjmp	.+8      	; 0x5140 <malloc+0x44>
    5138:	90 93 de 03 	sts	0x03DE, r25
    513c:	80 93 dd 03 	sts	0x03DD, r24
    5140:	fe 01       	movw	r30, r28
    5142:	34 c0       	rjmp	.+104    	; 0x51ac <malloc+0xb0>
    5144:	68 17       	cp	r22, r24
    5146:	79 07       	cpc	r23, r25
    5148:	38 f4       	brcc	.+14     	; 0x5158 <malloc+0x5c>
    514a:	41 15       	cp	r20, r1
    514c:	51 05       	cpc	r21, r1
    514e:	19 f0       	breq	.+6      	; 0x5156 <malloc+0x5a>
    5150:	84 17       	cp	r24, r20
    5152:	95 07       	cpc	r25, r21
    5154:	08 f4       	brcc	.+2      	; 0x5158 <malloc+0x5c>
    5156:	ac 01       	movw	r20, r24
    5158:	fe 01       	movw	r30, r28
    515a:	8a 81       	ldd	r24, Y+2	; 0x02
    515c:	9b 81       	ldd	r25, Y+3	; 0x03
    515e:	9c 01       	movw	r18, r24
    5160:	e9 01       	movw	r28, r18
    5162:	20 97       	sbiw	r28, 0x00	; 0
    5164:	e9 f6       	brne	.-70     	; 0x5120 <malloc+0x24>
    5166:	41 15       	cp	r20, r1
    5168:	51 05       	cpc	r21, r1
    516a:	a9 f1       	breq	.+106    	; 0x51d6 <malloc+0xda>
    516c:	ca 01       	movw	r24, r20
    516e:	86 1b       	sub	r24, r22
    5170:	97 0b       	sbc	r25, r23
    5172:	04 97       	sbiw	r24, 0x04	; 4
    5174:	08 f4       	brcc	.+2      	; 0x5178 <malloc+0x7c>
    5176:	ba 01       	movw	r22, r20
    5178:	e0 e0       	ldi	r30, 0x00	; 0
    517a:	f0 e0       	ldi	r31, 0x00	; 0
    517c:	2a c0       	rjmp	.+84     	; 0x51d2 <malloc+0xd6>
    517e:	8d 91       	ld	r24, X+
    5180:	9c 91       	ld	r25, X
    5182:	11 97       	sbiw	r26, 0x01	; 1
    5184:	84 17       	cp	r24, r20
    5186:	95 07       	cpc	r25, r21
    5188:	f9 f4       	brne	.+62     	; 0x51c8 <malloc+0xcc>
    518a:	64 17       	cp	r22, r20
    518c:	75 07       	cpc	r23, r21
    518e:	81 f4       	brne	.+32     	; 0x51b0 <malloc+0xb4>
    5190:	12 96       	adiw	r26, 0x02	; 2
    5192:	8d 91       	ld	r24, X+
    5194:	9c 91       	ld	r25, X
    5196:	13 97       	sbiw	r26, 0x03	; 3
    5198:	30 97       	sbiw	r30, 0x00	; 0
    519a:	19 f0       	breq	.+6      	; 0x51a2 <malloc+0xa6>
    519c:	93 83       	std	Z+3, r25	; 0x03
    519e:	82 83       	std	Z+2, r24	; 0x02
    51a0:	04 c0       	rjmp	.+8      	; 0x51aa <malloc+0xae>
    51a2:	90 93 de 03 	sts	0x03DE, r25
    51a6:	80 93 dd 03 	sts	0x03DD, r24
    51aa:	fd 01       	movw	r30, r26
    51ac:	32 96       	adiw	r30, 0x02	; 2
    51ae:	4f c0       	rjmp	.+158    	; 0x524e <malloc+0x152>
    51b0:	ca 01       	movw	r24, r20
    51b2:	86 1b       	sub	r24, r22
    51b4:	97 0b       	sbc	r25, r23
    51b6:	fd 01       	movw	r30, r26
    51b8:	e8 0f       	add	r30, r24
    51ba:	f9 1f       	adc	r31, r25
    51bc:	61 93       	st	Z+, r22
    51be:	71 93       	st	Z+, r23
    51c0:	02 97       	sbiw	r24, 0x02	; 2
    51c2:	8d 93       	st	X+, r24
    51c4:	9c 93       	st	X, r25
    51c6:	43 c0       	rjmp	.+134    	; 0x524e <malloc+0x152>
    51c8:	fd 01       	movw	r30, r26
    51ca:	82 81       	ldd	r24, Z+2	; 0x02
    51cc:	93 81       	ldd	r25, Z+3	; 0x03
    51ce:	9c 01       	movw	r18, r24
    51d0:	d9 01       	movw	r26, r18
    51d2:	10 97       	sbiw	r26, 0x00	; 0
    51d4:	a1 f6       	brne	.-88     	; 0x517e <malloc+0x82>
    51d6:	80 91 db 03 	lds	r24, 0x03DB
    51da:	90 91 dc 03 	lds	r25, 0x03DC
    51de:	89 2b       	or	r24, r25
    51e0:	41 f4       	brne	.+16     	; 0x51f2 <malloc+0xf6>
    51e2:	80 91 63 02 	lds	r24, 0x0263
    51e6:	90 91 64 02 	lds	r25, 0x0264
    51ea:	90 93 dc 03 	sts	0x03DC, r25
    51ee:	80 93 db 03 	sts	0x03DB, r24
    51f2:	40 91 65 02 	lds	r20, 0x0265
    51f6:	50 91 66 02 	lds	r21, 0x0266
    51fa:	41 15       	cp	r20, r1
    51fc:	51 05       	cpc	r21, r1
    51fe:	41 f4       	brne	.+16     	; 0x5210 <malloc+0x114>
    5200:	4d b7       	in	r20, 0x3d	; 61
    5202:	5e b7       	in	r21, 0x3e	; 62
    5204:	80 91 61 02 	lds	r24, 0x0261
    5208:	90 91 62 02 	lds	r25, 0x0262
    520c:	48 1b       	sub	r20, r24
    520e:	59 0b       	sbc	r21, r25
    5210:	20 91 db 03 	lds	r18, 0x03DB
    5214:	30 91 dc 03 	lds	r19, 0x03DC
    5218:	24 17       	cp	r18, r20
    521a:	35 07       	cpc	r19, r21
    521c:	b0 f4       	brcc	.+44     	; 0x524a <malloc+0x14e>
    521e:	ca 01       	movw	r24, r20
    5220:	82 1b       	sub	r24, r18
    5222:	93 0b       	sbc	r25, r19
    5224:	86 17       	cp	r24, r22
    5226:	97 07       	cpc	r25, r23
    5228:	80 f0       	brcs	.+32     	; 0x524a <malloc+0x14e>
    522a:	ab 01       	movw	r20, r22
    522c:	4e 5f       	subi	r20, 0xFE	; 254
    522e:	5f 4f       	sbci	r21, 0xFF	; 255
    5230:	84 17       	cp	r24, r20
    5232:	95 07       	cpc	r25, r21
    5234:	50 f0       	brcs	.+20     	; 0x524a <malloc+0x14e>
    5236:	42 0f       	add	r20, r18
    5238:	53 1f       	adc	r21, r19
    523a:	50 93 dc 03 	sts	0x03DC, r21
    523e:	40 93 db 03 	sts	0x03DB, r20
    5242:	f9 01       	movw	r30, r18
    5244:	61 93       	st	Z+, r22
    5246:	71 93       	st	Z+, r23
    5248:	02 c0       	rjmp	.+4      	; 0x524e <malloc+0x152>
    524a:	e0 e0       	ldi	r30, 0x00	; 0
    524c:	f0 e0       	ldi	r31, 0x00	; 0
    524e:	cf 01       	movw	r24, r30
    5250:	df 91       	pop	r29
    5252:	cf 91       	pop	r28
    5254:	08 95       	ret

00005256 <free>:
    5256:	cf 93       	push	r28
    5258:	df 93       	push	r29
    525a:	00 97       	sbiw	r24, 0x00	; 0
    525c:	09 f4       	brne	.+2      	; 0x5260 <free+0xa>
    525e:	50 c0       	rjmp	.+160    	; 0x5300 <free+0xaa>
    5260:	ec 01       	movw	r28, r24
    5262:	22 97       	sbiw	r28, 0x02	; 2
    5264:	1b 82       	std	Y+3, r1	; 0x03
    5266:	1a 82       	std	Y+2, r1	; 0x02
    5268:	a0 91 dd 03 	lds	r26, 0x03DD
    526c:	b0 91 de 03 	lds	r27, 0x03DE
    5270:	10 97       	sbiw	r26, 0x00	; 0
    5272:	09 f1       	breq	.+66     	; 0x52b6 <free+0x60>
    5274:	40 e0       	ldi	r20, 0x00	; 0
    5276:	50 e0       	ldi	r21, 0x00	; 0
    5278:	ac 17       	cp	r26, r28
    527a:	bd 07       	cpc	r27, r29
    527c:	08 f1       	brcs	.+66     	; 0x52c0 <free+0x6a>
    527e:	bb 83       	std	Y+3, r27	; 0x03
    5280:	aa 83       	std	Y+2, r26	; 0x02
    5282:	fe 01       	movw	r30, r28
    5284:	21 91       	ld	r18, Z+
    5286:	31 91       	ld	r19, Z+
    5288:	e2 0f       	add	r30, r18
    528a:	f3 1f       	adc	r31, r19
    528c:	ae 17       	cp	r26, r30
    528e:	bf 07       	cpc	r27, r31
    5290:	79 f4       	brne	.+30     	; 0x52b0 <free+0x5a>
    5292:	8d 91       	ld	r24, X+
    5294:	9c 91       	ld	r25, X
    5296:	11 97       	sbiw	r26, 0x01	; 1
    5298:	28 0f       	add	r18, r24
    529a:	39 1f       	adc	r19, r25
    529c:	2e 5f       	subi	r18, 0xFE	; 254
    529e:	3f 4f       	sbci	r19, 0xFF	; 255
    52a0:	39 83       	std	Y+1, r19	; 0x01
    52a2:	28 83       	st	Y, r18
    52a4:	12 96       	adiw	r26, 0x02	; 2
    52a6:	8d 91       	ld	r24, X+
    52a8:	9c 91       	ld	r25, X
    52aa:	13 97       	sbiw	r26, 0x03	; 3
    52ac:	9b 83       	std	Y+3, r25	; 0x03
    52ae:	8a 83       	std	Y+2, r24	; 0x02
    52b0:	41 15       	cp	r20, r1
    52b2:	51 05       	cpc	r21, r1
    52b4:	71 f4       	brne	.+28     	; 0x52d2 <free+0x7c>
    52b6:	d0 93 de 03 	sts	0x03DE, r29
    52ba:	c0 93 dd 03 	sts	0x03DD, r28
    52be:	20 c0       	rjmp	.+64     	; 0x5300 <free+0xaa>
    52c0:	12 96       	adiw	r26, 0x02	; 2
    52c2:	8d 91       	ld	r24, X+
    52c4:	9c 91       	ld	r25, X
    52c6:	13 97       	sbiw	r26, 0x03	; 3
    52c8:	ad 01       	movw	r20, r26
    52ca:	00 97       	sbiw	r24, 0x00	; 0
    52cc:	11 f0       	breq	.+4      	; 0x52d2 <free+0x7c>
    52ce:	dc 01       	movw	r26, r24
    52d0:	d3 cf       	rjmp	.-90     	; 0x5278 <free+0x22>
    52d2:	fa 01       	movw	r30, r20
    52d4:	d3 83       	std	Z+3, r29	; 0x03
    52d6:	c2 83       	std	Z+2, r28	; 0x02
    52d8:	21 91       	ld	r18, Z+
    52da:	31 91       	ld	r19, Z+
    52dc:	e2 0f       	add	r30, r18
    52de:	f3 1f       	adc	r31, r19
    52e0:	ce 17       	cp	r28, r30
    52e2:	df 07       	cpc	r29, r31
    52e4:	69 f4       	brne	.+26     	; 0x5300 <free+0xaa>
    52e6:	88 81       	ld	r24, Y
    52e8:	99 81       	ldd	r25, Y+1	; 0x01
    52ea:	28 0f       	add	r18, r24
    52ec:	39 1f       	adc	r19, r25
    52ee:	2e 5f       	subi	r18, 0xFE	; 254
    52f0:	3f 4f       	sbci	r19, 0xFF	; 255
    52f2:	fa 01       	movw	r30, r20
    52f4:	31 83       	std	Z+1, r19	; 0x01
    52f6:	20 83       	st	Z, r18
    52f8:	8a 81       	ldd	r24, Y+2	; 0x02
    52fa:	9b 81       	ldd	r25, Y+3	; 0x03
    52fc:	93 83       	std	Z+3, r25	; 0x03
    52fe:	82 83       	std	Z+2, r24	; 0x02
    5300:	df 91       	pop	r29
    5302:	cf 91       	pop	r28
    5304:	08 95       	ret

00005306 <realloc>:
    5306:	a0 e0       	ldi	r26, 0x00	; 0
    5308:	b0 e0       	ldi	r27, 0x00	; 0
    530a:	e9 e8       	ldi	r30, 0x89	; 137
    530c:	f9 e2       	ldi	r31, 0x29	; 41
    530e:	0c 94 9f 25 	jmp	0x4b3e	; 0x4b3e <__prologue_saves__+0xc>
    5312:	8c 01       	movw	r16, r24
    5314:	00 97       	sbiw	r24, 0x00	; 0
    5316:	29 f4       	brne	.+10     	; 0x5322 <realloc+0x1c>
    5318:	cb 01       	movw	r24, r22
    531a:	0e 94 7e 28 	call	0x50fc	; 0x50fc <malloc>
    531e:	8c 01       	movw	r16, r24
    5320:	ba c0       	rjmp	.+372    	; 0x5496 <realloc+0x190>
    5322:	9e ef       	ldi	r25, 0xFE	; 254
    5324:	e9 2e       	mov	r14, r25
    5326:	9f ef       	ldi	r25, 0xFF	; 255
    5328:	f9 2e       	mov	r15, r25
    532a:	e0 0e       	add	r14, r16
    532c:	f1 1e       	adc	r15, r17
    532e:	58 01       	movw	r10, r16
    5330:	a6 0e       	add	r10, r22
    5332:	b7 1e       	adc	r11, r23
    5334:	ae 14       	cp	r10, r14
    5336:	bf 04       	cpc	r11, r15
    5338:	08 f4       	brcc	.+2      	; 0x533c <realloc+0x36>
    533a:	ab c0       	rjmp	.+342    	; 0x5492 <realloc+0x18c>
    533c:	8e ef       	ldi	r24, 0xFE	; 254
    533e:	88 2e       	mov	r8, r24
    5340:	8f ef       	ldi	r24, 0xFF	; 255
    5342:	98 2e       	mov	r9, r24
    5344:	8a 0c       	add	r8, r10
    5346:	9b 1c       	adc	r9, r11
    5348:	e7 01       	movw	r28, r14
    534a:	48 81       	ld	r20, Y
    534c:	59 81       	ldd	r21, Y+1	; 0x01
    534e:	46 17       	cp	r20, r22
    5350:	57 07       	cpc	r21, r23
    5352:	b8 f0       	brcs	.+46     	; 0x5382 <realloc+0x7c>
    5354:	45 30       	cpi	r20, 0x05	; 5
    5356:	51 05       	cpc	r21, r1
    5358:	08 f4       	brcc	.+2      	; 0x535c <realloc+0x56>
    535a:	9d c0       	rjmp	.+314    	; 0x5496 <realloc+0x190>
    535c:	ca 01       	movw	r24, r20
    535e:	04 97       	sbiw	r24, 0x04	; 4
    5360:	86 17       	cp	r24, r22
    5362:	97 07       	cpc	r25, r23
    5364:	08 f4       	brcc	.+2      	; 0x5368 <realloc+0x62>
    5366:	97 c0       	rjmp	.+302    	; 0x5496 <realloc+0x190>
    5368:	42 50       	subi	r20, 0x02	; 2
    536a:	50 40       	sbci	r21, 0x00	; 0
    536c:	46 1b       	sub	r20, r22
    536e:	57 0b       	sbc	r21, r23
    5370:	f4 01       	movw	r30, r8
    5372:	51 83       	std	Z+1, r21	; 0x01
    5374:	40 83       	st	Z, r20
    5376:	79 83       	std	Y+1, r23	; 0x01
    5378:	68 83       	st	Y, r22
    537a:	c5 01       	movw	r24, r10
    537c:	0e 94 2b 29 	call	0x5256	; 0x5256 <free>
    5380:	8a c0       	rjmp	.+276    	; 0x5496 <realloc+0x190>
    5382:	6b 01       	movw	r12, r22
    5384:	c4 1a       	sub	r12, r20
    5386:	d5 0a       	sbc	r13, r21
    5388:	e0 91 dd 03 	lds	r30, 0x03DD
    538c:	f0 91 de 03 	lds	r31, 0x03DE
    5390:	a0 e0       	ldi	r26, 0x00	; 0
    5392:	b0 e0       	ldi	r27, 0x00	; 0
    5394:	c0 e0       	ldi	r28, 0x00	; 0
    5396:	d0 e0       	ldi	r29, 0x00	; 0
    5398:	42 c0       	rjmp	.+132    	; 0x541e <realloc+0x118>
    539a:	e8 15       	cp	r30, r8
    539c:	f9 05       	cpc	r31, r9
    539e:	a1 f5       	brne	.+104    	; 0x5408 <realloc+0x102>
    53a0:	20 81       	ld	r18, Z
    53a2:	31 81       	ldd	r19, Z+1	; 0x01
    53a4:	2c 15       	cp	r18, r12
    53a6:	3d 05       	cpc	r19, r13
    53a8:	78 f1       	brcs	.+94     	; 0x5408 <realloc+0x102>
    53aa:	c9 01       	movw	r24, r18
    53ac:	02 96       	adiw	r24, 0x02	; 2
    53ae:	8c 15       	cp	r24, r12
    53b0:	9d 05       	cpc	r25, r13
    53b2:	a8 f0       	brcs	.+42     	; 0x53de <realloc+0xd8>
    53b4:	4e 5f       	subi	r20, 0xFE	; 254
    53b6:	5f 4f       	sbci	r21, 0xFF	; 255
    53b8:	42 0f       	add	r20, r18
    53ba:	53 1f       	adc	r21, r19
    53bc:	e7 01       	movw	r28, r14
    53be:	59 83       	std	Y+1, r21	; 0x01
    53c0:	48 83       	st	Y, r20
    53c2:	22 81       	ldd	r18, Z+2	; 0x02
    53c4:	33 81       	ldd	r19, Z+3	; 0x03
    53c6:	10 97       	sbiw	r26, 0x00	; 0
    53c8:	29 f0       	breq	.+10     	; 0x53d4 <realloc+0xce>
    53ca:	13 96       	adiw	r26, 0x03	; 3
    53cc:	3c 93       	st	X, r19
    53ce:	2e 93       	st	-X, r18
    53d0:	12 97       	sbiw	r26, 0x02	; 2
    53d2:	61 c0       	rjmp	.+194    	; 0x5496 <realloc+0x190>
    53d4:	30 93 de 03 	sts	0x03DE, r19
    53d8:	20 93 dd 03 	sts	0x03DD, r18
    53dc:	5c c0       	rjmp	.+184    	; 0x5496 <realloc+0x190>
    53de:	22 50       	subi	r18, 0x02	; 2
    53e0:	30 40       	sbci	r19, 0x00	; 0
    53e2:	2c 19       	sub	r18, r12
    53e4:	3d 09       	sbc	r19, r13
    53e6:	31 83       	std	Z+1, r19	; 0x01
    53e8:	20 83       	st	Z, r18
    53ea:	10 97       	sbiw	r26, 0x00	; 0
    53ec:	29 f0       	breq	.+10     	; 0x53f8 <realloc+0xf2>
    53ee:	13 96       	adiw	r26, 0x03	; 3
    53f0:	fc 93       	st	X, r31
    53f2:	ee 93       	st	-X, r30
    53f4:	12 97       	sbiw	r26, 0x02	; 2
    53f6:	04 c0       	rjmp	.+8      	; 0x5400 <realloc+0xfa>
    53f8:	f0 93 de 03 	sts	0x03DE, r31
    53fc:	e0 93 dd 03 	sts	0x03DD, r30
    5400:	f7 01       	movw	r30, r14
    5402:	71 83       	std	Z+1, r23	; 0x01
    5404:	60 83       	st	Z, r22
    5406:	47 c0       	rjmp	.+142    	; 0x5496 <realloc+0x190>
    5408:	80 81       	ld	r24, Z
    540a:	91 81       	ldd	r25, Z+1	; 0x01
    540c:	c8 17       	cp	r28, r24
    540e:	d9 07       	cpc	r29, r25
    5410:	08 f4       	brcc	.+2      	; 0x5414 <realloc+0x10e>
    5412:	ec 01       	movw	r28, r24
    5414:	df 01       	movw	r26, r30
    5416:	82 81       	ldd	r24, Z+2	; 0x02
    5418:	93 81       	ldd	r25, Z+3	; 0x03
    541a:	9c 01       	movw	r18, r24
    541c:	f9 01       	movw	r30, r18
    541e:	30 97       	sbiw	r30, 0x00	; 0
    5420:	09 f0       	breq	.+2      	; 0x5424 <realloc+0x11e>
    5422:	bb cf       	rjmp	.-138    	; 0x539a <realloc+0x94>
    5424:	40 0f       	add	r20, r16
    5426:	51 1f       	adc	r21, r17
    5428:	80 91 db 03 	lds	r24, 0x03DB
    542c:	90 91 dc 03 	lds	r25, 0x03DC
    5430:	84 17       	cp	r24, r20
    5432:	95 07       	cpc	r25, r21
    5434:	e9 f4       	brne	.+58     	; 0x5470 <realloc+0x16a>
    5436:	c6 17       	cp	r28, r22
    5438:	d7 07       	cpc	r29, r23
    543a:	d0 f4       	brcc	.+52     	; 0x5470 <realloc+0x16a>
    543c:	20 91 65 02 	lds	r18, 0x0265
    5440:	30 91 66 02 	lds	r19, 0x0266
    5444:	21 15       	cp	r18, r1
    5446:	31 05       	cpc	r19, r1
    5448:	41 f4       	brne	.+16     	; 0x545a <realloc+0x154>
    544a:	2d b7       	in	r18, 0x3d	; 61
    544c:	3e b7       	in	r19, 0x3e	; 62
    544e:	80 91 61 02 	lds	r24, 0x0261
    5452:	90 91 62 02 	lds	r25, 0x0262
    5456:	28 1b       	sub	r18, r24
    5458:	39 0b       	sbc	r19, r25
    545a:	a2 16       	cp	r10, r18
    545c:	b3 06       	cpc	r11, r19
    545e:	c8 f4       	brcc	.+50     	; 0x5492 <realloc+0x18c>
    5460:	b0 92 dc 03 	sts	0x03DC, r11
    5464:	a0 92 db 03 	sts	0x03DB, r10
    5468:	e7 01       	movw	r28, r14
    546a:	79 83       	std	Y+1, r23	; 0x01
    546c:	68 83       	st	Y, r22
    546e:	13 c0       	rjmp	.+38     	; 0x5496 <realloc+0x190>
    5470:	cb 01       	movw	r24, r22
    5472:	0e 94 7e 28 	call	0x50fc	; 0x50fc <malloc>
    5476:	ec 01       	movw	r28, r24
    5478:	00 97       	sbiw	r24, 0x00	; 0
    547a:	59 f0       	breq	.+22     	; 0x5492 <realloc+0x18c>
    547c:	f7 01       	movw	r30, r14
    547e:	40 81       	ld	r20, Z
    5480:	51 81       	ldd	r21, Z+1	; 0x01
    5482:	b8 01       	movw	r22, r16
    5484:	0e 94 90 2a 	call	0x5520	; 0x5520 <memcpy>
    5488:	c8 01       	movw	r24, r16
    548a:	0e 94 2b 29 	call	0x5256	; 0x5256 <free>
    548e:	8e 01       	movw	r16, r28
    5490:	02 c0       	rjmp	.+4      	; 0x5496 <realloc+0x190>
    5492:	00 e0       	ldi	r16, 0x00	; 0
    5494:	10 e0       	ldi	r17, 0x00	; 0
    5496:	c8 01       	movw	r24, r16
    5498:	cd b7       	in	r28, 0x3d	; 61
    549a:	de b7       	in	r29, 0x3e	; 62
    549c:	ec e0       	ldi	r30, 0x0C	; 12
    549e:	0c 94 bb 25 	jmp	0x4b76	; 0x4b76 <__epilogue_restores__+0xc>

000054a2 <atol>:
    54a2:	1f 93       	push	r17
    54a4:	fc 01       	movw	r30, r24
    54a6:	99 27       	eor	r25, r25
    54a8:	88 27       	eor	r24, r24
    54aa:	bc 01       	movw	r22, r24
    54ac:	e8 94       	clt
    54ae:	11 91       	ld	r17, Z+
    54b0:	10 32       	cpi	r17, 0x20	; 32
    54b2:	e9 f3       	breq	.-6      	; 0x54ae <atol+0xc>
    54b4:	19 30       	cpi	r17, 0x09	; 9
    54b6:	10 f0       	brcs	.+4      	; 0x54bc <atol+0x1a>
    54b8:	1e 30       	cpi	r17, 0x0E	; 14
    54ba:	c8 f3       	brcs	.-14     	; 0x54ae <atol+0xc>
    54bc:	1b 32       	cpi	r17, 0x2B	; 43
    54be:	51 f0       	breq	.+20     	; 0x54d4 <atol+0x32>
    54c0:	1d 32       	cpi	r17, 0x2D	; 45
    54c2:	49 f4       	brne	.+18     	; 0x54d6 <atol+0x34>
    54c4:	68 94       	set
    54c6:	06 c0       	rjmp	.+12     	; 0x54d4 <atol+0x32>
    54c8:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__mulsi_const_10>
    54cc:	61 0f       	add	r22, r17
    54ce:	71 1d       	adc	r23, r1
    54d0:	81 1d       	adc	r24, r1
    54d2:	91 1d       	adc	r25, r1
    54d4:	11 91       	ld	r17, Z+
    54d6:	10 53       	subi	r17, 0x30	; 48
    54d8:	1a 30       	cpi	r17, 0x0A	; 10
    54da:	b0 f3       	brcs	.-20     	; 0x54c8 <atol+0x26>
    54dc:	3e f4       	brtc	.+14     	; 0x54ec <atol+0x4a>
    54de:	90 95       	com	r25
    54e0:	80 95       	com	r24
    54e2:	70 95       	com	r23
    54e4:	61 95       	neg	r22
    54e6:	7f 4f       	sbci	r23, 0xFF	; 255
    54e8:	8f 4f       	sbci	r24, 0xFF	; 255
    54ea:	9f 4f       	sbci	r25, 0xFF	; 255
    54ec:	1f 91       	pop	r17
    54ee:	08 95       	ret

000054f0 <isspace>:
    54f0:	91 11       	cpse	r25, r1
    54f2:	16 c1       	rjmp	.+556    	; 0x5720 <__ctype_isfalse>
    54f4:	80 32       	cpi	r24, 0x20	; 32
    54f6:	19 f0       	breq	.+6      	; 0x54fe <isspace+0xe>
    54f8:	89 50       	subi	r24, 0x09	; 9
    54fa:	85 50       	subi	r24, 0x05	; 5
    54fc:	d0 f7       	brcc	.-12     	; 0x54f2 <isspace+0x2>
    54fe:	08 95       	ret

00005500 <tolower>:
    5500:	91 11       	cpse	r25, r1
    5502:	08 95       	ret
    5504:	81 54       	subi	r24, 0x41	; 65
    5506:	8a 51       	subi	r24, 0x1A	; 26
    5508:	08 f4       	brcc	.+2      	; 0x550c <tolower+0xc>
    550a:	80 5e       	subi	r24, 0xE0	; 224
    550c:	85 5a       	subi	r24, 0xA5	; 165
    550e:	08 95       	ret

00005510 <toupper>:
    5510:	91 11       	cpse	r25, r1
    5512:	08 95       	ret
    5514:	81 56       	subi	r24, 0x61	; 97
    5516:	8a 51       	subi	r24, 0x1A	; 26
    5518:	08 f4       	brcc	.+2      	; 0x551c <toupper+0xc>
    551a:	80 52       	subi	r24, 0x20	; 32
    551c:	85 58       	subi	r24, 0x85	; 133
    551e:	08 95       	ret

00005520 <memcpy>:
    5520:	fb 01       	movw	r30, r22
    5522:	dc 01       	movw	r26, r24
    5524:	02 c0       	rjmp	.+4      	; 0x552a <memcpy+0xa>
    5526:	01 90       	ld	r0, Z+
    5528:	0d 92       	st	X+, r0
    552a:	41 50       	subi	r20, 0x01	; 1
    552c:	50 40       	sbci	r21, 0x00	; 0
    552e:	d8 f7       	brcc	.-10     	; 0x5526 <memcpy+0x6>
    5530:	08 95       	ret

00005532 <strcat>:
    5532:	fb 01       	movw	r30, r22
    5534:	dc 01       	movw	r26, r24
    5536:	0d 90       	ld	r0, X+
    5538:	00 20       	and	r0, r0
    553a:	e9 f7       	brne	.-6      	; 0x5536 <strcat+0x4>
    553c:	11 97       	sbiw	r26, 0x01	; 1
    553e:	01 90       	ld	r0, Z+
    5540:	0d 92       	st	X+, r0
    5542:	00 20       	and	r0, r0
    5544:	e1 f7       	brne	.-8      	; 0x553e <strcat+0xc>
    5546:	08 95       	ret

00005548 <strchr>:
    5548:	fc 01       	movw	r30, r24
    554a:	81 91       	ld	r24, Z+
    554c:	86 17       	cp	r24, r22
    554e:	21 f0       	breq	.+8      	; 0x5558 <strchr+0x10>
    5550:	88 23       	and	r24, r24
    5552:	d9 f7       	brne	.-10     	; 0x554a <strchr+0x2>
    5554:	99 27       	eor	r25, r25
    5556:	08 95       	ret
    5558:	31 97       	sbiw	r30, 0x01	; 1
    555a:	cf 01       	movw	r24, r30
    555c:	08 95       	ret

0000555e <strcmp>:
    555e:	fb 01       	movw	r30, r22
    5560:	dc 01       	movw	r26, r24
    5562:	8d 91       	ld	r24, X+
    5564:	01 90       	ld	r0, Z+
    5566:	80 19       	sub	r24, r0
    5568:	01 10       	cpse	r0, r1
    556a:	d9 f3       	breq	.-10     	; 0x5562 <strcmp+0x4>
    556c:	99 0b       	sbc	r25, r25
    556e:	08 95       	ret

00005570 <strcpy>:
    5570:	fb 01       	movw	r30, r22
    5572:	dc 01       	movw	r26, r24
    5574:	01 90       	ld	r0, Z+
    5576:	0d 92       	st	X+, r0
    5578:	00 20       	and	r0, r0
    557a:	e1 f7       	brne	.-8      	; 0x5574 <strcpy+0x4>
    557c:	08 95       	ret

0000557e <strncmp>:
    557e:	fb 01       	movw	r30, r22
    5580:	dc 01       	movw	r26, r24
    5582:	41 50       	subi	r20, 0x01	; 1
    5584:	50 40       	sbci	r21, 0x00	; 0
    5586:	30 f0       	brcs	.+12     	; 0x5594 <strncmp+0x16>
    5588:	8d 91       	ld	r24, X+
    558a:	01 90       	ld	r0, Z+
    558c:	80 19       	sub	r24, r0
    558e:	19 f4       	brne	.+6      	; 0x5596 <strncmp+0x18>
    5590:	00 20       	and	r0, r0
    5592:	b9 f7       	brne	.-18     	; 0x5582 <strncmp+0x4>
    5594:	88 1b       	sub	r24, r24
    5596:	99 0b       	sbc	r25, r25
    5598:	08 95       	ret

0000559a <strncpy>:
    559a:	fb 01       	movw	r30, r22
    559c:	dc 01       	movw	r26, r24
    559e:	41 50       	subi	r20, 0x01	; 1
    55a0:	50 40       	sbci	r21, 0x00	; 0
    55a2:	48 f0       	brcs	.+18     	; 0x55b6 <strncpy+0x1c>
    55a4:	01 90       	ld	r0, Z+
    55a6:	0d 92       	st	X+, r0
    55a8:	00 20       	and	r0, r0
    55aa:	c9 f7       	brne	.-14     	; 0x559e <strncpy+0x4>
    55ac:	01 c0       	rjmp	.+2      	; 0x55b0 <strncpy+0x16>
    55ae:	1d 92       	st	X+, r1
    55b0:	41 50       	subi	r20, 0x01	; 1
    55b2:	50 40       	sbci	r21, 0x00	; 0
    55b4:	e0 f7       	brcc	.-8      	; 0x55ae <strncpy+0x14>
    55b6:	08 95       	ret

000055b8 <strrchr>:
    55b8:	fc 01       	movw	r30, r24
    55ba:	81 e0       	ldi	r24, 0x01	; 1
    55bc:	90 e0       	ldi	r25, 0x00	; 0
    55be:	01 90       	ld	r0, Z+
    55c0:	06 16       	cp	r0, r22
    55c2:	09 f4       	brne	.+2      	; 0x55c6 <strrchr+0xe>
    55c4:	cf 01       	movw	r24, r30
    55c6:	00 20       	and	r0, r0
    55c8:	d1 f7       	brne	.-12     	; 0x55be <strrchr+0x6>
    55ca:	01 97       	sbiw	r24, 0x01	; 1
    55cc:	08 95       	ret

000055ce <strstr>:
    55ce:	fb 01       	movw	r30, r22
    55d0:	51 91       	ld	r21, Z+
    55d2:	55 23       	and	r21, r21
    55d4:	a9 f0       	breq	.+42     	; 0x5600 <strstr+0x32>
    55d6:	bf 01       	movw	r22, r30
    55d8:	dc 01       	movw	r26, r24
    55da:	4d 91       	ld	r20, X+
    55dc:	45 17       	cp	r20, r21
    55de:	41 11       	cpse	r20, r1
    55e0:	e1 f7       	brne	.-8      	; 0x55da <strstr+0xc>
    55e2:	59 f4       	brne	.+22     	; 0x55fa <strstr+0x2c>
    55e4:	cd 01       	movw	r24, r26
    55e6:	01 90       	ld	r0, Z+
    55e8:	00 20       	and	r0, r0
    55ea:	49 f0       	breq	.+18     	; 0x55fe <strstr+0x30>
    55ec:	4d 91       	ld	r20, X+
    55ee:	40 15       	cp	r20, r0
    55f0:	41 11       	cpse	r20, r1
    55f2:	c9 f3       	breq	.-14     	; 0x55e6 <strstr+0x18>
    55f4:	fb 01       	movw	r30, r22
    55f6:	41 11       	cpse	r20, r1
    55f8:	ef cf       	rjmp	.-34     	; 0x55d8 <strstr+0xa>
    55fa:	81 e0       	ldi	r24, 0x01	; 1
    55fc:	90 e0       	ldi	r25, 0x00	; 0
    55fe:	01 97       	sbiw	r24, 0x01	; 1
    5600:	08 95       	ret

00005602 <itoa>:
    5602:	fb 01       	movw	r30, r22
    5604:	9f 01       	movw	r18, r30
    5606:	e8 94       	clt
    5608:	42 30       	cpi	r20, 0x02	; 2
    560a:	c4 f0       	brlt	.+48     	; 0x563c <itoa+0x3a>
    560c:	45 32       	cpi	r20, 0x25	; 37
    560e:	b4 f4       	brge	.+44     	; 0x563c <itoa+0x3a>
    5610:	4a 30       	cpi	r20, 0x0A	; 10
    5612:	29 f4       	brne	.+10     	; 0x561e <itoa+0x1c>
    5614:	97 fb       	bst	r25, 7
    5616:	1e f4       	brtc	.+6      	; 0x561e <itoa+0x1c>
    5618:	90 95       	com	r25
    561a:	81 95       	neg	r24
    561c:	9f 4f       	sbci	r25, 0xFF	; 255
    561e:	64 2f       	mov	r22, r20
    5620:	77 27       	eor	r23, r23
    5622:	0e 94 85 25 	call	0x4b0a	; 0x4b0a <__udivmodhi4>
    5626:	80 5d       	subi	r24, 0xD0	; 208
    5628:	8a 33       	cpi	r24, 0x3A	; 58
    562a:	0c f0       	brlt	.+2      	; 0x562e <itoa+0x2c>
    562c:	89 5d       	subi	r24, 0xD9	; 217
    562e:	81 93       	st	Z+, r24
    5630:	cb 01       	movw	r24, r22
    5632:	00 97       	sbiw	r24, 0x00	; 0
    5634:	a1 f7       	brne	.-24     	; 0x561e <itoa+0x1c>
    5636:	16 f4       	brtc	.+4      	; 0x563c <itoa+0x3a>
    5638:	5d e2       	ldi	r21, 0x2D	; 45
    563a:	51 93       	st	Z+, r21
    563c:	10 82       	st	Z, r1
    563e:	c9 01       	movw	r24, r18
    5640:	0c 94 93 2b 	jmp	0x5726	; 0x5726 <strrev>

00005644 <ltoa>:
    5644:	fa 01       	movw	r30, r20
    5646:	cf 93       	push	r28
    5648:	ff 93       	push	r31
    564a:	ef 93       	push	r30
    564c:	22 30       	cpi	r18, 0x02	; 2
    564e:	44 f1       	brlt	.+80     	; 0x56a0 <ltoa+0x5c>
    5650:	25 32       	cpi	r18, 0x25	; 37
    5652:	34 f5       	brge	.+76     	; 0x56a0 <ltoa+0x5c>
    5654:	c2 2f       	mov	r28, r18
    5656:	e8 94       	clt
    5658:	ca 30       	cpi	r28, 0x0A	; 10
    565a:	49 f4       	brne	.+18     	; 0x566e <ltoa+0x2a>
    565c:	97 fb       	bst	r25, 7
    565e:	3e f4       	brtc	.+14     	; 0x566e <ltoa+0x2a>
    5660:	90 95       	com	r25
    5662:	80 95       	com	r24
    5664:	70 95       	com	r23
    5666:	61 95       	neg	r22
    5668:	7f 4f       	sbci	r23, 0xFF	; 255
    566a:	8f 4f       	sbci	r24, 0xFF	; 255
    566c:	9f 4f       	sbci	r25, 0xFF	; 255
    566e:	2c 2f       	mov	r18, r28
    5670:	33 27       	eor	r19, r19
    5672:	44 27       	eor	r20, r20
    5674:	55 27       	eor	r21, r21
    5676:	ff 93       	push	r31
    5678:	ef 93       	push	r30
    567a:	0e 94 48 25 	call	0x4a90	; 0x4a90 <__udivmodsi4>
    567e:	ef 91       	pop	r30
    5680:	ff 91       	pop	r31
    5682:	60 5d       	subi	r22, 0xD0	; 208
    5684:	6a 33       	cpi	r22, 0x3A	; 58
    5686:	0c f0       	brlt	.+2      	; 0x568a <ltoa+0x46>
    5688:	69 5d       	subi	r22, 0xD9	; 217
    568a:	61 93       	st	Z+, r22
    568c:	b9 01       	movw	r22, r18
    568e:	ca 01       	movw	r24, r20
    5690:	60 50       	subi	r22, 0x00	; 0
    5692:	70 40       	sbci	r23, 0x00	; 0
    5694:	80 40       	sbci	r24, 0x00	; 0
    5696:	90 40       	sbci	r25, 0x00	; 0
    5698:	51 f7       	brne	.-44     	; 0x566e <ltoa+0x2a>
    569a:	16 f4       	brtc	.+4      	; 0x56a0 <ltoa+0x5c>
    569c:	cd e2       	ldi	r28, 0x2D	; 45
    569e:	c1 93       	st	Z+, r28
    56a0:	10 82       	st	Z, r1
    56a2:	8f 91       	pop	r24
    56a4:	9f 91       	pop	r25
    56a6:	cf 91       	pop	r28
    56a8:	0c 94 93 2b 	jmp	0x5726	; 0x5726 <strrev>

000056ac <__mulsi_const_10>:
    56ac:	59 2f       	mov	r21, r25
    56ae:	48 2f       	mov	r20, r24
    56b0:	37 2f       	mov	r19, r23
    56b2:	26 2f       	mov	r18, r22
    56b4:	66 0f       	add	r22, r22
    56b6:	77 1f       	adc	r23, r23
    56b8:	88 1f       	adc	r24, r24
    56ba:	99 1f       	adc	r25, r25
    56bc:	66 0f       	add	r22, r22
    56be:	77 1f       	adc	r23, r23
    56c0:	88 1f       	adc	r24, r24
    56c2:	99 1f       	adc	r25, r25
    56c4:	62 0f       	add	r22, r18
    56c6:	73 1f       	adc	r23, r19
    56c8:	84 1f       	adc	r24, r20
    56ca:	95 1f       	adc	r25, r21
    56cc:	66 0f       	add	r22, r22
    56ce:	77 1f       	adc	r23, r23
    56d0:	88 1f       	adc	r24, r24
    56d2:	99 1f       	adc	r25, r25
    56d4:	08 95       	ret

000056d6 <ultoa>:
    56d6:	fa 01       	movw	r30, r20
    56d8:	cf 93       	push	r28
    56da:	ff 93       	push	r31
    56dc:	ef 93       	push	r30
    56de:	22 30       	cpi	r18, 0x02	; 2
    56e0:	cc f0       	brlt	.+50     	; 0x5714 <ultoa+0x3e>
    56e2:	25 32       	cpi	r18, 0x25	; 37
    56e4:	bc f4       	brge	.+46     	; 0x5714 <ultoa+0x3e>
    56e6:	c2 2f       	mov	r28, r18
    56e8:	2c 2f       	mov	r18, r28
    56ea:	33 27       	eor	r19, r19
    56ec:	44 27       	eor	r20, r20
    56ee:	55 27       	eor	r21, r21
    56f0:	ff 93       	push	r31
    56f2:	ef 93       	push	r30
    56f4:	0e 94 48 25 	call	0x4a90	; 0x4a90 <__udivmodsi4>
    56f8:	ef 91       	pop	r30
    56fa:	ff 91       	pop	r31
    56fc:	60 5d       	subi	r22, 0xD0	; 208
    56fe:	6a 33       	cpi	r22, 0x3A	; 58
    5700:	0c f0       	brlt	.+2      	; 0x5704 <ultoa+0x2e>
    5702:	69 5d       	subi	r22, 0xD9	; 217
    5704:	61 93       	st	Z+, r22
    5706:	b9 01       	movw	r22, r18
    5708:	ca 01       	movw	r24, r20
    570a:	60 50       	subi	r22, 0x00	; 0
    570c:	70 40       	sbci	r23, 0x00	; 0
    570e:	80 40       	sbci	r24, 0x00	; 0
    5710:	90 40       	sbci	r25, 0x00	; 0
    5712:	51 f7       	brne	.-44     	; 0x56e8 <ultoa+0x12>
    5714:	10 82       	st	Z, r1
    5716:	8f 91       	pop	r24
    5718:	9f 91       	pop	r25
    571a:	cf 91       	pop	r28
    571c:	0c 94 93 2b 	jmp	0x5726	; 0x5726 <strrev>

00005720 <__ctype_isfalse>:
    5720:	99 27       	eor	r25, r25
    5722:	88 27       	eor	r24, r24

00005724 <__ctype_istrue>:
    5724:	08 95       	ret

00005726 <strrev>:
    5726:	dc 01       	movw	r26, r24
    5728:	fc 01       	movw	r30, r24
    572a:	67 2f       	mov	r22, r23
    572c:	71 91       	ld	r23, Z+
    572e:	77 23       	and	r23, r23
    5730:	e1 f7       	brne	.-8      	; 0x572a <strrev+0x4>
    5732:	32 97       	sbiw	r30, 0x02	; 2
    5734:	04 c0       	rjmp	.+8      	; 0x573e <strrev+0x18>
    5736:	7c 91       	ld	r23, X
    5738:	6d 93       	st	X+, r22
    573a:	70 83       	st	Z, r23
    573c:	62 91       	ld	r22, -Z
    573e:	ae 17       	cp	r26, r30
    5740:	bf 07       	cpc	r27, r31
    5742:	c8 f3       	brcs	.-14     	; 0x5736 <strrev+0x10>
    5744:	08 95       	ret

00005746 <_exit>:
    5746:	f8 94       	cli

00005748 <__stop_program>:
    5748:	ff cf       	rjmp	.-2      	; 0x5748 <__stop_program>
